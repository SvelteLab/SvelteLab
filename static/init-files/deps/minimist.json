{"directory":{".eslintrc":{"file":{"contents":"{\n\t\"root\": true,\n\n\t\"extends\": \"@ljharb/eslint-config/node/0.4\",\n\n\t\"rules\": {\n\t\t\"array-element-newline\": 0,\n\t\t\"complexity\": 0,\n\t\t\"func-style\": [2, \"declaration\"],\n\t\t\"max-lines-per-function\": 0,\n\t\t\"max-nested-callbacks\": 1,\n\t\t\"max-statements-per-line\": 1,\n\t\t\"max-statements\": 0,\n\t\t\"multiline-comment-style\": 0,\n\t\t\"no-continue\": 1,\n\t\t\"no-param-reassign\": 1,\n\t\t\"no-restricted-syntax\": 1,\n\t\t\"object-curly-newline\": 0,\n\t},\n\n\t\"overrides\": [\n\t\t{\n\t\t\t\"files\": \"test/**\",\n\t\t\t\"rules\": {\n\t\t\t\t\"camelcase\": 0,\n\t\t\t},\n\t\t},\n\t]\n}\n"}},".github":{"directory":{"FUNDING.yml":{"file":{"contents":"# These are supported funding model platforms\n\ngithub: [ljharb]\npatreon: # Replace with a single Patreon username\nopen_collective: # Replace with a single Open Collective username\nko_fi: # Replace with a single Ko-fi username\ntidelift: npm/minimist\ncommunity_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry\nliberapay: # Replace with a single Liberapay username\nissuehunt: # Replace with a single IssueHunt username\notechie: # Replace with a single Otechie username\ncustom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']\n"}}}},".nycrc":{"file":{"contents":"{\n\t\"all\": true,\n\t\"check-coverage\": false,\n\t\"reporter\": [\"text-summary\", \"text\", \"html\", \"json\"],\n\t\"lines\": 86,\n\t\"statements\": 85.93,\n\t\"functions\": 82.43,\n\t\"branches\": 76.06,\n\t\"exclude\": [\n\t\t\"coverage\",\n\t\t\"example\",\n\t\t\"test\"\n\t]\n}\n"}},"CHANGELOG.md":{"file":{"contents":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.2.8](https://github.com/minimistjs/minimist/compare/v1.2.7...v1.2.8) - 2023-02-09\n\n### Merged\n\n- [Fix] Fix long option followed by single dash [`#17`](https://github.com/minimistjs/minimist/pull/17)\n- [Tests] Remove duplicate test [`#12`](https://github.com/minimistjs/minimist/pull/12)\n- [Fix] opt.string works with multiple aliases [`#10`](https://github.com/minimistjs/minimist/pull/10)\n\n### Fixed\n\n- [Fix] Fix long option followed by single dash (#17) [`#15`](https://github.com/minimistjs/minimist/issues/15)\n- [Tests] Remove duplicate test (#12) [`#8`](https://github.com/minimistjs/minimist/issues/8)\n- [Fix] Fix long option followed by single dash [`#15`](https://github.com/minimistjs/minimist/issues/15)\n- [Fix] opt.string works with multiple aliases (#10) [`#9`](https://github.com/minimistjs/minimist/issues/9)\n- [Fix] Fix handling of short option with non-trivial equals [`#5`](https://github.com/minimistjs/minimist/issues/5)\n- [Tests] Remove duplicate test [`#8`](https://github.com/minimistjs/minimist/issues/8)\n- [Fix] opt.string works with multiple aliases [`#9`](https://github.com/minimistjs/minimist/issues/9)\n\n### Commits\n\n- Merge tag 'v0.2.3' [`a026794`](https://github.com/minimistjs/minimist/commit/a0267947c7870fc5847cf2d437fbe33f392767da)\n- [eslint] fix indentation and whitespace [`5368ca4`](https://github.com/minimistjs/minimist/commit/5368ca4147e974138a54cc0dc4cea8f756546b70)\n- [eslint] fix indentation and whitespace [`e5f5067`](https://github.com/minimistjs/minimist/commit/e5f5067259ceeaf0b098d14bec910f87e58708c7)\n- [eslint] more cleanup [`62fde7d`](https://github.com/minimistjs/minimist/commit/62fde7d935f83417fb046741531a9e2346a36976)\n- [eslint] more cleanup [`36ac5d0`](https://github.com/minimistjs/minimist/commit/36ac5d0d95e4947d074e5737d94814034ca335d1)\n- [meta] add `auto-changelog` [`73923d2`](https://github.com/minimistjs/minimist/commit/73923d223553fca08b1ba77e3fbc2a492862ae4c)\n- [actions] add reusable workflows [`d80727d`](https://github.com/minimistjs/minimist/commit/d80727df77bfa9e631044d7f16368d8f09242c91)\n- [eslint] add eslint; rules to enable later are warnings [`48bc06a`](https://github.com/minimistjs/minimist/commit/48bc06a1b41f00e9cdf183db34f7a51ba70e98d4)\n- [eslint] fix indentation [`34b0f1c`](https://github.com/minimistjs/minimist/commit/34b0f1ccaa45183c3c4f06a91f9b405180a6f982)\n- [readme] rename and add badges [`5df0fe4`](https://github.com/minimistjs/minimist/commit/5df0fe49211bd09a3636f8686a7cb3012c3e98f0)\n- [Dev Deps] switch from `covert` to `nyc` [`a48b128`](https://github.com/minimistjs/minimist/commit/a48b128fdb8d427dfb20a15273f83e38d97bef07)\n- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`f0fb958`](https://github.com/minimistjs/minimist/commit/f0fb958e9a1fe980cdffc436a211b0bda58f621b)\n- [meta] create FUNDING.yml; add `funding` in package.json [`3639e0c`](https://github.com/minimistjs/minimist/commit/3639e0c819359a366387e425ab6eabf4c78d3caa)\n- [meta] use `npmignore` to autogenerate an npmignore file [`be2e038`](https://github.com/minimistjs/minimist/commit/be2e038c342d8333b32f0fde67a0026b79c8150e)\n- Only apps should have lockfiles [`282b570`](https://github.com/minimistjs/minimist/commit/282b570e7489d01b03f2d6d3dabf79cd3e5f84cf)\n- isConstructorOrProto adapted from PR [`ef9153f`](https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`098873c`](https://github.com/minimistjs/minimist/commit/098873c213cdb7c92e55ae1ef5aa1af3a8192a79)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`3124ed3`](https://github.com/minimistjs/minimist/commit/3124ed3e46306301ebb3c834874ce0241555c2c4)\n- [meta] add `safe-publish-latest` [`4b927de`](https://github.com/minimistjs/minimist/commit/4b927de696d561c636b4f43bf49d4597cb36d6d6)\n- [Tests] add `aud` in `posttest` [`b32d9bd`](https://github.com/minimistjs/minimist/commit/b32d9bd0ab340f4e9f8c3a97ff2a4424f25fab8c)\n- [meta] update repo URLs [`f9fdfc0`](https://github.com/minimistjs/minimist/commit/f9fdfc032c54884d9a9996a390c63cd0719bbe1a)\n- [actions] Avoid 0.6 tests due to build failures [`ba92fe6`](https://github.com/minimistjs/minimist/commit/ba92fe6ebbdc0431cca9a2ea8f27beb492f5e4ec)\n- [Dev Deps] update `tape` [`950eaa7`](https://github.com/minimistjs/minimist/commit/950eaa74f112e04d23e9c606c67472c46739b473)\n- [Dev Deps] add missing `npmignore` dev dep [`3226afa`](https://github.com/minimistjs/minimist/commit/3226afaf09e9d127ca369742437fe6e88f752d6b)\n- Merge tag 'v0.2.2' [`980d7ac`](https://github.com/minimistjs/minimist/commit/980d7ac61a0b4bd552711251ac107d506b23e41f)\n\n## [v1.2.7](https://github.com/minimistjs/minimist/compare/v1.2.6...v1.2.7) - 2022-10-10\n\n### Commits\n\n- [meta] add `auto-changelog` [`0ebf4eb`](https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83c3c)\n- [actions] add reusable workflows [`e115b63`](https://github.com/minimistjs/minimist/commit/e115b63fa9d3909f33b00a2db647ff79068388de)\n- [eslint] add eslint; rules to enable later are warnings [`f58745b`](https://github.com/minimistjs/minimist/commit/f58745b9bb84348e1be72af7dbba5840c7c13013)\n- [Dev Deps] switch from `covert` to `nyc` [`ab03356`](https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65)\n- [readme] rename and add badges [`236f4a0`](https://github.com/minimistjs/minimist/commit/236f4a07e4ebe5ee44f1496ec6974991ab293ffd)\n- [meta] create FUNDING.yml; add `funding` in package.json [`783a49b`](https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a)\n- [meta] use `npmignore` to autogenerate an npmignore file [`f81ece6`](https://github.com/minimistjs/minimist/commit/f81ece6aaec2fa14e69ff4f1e0407a8c4e2635a2)\n- Only apps should have lockfiles [`56cad44`](https://github.com/minimistjs/minimist/commit/56cad44c7f879b9bb5ec18fcc349308024a89bfc)\n- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`49c5f9f`](https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded)\n- [Tests] add `aud` in `posttest` [`228ae93`](https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280)\n- [meta] add `safe-publish-latest` [`01fc23f`](https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff)\n- [meta] update repo URLs [`6b164c7`](https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd)\n\n## [v1.2.6](https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6) - 2022-03-21\n\n### Commits\n\n- test from prototype pollution PR [`bc8ecee`](https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb)\n- isConstructorOrProto adapted from PR [`c2b9819`](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- security notice for additional prototype pollution issue [`ef88b93`](https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2)\n\n## [v1.2.5](https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5) - 2020-03-12\n\n## [v1.2.4](https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4) - 2020-03-11\n\n### Commits\n\n- security notice [`4cf1354`](https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f)\n- additional test for constructor prototype pollution [`1043d21`](https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b)\n\n## [v1.2.3](https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3) - 2020-03-10\n\n### Commits\n\n- more failing proto pollution tests [`13c01a5`](https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc)\n- even more aggressive checks for protocol pollution [`38a4d1c`](https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n\n## [v1.2.2](https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2) - 2020-03-10\n\n### Commits\n\n- failing test for protocol pollution [`0efed03`](https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab)\n- cleanup [`67d3722`](https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2)\n- console.dir -&gt; console.log [`47acf72`](https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54)\n- don't assign onto __proto__ [`63e7ed0`](https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n\n## [v1.2.1](https://github.com/minimistjs/minimist/compare/v1.2.0...v1.2.1) - 2020-03-10\n\n### Merged\n\n- move the `opts['--']` example back where it belongs [`#63`](https://github.com/minimistjs/minimist/pull/63)\n\n### Commits\n\n- add test [`6be5dae`](https://github.com/minimistjs/minimist/commit/6be5dae35a32a987bcf4137fcd6c19c5200ee909)\n- fix bad boolean regexp [`ac3fc79`](https://github.com/minimistjs/minimist/commit/ac3fc796e63b95128fdbdf67ea7fad71bd59aa76)\n\n## [v1.2.0](https://github.com/minimistjs/minimist/compare/v1.1.3...v1.2.0) - 2015-08-24\n\n### Commits\n\n- failing -k=v short test [`63416b8`](https://github.com/minimistjs/minimist/commit/63416b8cd1d0d70e4714564cce465a36e4dd26d7)\n- kv short fix [`6bbe145`](https://github.com/minimistjs/minimist/commit/6bbe14529166245e86424f220a2321442fe88dc3)\n- failing kv short test [`f72ab7f`](https://github.com/minimistjs/minimist/commit/f72ab7f4572adc52902c9b6873cc969192f01b10)\n- fixed kv test [`f5a48c3`](https://github.com/minimistjs/minimist/commit/f5a48c3e50e40ca54f00c8e84de4b4d6e9897fa8)\n- enforce space between arg key and value [`86b321a`](https://github.com/minimistjs/minimist/commit/86b321affe648a8e016c095a4f0efa9d9074f502)\n\n## [v1.1.3](https://github.com/minimistjs/minimist/compare/v1.1.2...v1.1.3) - 2015-08-06\n\n### Commits\n\n- add failing test - boolean alias array [`0fa3c5b`](https://github.com/minimistjs/minimist/commit/0fa3c5b3dd98551ddecf5392831b4c21211743fc)\n- fix boolean values with multiple aliases [`9c0a6e7`](https://github.com/minimistjs/minimist/commit/9c0a6e7de25a273b11bbf9a7464f0bd833779795)\n\n## [v1.1.2](https://github.com/minimistjs/minimist/compare/v1.1.1...v1.1.2) - 2015-07-22\n\n### Commits\n\n- Convert boolean arguments to boolean values [`8f3dc27`](https://github.com/minimistjs/minimist/commit/8f3dc27cf833f1d54671b6d0bcb55c2fe19672a9)\n- use non-ancient npm, node 0.12 and iojs [`61ed1d0`](https://github.com/minimistjs/minimist/commit/61ed1d034b9ec7282764ce76f3992b1a0b4906ae)\n- an older npm for 0.8 [`25cf778`](https://github.com/minimistjs/minimist/commit/25cf778b1220e7838a526832ad6972f75244054f)\n\n## [v1.1.1](https://github.com/minimistjs/minimist/compare/v1.1.0...v1.1.1) - 2015-03-10\n\n### Commits\n\n- check that they type of a value is a boolean, not just that it is currently set to a boolean [`6863198`](https://github.com/minimistjs/minimist/commit/6863198e36139830ff1f20ffdceaddd93f2c1db9)\n- upgrade tape, fix type issues from old tape version [`806712d`](https://github.com/minimistjs/minimist/commit/806712df91604ed02b8e39aa372b84aea659ee34)\n- test for setting a boolean to a null default [`8c444fe`](https://github.com/minimistjs/minimist/commit/8c444fe89384ded7d441c120915ea60620b01dd3)\n- if the previous value was a boolean, without an default (or with an alias) don't make an array either [`e5f419a`](https://github.com/minimistjs/minimist/commit/e5f419a3b5b3bc3f9e5ac71b7040621af70ed2dd)\n\n## [v1.1.0](https://github.com/minimistjs/minimist/compare/v1.0.0...v1.1.0) - 2014-08-10\n\n### Commits\n\n- add support for handling \"unknown\" options not registered with the parser. [`6f3cc5d`](https://github.com/minimistjs/minimist/commit/6f3cc5d4e84524932a6ef2ce3592acc67cdd4383)\n- reformat package.json [`02ed371`](https://github.com/minimistjs/minimist/commit/02ed37115194d3697ff358e8e25e5e66bab1d9f8)\n- coverage script [`e5531ba`](https://github.com/minimistjs/minimist/commit/e5531ba0479da3b8138d3d8cac545d84ccb1c8df)\n- extra fn to get 100% coverage again [`a6972da`](https://github.com/minimistjs/minimist/commit/a6972da89e56bf77642f8ec05a13b6558db93498)\n\n## [v1.0.0](https://github.com/minimistjs/minimist/compare/v0.2.3...v1.0.0) - 2014-08-10\n\n### Commits\n\n- added stopEarly option [`471c7e4`](https://github.com/minimistjs/minimist/commit/471c7e4a7e910fc7ad8f9df850a186daf32c64e9)\n- fix list [`fef6ae7`](https://github.com/minimistjs/minimist/commit/fef6ae79c38b9dc1c49569abb7cd04eb965eac5e)\n\n## [v0.2.3](https://github.com/minimistjs/minimist/compare/v0.2.2...v0.2.3) - 2023-02-09\n\n### Merged\n\n- [Fix] Fix long option followed by single dash [`#17`](https://github.com/minimistjs/minimist/pull/17)\n- [Tests] Remove duplicate test [`#12`](https://github.com/minimistjs/minimist/pull/12)\n- [Fix] opt.string works with multiple aliases [`#10`](https://github.com/minimistjs/minimist/pull/10)\n\n### Fixed\n\n- [Fix] Fix long option followed by single dash (#17) [`#15`](https://github.com/minimistjs/minimist/issues/15)\n- [Tests] Remove duplicate test (#12) [`#8`](https://github.com/minimistjs/minimist/issues/8)\n- [Fix] opt.string works with multiple aliases (#10) [`#9`](https://github.com/minimistjs/minimist/issues/9)\n\n### Commits\n\n- [eslint] fix indentation and whitespace [`e5f5067`](https://github.com/minimistjs/minimist/commit/e5f5067259ceeaf0b098d14bec910f87e58708c7)\n- [eslint] more cleanup [`36ac5d0`](https://github.com/minimistjs/minimist/commit/36ac5d0d95e4947d074e5737d94814034ca335d1)\n- [eslint] fix indentation [`34b0f1c`](https://github.com/minimistjs/minimist/commit/34b0f1ccaa45183c3c4f06a91f9b405180a6f982)\n- isConstructorOrProto adapted from PR [`ef9153f`](https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`098873c`](https://github.com/minimistjs/minimist/commit/098873c213cdb7c92e55ae1ef5aa1af3a8192a79)\n- [Dev Deps] add missing `npmignore` dev dep [`3226afa`](https://github.com/minimistjs/minimist/commit/3226afaf09e9d127ca369742437fe6e88f752d6b)\n\n## [v0.2.2](https://github.com/minimistjs/minimist/compare/v0.2.1...v0.2.2) - 2022-10-10\n\n### Commits\n\n- [meta] add `auto-changelog` [`73923d2`](https://github.com/minimistjs/minimist/commit/73923d223553fca08b1ba77e3fbc2a492862ae4c)\n- [actions] add reusable workflows [`d80727d`](https://github.com/minimistjs/minimist/commit/d80727df77bfa9e631044d7f16368d8f09242c91)\n- [eslint] add eslint; rules to enable later are warnings [`48bc06a`](https://github.com/minimistjs/minimist/commit/48bc06a1b41f00e9cdf183db34f7a51ba70e98d4)\n- [readme] rename and add badges [`5df0fe4`](https://github.com/minimistjs/minimist/commit/5df0fe49211bd09a3636f8686a7cb3012c3e98f0)\n- [Dev Deps] switch from `covert` to `nyc` [`a48b128`](https://github.com/minimistjs/minimist/commit/a48b128fdb8d427dfb20a15273f83e38d97bef07)\n- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`f0fb958`](https://github.com/minimistjs/minimist/commit/f0fb958e9a1fe980cdffc436a211b0bda58f621b)\n- [meta] create FUNDING.yml; add `funding` in package.json [`3639e0c`](https://github.com/minimistjs/minimist/commit/3639e0c819359a366387e425ab6eabf4c78d3caa)\n- [meta] use `npmignore` to autogenerate an npmignore file [`be2e038`](https://github.com/minimistjs/minimist/commit/be2e038c342d8333b32f0fde67a0026b79c8150e)\n- Only apps should have lockfiles [`282b570`](https://github.com/minimistjs/minimist/commit/282b570e7489d01b03f2d6d3dabf79cd3e5f84cf)\n- [meta] add `safe-publish-latest` [`4b927de`](https://github.com/minimistjs/minimist/commit/4b927de696d561c636b4f43bf49d4597cb36d6d6)\n- [Tests] add `aud` in `posttest` [`b32d9bd`](https://github.com/minimistjs/minimist/commit/b32d9bd0ab340f4e9f8c3a97ff2a4424f25fab8c)\n- [meta] update repo URLs [`f9fdfc0`](https://github.com/minimistjs/minimist/commit/f9fdfc032c54884d9a9996a390c63cd0719bbe1a)\n\n## [v0.2.1](https://github.com/minimistjs/minimist/compare/v0.2.0...v0.2.1) - 2020-03-12\n\n## [v0.2.0](https://github.com/minimistjs/minimist/compare/v0.1.0...v0.2.0) - 2014-06-19\n\n### Commits\n\n- support all-boolean mode [`450a97f`](https://github.com/minimistjs/minimist/commit/450a97f6e2bc85c7a4a13185c19a818d9a5ebe69)\n\n## [v0.1.0](https://github.com/minimistjs/minimist/compare/v0.0.10...v0.1.0) - 2014-05-12\n\n### Commits\n\n- Provide a mechanism to segregate -- arguments [`ce4a1e6`](https://github.com/minimistjs/minimist/commit/ce4a1e63a7e8d5ab88d2a3768adefa6af98a445a)\n- documented argv['--'] [`14db0e6`](https://github.com/minimistjs/minimist/commit/14db0e6dbc6d2b9e472adaa54dad7004b364634f)\n- Adding a test-case for notFlags segregation [`715c1e3`](https://github.com/minimistjs/minimist/commit/715c1e3714be223f998f6c537af6b505f0236c16)\n\n## [v0.0.10](https://github.com/minimistjs/minimist/compare/v0.0.9...v0.0.10) - 2014-05-11\n\n### Commits\n\n- dedicated boolean test [`46e448f`](https://github.com/minimistjs/minimist/commit/46e448f9f513cfeb2bcc8b688b9b47ba1e515c2b)\n- dedicated num test [`9bf2d36`](https://github.com/minimistjs/minimist/commit/9bf2d36f1d3b8795be90b8f7de0a937f098aa394)\n- aliased values treated as strings [`1ab743b`](https://github.com/minimistjs/minimist/commit/1ab743bad4484d69f1259bed42f9531de01119de)\n- cover the case of already numbers, at 100% coverage [`b2bb044`](https://github.com/minimistjs/minimist/commit/b2bb04436599d77a2ce029e8e555e25b3aa55d13)\n- another test for higher coverage [`3662624`](https://github.com/minimistjs/minimist/commit/3662624be976d5489d486a856849c048d13be903)\n\n## [v0.0.9](https://github.com/minimistjs/minimist/compare/v0.0.8...v0.0.9) - 2014-05-08\n\n### Commits\n\n- Eliminate `longest` fn. [`824f642`](https://github.com/minimistjs/minimist/commit/824f642038d1b02ede68b6261d1d65163390929a)\n\n## [v0.0.8](https://github.com/minimistjs/minimist/compare/v0.0.7...v0.0.8) - 2014-02-20\n\n### Commits\n\n- return '' if flag is string and empty [`fa63ed4`](https://github.com/minimistjs/minimist/commit/fa63ed4651a4ef4eefddce34188e0d98d745a263)\n- handle joined single letters [`66c248f`](https://github.com/minimistjs/minimist/commit/66c248f0241d4d421d193b022e9e365f11178534)\n\n## [v0.0.7](https://github.com/minimistjs/minimist/compare/v0.0.6...v0.0.7) - 2014-02-08\n\n### Commits\n\n- another swap of .test for .match [`d1da408`](https://github.com/minimistjs/minimist/commit/d1da40819acbe846d89a5c02721211e3c1260dde)\n\n## [v0.0.6](https://github.com/minimistjs/minimist/compare/v0.0.5...v0.0.6) - 2014-02-08\n\n### Commits\n\n- use .test() instead of .match() to not crash on non-string values in the arguments array [`7e0d1ad`](https://github.com/minimistjs/minimist/commit/7e0d1add8c9e5b9b20a4d3d0f9a94d824c578da1)\n\n## [v0.0.5](https://github.com/minimistjs/minimist/compare/v0.0.4...v0.0.5) - 2013-09-18\n\n### Commits\n\n- Improve '--' handling. [`b11822c`](https://github.com/minimistjs/minimist/commit/b11822c09cc9d2460f30384d12afc0b953c037a4)\n\n## [v0.0.4](https://github.com/minimistjs/minimist/compare/v0.0.3...v0.0.4) - 2013-09-17\n\n## [v0.0.3](https://github.com/minimistjs/minimist/compare/v0.0.2...v0.0.3) - 2013-09-12\n\n### Commits\n\n- failing test for single dash preceeding a double dash [`b465514`](https://github.com/minimistjs/minimist/commit/b465514b82c9ae28972d714facd951deb2ad762b)\n- fix for the dot test [`6a095f1`](https://github.com/minimistjs/minimist/commit/6a095f1d364c8fab2d6753d2291a0649315d297a)\n\n## [v0.0.2](https://github.com/minimistjs/minimist/compare/v0.0.1...v0.0.2) - 2013-08-28\n\n### Commits\n\n- allow dotted aliases & defaults [`321c33e`](https://github.com/minimistjs/minimist/commit/321c33e755485faaeb44eeb1c05d33b2e0a5a7c4)\n- use a better version of ff [`e40f611`](https://github.com/minimistjs/minimist/commit/e40f61114cf7be6f7947f7b3eed345853a67dbbb)\n\n## [v0.0.1](https://github.com/minimistjs/minimist/compare/v0.0.0...v0.0.1) - 2013-06-25\n\n### Commits\n\n- remove trailing commas [`6ff0fa0`](https://github.com/minimistjs/minimist/commit/6ff0fa055064f15dbe06d50b89d5173a6796e1db)\n\n## v0.0.0 - 2013-06-25\n\n### Commits\n\n- half of the parse test ported [`3079326`](https://github.com/minimistjs/minimist/commit/307932601325087de6cf94188eb798ffc4f3088a)\n- stripped down code and a passing test from optimist [`7cced88`](https://github.com/minimistjs/minimist/commit/7cced88d82e399d1a03ed23eb667f04d3f320d10)\n- ported parse tests completely over [`9448754`](https://github.com/minimistjs/minimist/commit/944875452e0820df6830b1408c26a0f7d3e1db04)\n- docs, package.json [`a5bf46a`](https://github.com/minimistjs/minimist/commit/a5bf46ac9bb3bd114a9c340276c62c1091e538d5)\n- move more short tests into short.js [`503edb5`](https://github.com/minimistjs/minimist/commit/503edb5c41d89c0d40831ee517154fc13b0f18b9)\n- default bool test was wrong, not the code [`1b9f5db`](https://github.com/minimistjs/minimist/commit/1b9f5db4741b49962846081b68518de824992097)\n- passing long tests ripped out of parse.js [`7972c4a`](https://github.com/minimistjs/minimist/commit/7972c4aff1f4803079e1668006658e2a761a0428)\n- badges [`84c0370`](https://github.com/minimistjs/minimist/commit/84c037063664d42878aace715fe6572ce01b6f3b)\n- all the tests now ported, some failures [`64239ed`](https://github.com/minimistjs/minimist/commit/64239edfe92c711c4eb0da254fcdfad2a5fdb605)\n- failing short test [`f8a5341`](https://github.com/minimistjs/minimist/commit/f8a534112dd1138d2fad722def56a848480c446f)\n- fixed the numeric test [`6b034f3`](https://github.com/minimistjs/minimist/commit/6b034f37c79342c60083ed97fd222e16928aac51)\n"}},"example":{"directory":{"parse.js":{"file":{"contents":"'use strict';\n\nvar argv = require('../')(process.argv.slice(2));\nconsole.log(argv);\n"}}}},"index.js":{"file":{"contents":"'use strict';\n\nfunction hasKey(obj, keys) {\n\tvar o = obj;\n\tkeys.slice(0, -1).forEach(function (key) {\n\t\to = o[key] || {};\n\t});\n\n\tvar key = keys[keys.length - 1];\n\treturn key in o;\n}\n\nfunction isNumber(x) {\n\tif (typeof x === 'number') { return true; }\n\tif ((/^0x[0-9a-f]+$/i).test(x)) { return true; }\n\treturn (/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/).test(x);\n}\n\nfunction isConstructorOrProto(obj, key) {\n\treturn (key === 'constructor' && typeof obj[key] === 'function') || key === '__proto__';\n}\n\nmodule.exports = function (args, opts) {\n\tif (!opts) { opts = {}; }\n\n\tvar flags = {\n\t\tbools: {},\n\t\tstrings: {},\n\t\tunknownFn: null,\n\t};\n\n\tif (typeof opts.unknown === 'function') {\n\t\tflags.unknownFn = opts.unknown;\n\t}\n\n\tif (typeof opts.boolean === 'boolean' && opts.boolean) {\n\t\tflags.allBools = true;\n\t} else {\n\t\t[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n\t\t\tflags.bools[key] = true;\n\t\t});\n\t}\n\n\tvar aliases = {};\n\n\tfunction aliasIsBoolean(key) {\n\t\treturn aliases[key].some(function (x) {\n\t\t\treturn flags.bools[x];\n\t\t});\n\t}\n\n\tObject.keys(opts.alias || {}).forEach(function (key) {\n\t\taliases[key] = [].concat(opts.alias[key]);\n\t\taliases[key].forEach(function (x) {\n\t\t\taliases[x] = [key].concat(aliases[key].filter(function (y) {\n\t\t\t\treturn x !== y;\n\t\t\t}));\n\t\t});\n\t});\n\n\t[].concat(opts.string).filter(Boolean).forEach(function (key) {\n\t\tflags.strings[key] = true;\n\t\tif (aliases[key]) {\n\t\t\t[].concat(aliases[key]).forEach(function (k) {\n\t\t\t\tflags.strings[k] = true;\n\t\t\t});\n\t\t}\n\t});\n\n\tvar defaults = opts.default || {};\n\n\tvar argv = { _: [] };\n\n\tfunction argDefined(key, arg) {\n\t\treturn (flags.allBools && (/^--[^=]+$/).test(arg))\n\t\t\t|| flags.strings[key]\n\t\t\t|| flags.bools[key]\n\t\t\t|| aliases[key];\n\t}\n\n\tfunction setKey(obj, keys, value) {\n\t\tvar o = obj;\n\t\tfor (var i = 0; i < keys.length - 1; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (isConstructorOrProto(o, key)) { return; }\n\t\t\tif (o[key] === undefined) { o[key] = {}; }\n\t\t\tif (\n\t\t\t\to[key] === Object.prototype\n\t\t\t\t|| o[key] === Number.prototype\n\t\t\t\t|| o[key] === String.prototype\n\t\t\t) {\n\t\t\t\to[key] = {};\n\t\t\t}\n\t\t\tif (o[key] === Array.prototype) { o[key] = []; }\n\t\t\to = o[key];\n\t\t}\n\n\t\tvar lastKey = keys[keys.length - 1];\n\t\tif (isConstructorOrProto(o, lastKey)) { return; }\n\t\tif (\n\t\t\to === Object.prototype\n\t\t\t|| o === Number.prototype\n\t\t\t|| o === String.prototype\n\t\t) {\n\t\t\to = {};\n\t\t}\n\t\tif (o === Array.prototype) { o = []; }\n\t\tif (o[lastKey] === undefined || flags.bools[lastKey] || typeof o[lastKey] === 'boolean') {\n\t\t\to[lastKey] = value;\n\t\t} else if (Array.isArray(o[lastKey])) {\n\t\t\to[lastKey].push(value);\n\t\t} else {\n\t\t\to[lastKey] = [o[lastKey], value];\n\t\t}\n\t}\n\n\tfunction setArg(key, val, arg) {\n\t\tif (arg && flags.unknownFn && !argDefined(key, arg)) {\n\t\t\tif (flags.unknownFn(arg) === false) { return; }\n\t\t}\n\n\t\tvar value = !flags.strings[key] && isNumber(val)\n\t\t\t? Number(val)\n\t\t\t: val;\n\t\tsetKey(argv, key.split('.'), value);\n\n\t\t(aliases[key] || []).forEach(function (x) {\n\t\t\tsetKey(argv, x.split('.'), value);\n\t\t});\n\t}\n\n\tObject.keys(flags.bools).forEach(function (key) {\n\t\tsetArg(key, defaults[key] === undefined ? false : defaults[key]);\n\t});\n\n\tvar notFlags = [];\n\n\tif (args.indexOf('--') !== -1) {\n\t\tnotFlags = args.slice(args.indexOf('--') + 1);\n\t\targs = args.slice(0, args.indexOf('--'));\n\t}\n\n\tfor (var i = 0; i < args.length; i++) {\n\t\tvar arg = args[i];\n\t\tvar key;\n\t\tvar next;\n\n\t\tif ((/^--.+=/).test(arg)) {\n\t\t\t// Using [\\s\\S] instead of . because js doesn't support the\n\t\t\t// 'dotall' regex modifier. See:\n\t\t\t// http://stackoverflow.com/a/1068308/13216\n\t\t\tvar m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n\t\t\tkey = m[1];\n\t\t\tvar value = m[2];\n\t\t\tif (flags.bools[key]) {\n\t\t\t\tvalue = value !== 'false';\n\t\t\t}\n\t\t\tsetArg(key, value, arg);\n\t\t} else if ((/^--no-.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--no-(.+)/)[1];\n\t\t\tsetArg(key, false, arg);\n\t\t} else if ((/^--.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--(.+)/)[1];\n\t\t\tnext = args[i + 1];\n\t\t\tif (\n\t\t\t\tnext !== undefined\n\t\t\t\t&& !(/^(-|--)[^-]/).test(next)\n\t\t\t\t&& !flags.bools[key]\n\t\t\t\t&& !flags.allBools\n\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t) {\n\t\t\t\tsetArg(key, next, arg);\n\t\t\t\ti += 1;\n\t\t\t} else if ((/^(true|false)$/).test(next)) {\n\t\t\t\tsetArg(key, next === 'true', arg);\n\t\t\t\ti += 1;\n\t\t\t} else {\n\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t}\n\t\t} else if ((/^-[^-]+/).test(arg)) {\n\t\t\tvar letters = arg.slice(1, -1).split('');\n\n\t\t\tvar broken = false;\n\t\t\tfor (var j = 0; j < letters.length; j++) {\n\t\t\t\tnext = arg.slice(j + 2);\n\n\t\t\t\tif (next === '-') {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ((/[A-Za-z]/).test(letters[j]) && next[0] === '=') {\n\t\t\t\t\tsetArg(letters[j], next.slice(1), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(/[A-Za-z]/).test(letters[j])\n\t\t\t\t\t&& (/-?\\d+(\\.\\d*)?(e-?\\d+)?$/).test(next)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n\t\t\t\t\tsetArg(letters[j], arg.slice(j + 2), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkey = arg.slice(-1)[0];\n\t\t\tif (!broken && key !== '-') {\n\t\t\t\tif (\n\t\t\t\t\targs[i + 1]\n\t\t\t\t\t&& !(/^(-|--)[^-]/).test(args[i + 1])\n\t\t\t\t\t&& !flags.bools[key]\n\t\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(key, args[i + 1], arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (args[i + 1] && (/^(true|false)$/).test(args[i + 1])) {\n\t\t\t\t\tsetArg(key, args[i + 1] === 'true', arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n\t\t\t\targv._.push(flags.strings._ || !isNumber(arg) ? arg : Number(arg));\n\t\t\t}\n\t\t\tif (opts.stopEarly) {\n\t\t\t\targv._.push.apply(argv._, args.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.keys(defaults).forEach(function (k) {\n\t\tif (!hasKey(argv, k.split('.'))) {\n\t\t\tsetKey(argv, k.split('.'), defaults[k]);\n\n\t\t\t(aliases[k] || []).forEach(function (x) {\n\t\t\t\tsetKey(argv, x.split('.'), defaults[k]);\n\t\t\t});\n\t\t}\n\t});\n\n\tif (opts['--']) {\n\t\targv['--'] = notFlags.slice();\n\t} else {\n\t\tnotFlags.forEach(function (k) {\n\t\t\targv._.push(k);\n\t\t});\n\t}\n\n\treturn argv;\n};\n"}},"LICENSE":{"file":{"contents":"This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"}},"package.json":{"file":{"contents":"{\n\t\"name\": \"minimist\",\n\t\"version\": \"1.2.8\",\n\t\"description\": \"parse argument options\",\n\t\"main\": \"index.js\",\n\t\"devDependencies\": {\n\t\t\"@ljharb/eslint-config\": \"^21.0.1\",\n\t\t\"aud\": \"^2.0.2\",\n\t\t\"auto-changelog\": \"^2.4.0\",\n\t\t\"eslint\": \"=8.8.0\",\n\t\t\"in-publish\": \"^2.0.1\",\n\t\t\"npmignore\": \"^0.3.0\",\n\t\t\"nyc\": \"^10.3.2\",\n\t\t\"safe-publish-latest\": \"^2.0.0\",\n\t\t\"tape\": \"^5.6.3\"\n\t},\n\t\"scripts\": {\n\t\t\"prepack\": \"npmignore --auto --commentLines=auto\",\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\n\t\t\"pretest\": \"npm run lint\",\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\n\t\t\"test\": \"npm run tests-only\",\n\t\t\"posttest\": \"aud --production\",\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\n\t},\n\t\"testling\": {\n\t\t\"files\": \"test/*.js\",\n\t\t\"browsers\": [\n\t\t\t\"ie/6..latest\",\n\t\t\t\"ff/5\",\n\t\t\t\"firefox/latest\",\n\t\t\t\"chrome/10\",\n\t\t\t\"chrome/latest\",\n\t\t\t\"safari/5.1\",\n\t\t\t\"safari/latest\",\n\t\t\t\"opera/12\"\n\t\t]\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/minimistjs/minimist.git\"\n\t},\n\t\"homepage\": \"https://github.com/minimistjs/minimist\",\n\t\"keywords\": [\n\t\t\"argv\",\n\t\t\"getopt\",\n\t\t\"parser\",\n\t\t\"optimist\"\n\t],\n\t\"author\": {\n\t\t\"name\": \"James Halliday\",\n\t\t\"email\": \"mail@substack.net\",\n\t\t\"url\": \"http://substack.net\"\n\t},\n\t\"funding\": {\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\n\t},\n\t\"license\": \"MIT\",\n\t\"auto-changelog\": {\n\t\t\"output\": \"CHANGELOG.md\",\n\t\t\"template\": \"keepachangelog\",\n\t\t\"unreleased\": false,\n\t\t\"commitLimit\": false,\n\t\t\"backfillLimit\": false,\n\t\t\"hideCredit\": true\n\t},\n\t\"publishConfig\": {\n\t\t\"ignore\": [\n\t\t\t\".github/workflows\"\n\t\t]\n\t}\n}\n"}},"README.md":{"file":{"contents":"# minimist <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.log(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{\n\t_: ['foo', 'bar', 'baz'],\n\tx: 3,\n\ty: 4,\n\tn: 5,\n\ta: true,\n\tb: true,\n\tc: true,\n\tbeep: 'boop'\n}\n```\n\n# security\n\nPrevious versions had a prototype pollution bug that could cause privilege\nescalation in some circumstances when handling untrusted user input.\n\nPlease use version 1.2.6 or later:\n\n* https://security.snyk.io/vuln/SNYK-JS-MINIMIST-2429795 (version <=1.2.5)\n* https://snyk.io/vuln/SNYK-JS-MINIMIST-559764 (version <=1.2.3)\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a boolean, string or array of strings to always treat as\nbooleans. if `true` will treat all double hyphenated arguments without equal signs\nas boolean (e.g. affects `--foo`, not `-f` or `--foo=bar`)\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n* `opts.stopEarly` - when true, populate `argv._` with everything after the\nfirst non-option\n* `opts['--']` - when true, populate `argv._` with everything before the `--`\nand `argv['--']` with everything after the `--`. Here's an example:\n\n  ```\n  > require('./')('one two three -- four five --six'.split(' '), { '--': true })\n  {\n    _: ['one', 'two', 'three'],\n    '--': ['four', 'five', '--six']\n  }\n  ```\n\n  Note that with `opts['--']` set, parsing for arguments still stops after the\n  `--`.\n\n* `opts.unknown` - a function which is invoked with a command line parameter not\ndefined in the `opts` configuration object. If the function returns `false`, the\nunknown option is not added to `argv`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n\n[package-url]: https://npmjs.org/package/minimist\n[npm-version-svg]: https://versionbadg.es/minimistjs/minimist.svg\n[npm-badge-png]: https://nodei.co/npm/minimist.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/minimist.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/minimist.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=minimist\n[codecov-image]: https://codecov.io/gh/minimistjs/minimist/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/minimistjs/minimist/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/minimistjs/minimist\n[actions-url]: https://github.com/minimistjs/minimist/actions\n"}},"test":{"directory":{"all_bool.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean true (default all --args to boolean)', function (t) {\n\tvar argv = parse(['moo', '--honk', 'cow'], {\n\t\tboolean: true,\n\t});\n\n\tt.deepEqual(argv, {\n\t\thonk: true,\n\t\t_: ['moo', 'cow'],\n\t});\n\n\tt.deepEqual(typeof argv.honk, 'boolean');\n\tt.end();\n});\n\ntest('flag boolean true only affects double hyphen arguments without equals signs', function (t) {\n\tvar argv = parse(['moo', '--honk', 'cow', '-p', '55', '--tacos=good'], {\n\t\tboolean: true,\n\t});\n\n\tt.deepEqual(argv, {\n\t\thonk: true,\n\t\ttacos: 'good',\n\t\tp: 55,\n\t\t_: ['moo', 'cow'],\n\t});\n\n\tt.deepEqual(typeof argv.honk, 'boolean');\n\tt.end();\n});\n"}},"bool.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean default false', function (t) {\n\tvar argv = parse(['moo'], {\n\t\tboolean: ['t', 'verbose'],\n\t\tdefault: { verbose: false, t: false },\n\t});\n\n\tt.deepEqual(argv, {\n\t\tverbose: false,\n\t\tt: false,\n\t\t_: ['moo'],\n\t});\n\n\tt.deepEqual(typeof argv.verbose, 'boolean');\n\tt.deepEqual(typeof argv.t, 'boolean');\n\tt.end();\n\n});\n\ntest('boolean groups', function (t) {\n\tvar argv = parse(['-x', '-z', 'one', 'two', 'three'], {\n\t\tboolean: ['x', 'y', 'z'],\n\t});\n\n\tt.deepEqual(argv, {\n\t\tx: true,\n\t\ty: false,\n\t\tz: true,\n\t\t_: ['one', 'two', 'three'],\n\t});\n\n\tt.deepEqual(typeof argv.x, 'boolean');\n\tt.deepEqual(typeof argv.y, 'boolean');\n\tt.deepEqual(typeof argv.z, 'boolean');\n\tt.end();\n});\ntest('boolean and alias with chainable api', function (t) {\n\tvar aliased = ['-h', 'derp'];\n\tvar regular = ['--herp', 'derp'];\n\tvar aliasedArgv = parse(aliased, {\n\t\tboolean: 'herp',\n\t\talias: { h: 'herp' },\n\t});\n\tvar propertyArgv = parse(regular, {\n\t\tboolean: 'herp',\n\t\talias: { h: 'herp' },\n\t});\n\tvar expected = {\n\t\therp: true,\n\t\th: true,\n\t\t_: ['derp'],\n\t};\n\n\tt.same(aliasedArgv, expected);\n\tt.same(propertyArgv, expected);\n\tt.end();\n});\n\ntest('boolean and alias with options hash', function (t) {\n\tvar aliased = ['-h', 'derp'];\n\tvar regular = ['--herp', 'derp'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tboolean: 'herp',\n\t};\n\tvar aliasedArgv = parse(aliased, opts);\n\tvar propertyArgv = parse(regular, opts);\n\tvar expected = {\n\t\therp: true,\n\t\th: true,\n\t\t_: ['derp'],\n\t};\n\tt.same(aliasedArgv, expected);\n\tt.same(propertyArgv, expected);\n\tt.end();\n});\n\ntest('boolean and alias array with options hash', function (t) {\n\tvar aliased = ['-h', 'derp'];\n\tvar regular = ['--herp', 'derp'];\n\tvar alt = ['--harp', 'derp'];\n\tvar opts = {\n\t\talias: { h: ['herp', 'harp'] },\n\t\tboolean: 'h',\n\t};\n\tvar aliasedArgv = parse(aliased, opts);\n\tvar propertyArgv = parse(regular, opts);\n\tvar altPropertyArgv = parse(alt, opts);\n\tvar expected = {\n\t\tharp: true,\n\t\therp: true,\n\t\th: true,\n\t\t_: ['derp'],\n\t};\n\tt.same(aliasedArgv, expected);\n\tt.same(propertyArgv, expected);\n\tt.same(altPropertyArgv, expected);\n\tt.end();\n});\n\ntest('boolean and alias using explicit true', function (t) {\n\tvar aliased = ['-h', 'true'];\n\tvar regular = ['--herp', 'true'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tboolean: 'h',\n\t};\n\tvar aliasedArgv = parse(aliased, opts);\n\tvar propertyArgv = parse(regular, opts);\n\tvar expected = {\n\t\therp: true,\n\t\th: true,\n\t\t_: [],\n\t};\n\n\tt.same(aliasedArgv, expected);\n\tt.same(propertyArgv, expected);\n\tt.end();\n});\n\n// regression, see https://github.com/substack/node-optimist/issues/71\ntest('boolean and --x=true', function (t) {\n\tvar parsed = parse(['--boool', '--other=true'], {\n\t\tboolean: 'boool',\n\t});\n\n\tt.same(parsed.boool, true);\n\tt.same(parsed.other, 'true');\n\n\tparsed = parse(['--boool', '--other=false'], {\n\t\tboolean: 'boool',\n\t});\n\n\tt.same(parsed.boool, true);\n\tt.same(parsed.other, 'false');\n\tt.end();\n});\n\ntest('boolean --boool=true', function (t) {\n\tvar parsed = parse(['--boool=true'], {\n\t\tdefault: {\n\t\t\tboool: false,\n\t\t},\n\t\tboolean: ['boool'],\n\t});\n\n\tt.same(parsed.boool, true);\n\tt.end();\n});\n\ntest('boolean --boool=false', function (t) {\n\tvar parsed = parse(['--boool=false'], {\n\t\tdefault: {\n\t\t\tboool: true,\n\t\t},\n\t\tboolean: ['boool'],\n\t});\n\n\tt.same(parsed.boool, false);\n\tt.end();\n});\n\ntest('boolean using something similar to true', function (t) {\n\tvar opts = { boolean: 'h' };\n\tvar result = parse(['-h', 'true.txt'], opts);\n\tvar expected = {\n\t\th: true,\n\t\t_: ['true.txt'],\n\t};\n\n\tt.same(result, expected);\n\tt.end();\n});\n"}},"dash.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('-', function (t) {\n\tt.plan(6);\n\tt.deepEqual(parse(['-n', '-']), { n: '-', _: [] });\n\tt.deepEqual(parse(['--nnn', '-']), { nnn: '-', _: [] });\n\tt.deepEqual(parse(['-']), { _: ['-'] });\n\tt.deepEqual(parse(['-f-']), { f: '-', _: [] });\n\tt.deepEqual(\n\t\tparse(['-b', '-'], { boolean: 'b' }),\n\t\t{ b: true, _: ['-'] }\n\t);\n\tt.deepEqual(\n\t\tparse(['-s', '-'], { string: 's' }),\n\t\t{ s: '-', _: [] }\n\t);\n});\n\ntest('-a -- b', function (t) {\n\tt.plan(2);\n\tt.deepEqual(parse(['-a', '--', 'b']), { a: true, _: ['b'] });\n\tt.deepEqual(parse(['--a', '--', 'b']), { a: true, _: ['b'] });\n});\n\ntest('move arguments after the -- into their own `--` array', function (t) {\n\tt.plan(1);\n\tt.deepEqual(\n\t\tparse(['--name', 'John', 'before', '--', 'after'], { '--': true }),\n\t\t{ name: 'John', _: ['before'], '--': ['after'] }\n\t);\n});\n\ntest('--- option value', function (t) {\n\t// A multi-dash value is largely an edge case, but check the behaviour is as expected,\n\t// and in particular the same for short option and long option (as made consistent in Jan 2023).\n\tt.plan(2);\n\tt.deepEqual(parse(['-n', '---']), { n: '---', _: [] });\n\tt.deepEqual(parse(['--nnn', '---']), { nnn: '---', _: [] });\n});\n\n"}},"default_bool.js":{"file":{"contents":"'use strict';\n\nvar test = require('tape');\nvar parse = require('../');\n\ntest('boolean default true', function (t) {\n\tvar argv = parse([], {\n\t\tboolean: 'sometrue',\n\t\tdefault: { sometrue: true },\n\t});\n\tt.equal(argv.sometrue, true);\n\tt.end();\n});\n\ntest('boolean default false', function (t) {\n\tvar argv = parse([], {\n\t\tboolean: 'somefalse',\n\t\tdefault: { somefalse: false },\n\t});\n\tt.equal(argv.somefalse, false);\n\tt.end();\n});\n\ntest('boolean default to null', function (t) {\n\tvar argv = parse([], {\n\t\tboolean: 'maybe',\n\t\tdefault: { maybe: null },\n\t});\n\tt.equal(argv.maybe, null);\n\n\tvar argvLong = parse(['--maybe'], {\n\t\tboolean: 'maybe',\n\t\tdefault: { maybe: null },\n\t});\n\tt.equal(argvLong.maybe, true);\n\tt.end();\n});\n"}},"dotted.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('dotted alias', function (t) {\n\tvar argv = parse(['--a.b', '22'], { default: { 'a.b': 11 }, alias: { 'a.b': 'aa.bb' } });\n\tt.equal(argv.a.b, 22);\n\tt.equal(argv.aa.bb, 22);\n\tt.end();\n});\n\ntest('dotted default', function (t) {\n\tvar argv = parse('', { default: { 'a.b': 11 }, alias: { 'a.b': 'aa.bb' } });\n\tt.equal(argv.a.b, 11);\n\tt.equal(argv.aa.bb, 11);\n\tt.end();\n});\n\ntest('dotted default with no alias', function (t) {\n\tvar argv = parse('', { default: { 'a.b': 11 } });\n\tt.equal(argv.a.b, 11);\n\tt.end();\n});\n"}},"kv_short.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('short -k=v', function (t) {\n\tt.plan(1);\n\n\tvar argv = parse(['-b=123']);\n\tt.deepEqual(argv, { b: 123, _: [] });\n});\n\ntest('multi short -k=v', function (t) {\n\tt.plan(1);\n\n\tvar argv = parse(['-a=whatever', '-b=robots']);\n\tt.deepEqual(argv, { a: 'whatever', b: 'robots', _: [] });\n});\n\ntest('short with embedded equals -k=a=b', function (t) {\n\tt.plan(1);\n\n\tvar argv = parse(['-k=a=b']);\n\tt.deepEqual(argv, { k: 'a=b', _: [] });\n});\n\ntest('short with later equals like -ab=c', function (t) {\n\tt.plan(1);\n\n\tvar argv = parse(['-ab=c']);\n\tt.deepEqual(argv, { a: true, b: 'c', _: [] });\n});\n"}},"long.js":{"file":{"contents":"'use strict';\n\nvar test = require('tape');\nvar parse = require('../');\n\ntest('long opts', function (t) {\n\tt.deepEqual(\n\t\tparse(['--bool']),\n\t\t{ bool: true, _: [] },\n\t\t'long boolean'\n\t);\n\tt.deepEqual(\n\t\tparse(['--pow', 'xixxle']),\n\t\t{ pow: 'xixxle', _: [] },\n\t\t'long capture sp'\n\t);\n\tt.deepEqual(\n\t\tparse(['--pow=xixxle']),\n\t\t{ pow: 'xixxle', _: [] },\n\t\t'long capture eq'\n\t);\n\tt.deepEqual(\n\t\tparse(['--host', 'localhost', '--port', '555']),\n\t\t{ host: 'localhost', port: 555, _: [] },\n\t\t'long captures sp'\n\t);\n\tt.deepEqual(\n\t\tparse(['--host=localhost', '--port=555']),\n\t\t{ host: 'localhost', port: 555, _: [] },\n\t\t'long captures eq'\n\t);\n\tt.end();\n});\n"}},"num.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('nums', function (t) {\n\tvar argv = parse([\n\t\t'-x', '1234',\n\t\t'-y', '5.67',\n\t\t'-z', '1e7',\n\t\t'-w', '10f',\n\t\t'--hex', '0xdeadbeef',\n\t\t'789',\n\t]);\n\tt.deepEqual(argv, {\n\t\tx: 1234,\n\t\ty: 5.67,\n\t\tz: 1e7,\n\t\tw: '10f',\n\t\thex: 0xdeadbeef,\n\t\t_: [789],\n\t});\n\tt.deepEqual(typeof argv.x, 'number');\n\tt.deepEqual(typeof argv.y, 'number');\n\tt.deepEqual(typeof argv.z, 'number');\n\tt.deepEqual(typeof argv.w, 'string');\n\tt.deepEqual(typeof argv.hex, 'number');\n\tt.deepEqual(typeof argv._[0], 'number');\n\tt.end();\n});\n\ntest('already a number', function (t) {\n\tvar argv = parse(['-x', 1234, 789]);\n\tt.deepEqual(argv, { x: 1234, _: [789] });\n\tt.deepEqual(typeof argv.x, 'number');\n\tt.deepEqual(typeof argv._[0], 'number');\n\tt.end();\n});\n"}},"parse.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('parse args', function (t) {\n\tt.deepEqual(\n\t\tparse(['--no-moo']),\n\t\t{ moo: false, _: [] },\n\t\t'no'\n\t);\n\tt.deepEqual(\n\t\tparse(['-v', 'a', '-v', 'b', '-v', 'c']),\n\t\t{ v: ['a', 'b', 'c'], _: [] },\n\t\t'multi'\n\t);\n\tt.end();\n});\n\ntest('comprehensive', function (t) {\n\tt.deepEqual(\n\t\tparse([\n\t\t\t'--name=meowmers', 'bare', '-cats', 'woo',\n\t\t\t'-h', 'awesome', '--multi=quux',\n\t\t\t'--key', 'value',\n\t\t\t'-b', '--bool', '--no-meep', '--multi=baz',\n\t\t\t'--', '--not-a-flag', 'eek',\n\t\t]),\n\t\t{\n\t\t\tc: true,\n\t\t\ta: true,\n\t\t\tt: true,\n\t\t\ts: 'woo',\n\t\t\th: 'awesome',\n\t\t\tb: true,\n\t\t\tbool: true,\n\t\t\tkey: 'value',\n\t\t\tmulti: ['quux', 'baz'],\n\t\t\tmeep: false,\n\t\t\tname: 'meowmers',\n\t\t\t_: ['bare', '--not-a-flag', 'eek'],\n\t\t}\n\t);\n\tt.end();\n});\n\ntest('flag boolean', function (t) {\n\tvar argv = parse(['-t', 'moo'], { boolean: 't' });\n\tt.deepEqual(argv, { t: true, _: ['moo'] });\n\tt.deepEqual(typeof argv.t, 'boolean');\n\tt.end();\n});\n\ntest('flag boolean value', function (t) {\n\tvar argv = parse(['--verbose', 'false', 'moo', '-t', 'true'], {\n\t\tboolean: ['t', 'verbose'],\n\t\tdefault: { verbose: true },\n\t});\n\n\tt.deepEqual(argv, {\n\t\tverbose: false,\n\t\tt: true,\n\t\t_: ['moo'],\n\t});\n\n\tt.deepEqual(typeof argv.verbose, 'boolean');\n\tt.deepEqual(typeof argv.t, 'boolean');\n\tt.end();\n});\n\ntest('newlines in params', function (t) {\n\tvar args = parse(['-s', 'X\\nX']);\n\tt.deepEqual(args, { _: [], s: 'X\\nX' });\n\n\t// reproduce in bash:\n\t// VALUE=\"new\n\t// line\"\n\t// node program.js --s=\"$VALUE\"\n\targs = parse(['--s=X\\nX']);\n\tt.deepEqual(args, { _: [], s: 'X\\nX' });\n\tt.end();\n});\n\ntest('strings', function (t) {\n\tvar s = parse(['-s', '0001234'], { string: 's' }).s;\n\tt.equal(s, '0001234');\n\tt.equal(typeof s, 'string');\n\n\tvar x = parse(['-x', '56'], { string: 'x' }).x;\n\tt.equal(x, '56');\n\tt.equal(typeof x, 'string');\n\tt.end();\n});\n\ntest('stringArgs', function (t) {\n\tvar s = parse(['  ', '  '], { string: '_' })._;\n\tt.same(s.length, 2);\n\tt.same(typeof s[0], 'string');\n\tt.same(s[0], '  ');\n\tt.same(typeof s[1], 'string');\n\tt.same(s[1], '  ');\n\tt.end();\n});\n\ntest('empty strings', function (t) {\n\tvar s = parse(['-s'], { string: 's' }).s;\n\tt.equal(s, '');\n\tt.equal(typeof s, 'string');\n\n\tvar str = parse(['--str'], { string: 'str' }).str;\n\tt.equal(str, '');\n\tt.equal(typeof str, 'string');\n\n\tvar letters = parse(['-art'], {\n\t\tstring: ['a', 't'],\n\t});\n\n\tt.equal(letters.a, '');\n\tt.equal(letters.r, true);\n\tt.equal(letters.t, '');\n\n\tt.end();\n});\n\ntest('string and alias', function (t) {\n\tvar x = parse(['--str', '000123'], {\n\t\tstring: 's',\n\t\talias: { s: 'str' },\n\t});\n\n\tt.equal(x.str, '000123');\n\tt.equal(typeof x.str, 'string');\n\tt.equal(x.s, '000123');\n\tt.equal(typeof x.s, 'string');\n\n\tvar y = parse(['-s', '000123'], {\n\t\tstring: 'str',\n\t\talias: { str: 's' },\n\t});\n\n\tt.equal(y.str, '000123');\n\tt.equal(typeof y.str, 'string');\n\tt.equal(y.s, '000123');\n\tt.equal(typeof y.s, 'string');\n\n\tvar z = parse(['-s123'], {\n\t\talias: { str: ['s', 'S'] },\n\t\tstring: ['str'],\n\t});\n\n\tt.deepEqual(\n\t\tz,\n\t\t{ _: [], s: '123', S: '123', str: '123' },\n\t\t'opt.string works with multiple aliases'\n\t);\n\tt.end();\n});\n\ntest('slashBreak', function (t) {\n\tt.same(\n\t\tparse(['-I/foo/bar/baz']),\n\t\t{ I: '/foo/bar/baz', _: [] }\n\t);\n\tt.same(\n\t\tparse(['-xyz/foo/bar/baz']),\n\t\t{ x: true, y: true, z: '/foo/bar/baz', _: [] }\n\t);\n\tt.end();\n});\n\ntest('alias', function (t) {\n\tvar argv = parse(['-f', '11', '--zoom', '55'], {\n\t\talias: { z: 'zoom' },\n\t});\n\tt.equal(argv.zoom, 55);\n\tt.equal(argv.z, argv.zoom);\n\tt.equal(argv.f, 11);\n\tt.end();\n});\n\ntest('multiAlias', function (t) {\n\tvar argv = parse(['-f', '11', '--zoom', '55'], {\n\t\talias: { z: ['zm', 'zoom'] },\n\t});\n\tt.equal(argv.zoom, 55);\n\tt.equal(argv.z, argv.zoom);\n\tt.equal(argv.z, argv.zm);\n\tt.equal(argv.f, 11);\n\tt.end();\n});\n\ntest('nested dotted objects', function (t) {\n\tvar argv = parse([\n\t\t'--foo.bar', '3', '--foo.baz', '4',\n\t\t'--foo.quux.quibble', '5', '--foo.quux.o_O',\n\t\t'--beep.boop',\n\t]);\n\n\tt.same(argv.foo, {\n\t\tbar: 3,\n\t\tbaz: 4,\n\t\tquux: {\n\t\t\tquibble: 5,\n\t\t\to_O: true,\n\t\t},\n\t});\n\tt.same(argv.beep, { boop: true });\n\tt.end();\n});\n"}},"parse_modified.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('parse with modifier functions', function (t) {\n\tt.plan(1);\n\n\tvar argv = parse(['-b', '123'], { boolean: 'b' });\n\tt.deepEqual(argv, { b: true, _: [123] });\n});\n"}},"proto.js":{"file":{"contents":"'use strict';\n\n/* eslint no-proto: 0 */\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('proto pollution', function (t) {\n\tvar argv = parse(['--__proto__.x', '123']);\n\tt.equal({}.x, undefined);\n\tt.equal(argv.__proto__.x, undefined);\n\tt.equal(argv.x, undefined);\n\tt.end();\n});\n\ntest('proto pollution (array)', function (t) {\n\tvar argv = parse(['--x', '4', '--x', '5', '--x.__proto__.z', '789']);\n\tt.equal({}.z, undefined);\n\tt.deepEqual(argv.x, [4, 5]);\n\tt.equal(argv.x.z, undefined);\n\tt.equal(argv.x.__proto__.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (number)', function (t) {\n\tvar argv = parse(['--x', '5', '--x.__proto__.z', '100']);\n\tt.equal({}.z, undefined);\n\tt.equal((4).z, undefined);\n\tt.equal(argv.x, 5);\n\tt.equal(argv.x.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (string)', function (t) {\n\tvar argv = parse(['--x', 'abc', '--x.__proto__.z', 'def']);\n\tt.equal({}.z, undefined);\n\tt.equal('...'.z, undefined);\n\tt.equal(argv.x, 'abc');\n\tt.equal(argv.x.z, undefined);\n\tt.end();\n});\n\ntest('proto pollution (constructor)', function (t) {\n\tvar argv = parse(['--constructor.prototype.y', '123']);\n\tt.equal({}.y, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n\ntest('proto pollution (constructor function)', function (t) {\n\tvar argv = parse(['--_.concat.constructor.prototype.y', '123']);\n\tfunction fnToBeTested() {}\n\tt.equal(fnToBeTested.y, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n\n// powered by snyk - https://github.com/backstage/backstage/issues/10343\ntest('proto pollution (constructor function) snyk', function (t) {\n\tvar argv = parse('--_.constructor.constructor.prototype.foo bar'.split(' '));\n\tt.equal(function () {}.foo, undefined);\n\tt.equal(argv.y, undefined);\n\tt.end();\n});\n"}},"short.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('numeric short args', function (t) {\n\tt.plan(2);\n\tt.deepEqual(parse(['-n123']), { n: 123, _: [] });\n\tt.deepEqual(\n\t\tparse(['-123', '456']),\n\t\t{ 1: true, 2: true, 3: 456, _: [] }\n\t);\n});\n\ntest('short', function (t) {\n\tt.deepEqual(\n\t\tparse(['-b']),\n\t\t{ b: true, _: [] },\n\t\t'short boolean'\n\t);\n\tt.deepEqual(\n\t\tparse(['foo', 'bar', 'baz']),\n\t\t{ _: ['foo', 'bar', 'baz'] },\n\t\t'bare'\n\t);\n\tt.deepEqual(\n\t\tparse(['-cats']),\n\t\t{ c: true, a: true, t: true, s: true, _: [] },\n\t\t'group'\n\t);\n\tt.deepEqual(\n\t\tparse(['-cats', 'meow']),\n\t\t{ c: true, a: true, t: true, s: 'meow', _: [] },\n\t\t'short group next'\n\t);\n\tt.deepEqual(\n\t\tparse(['-h', 'localhost']),\n\t\t{ h: 'localhost', _: [] },\n\t\t'short capture'\n\t);\n\tt.deepEqual(\n\t\tparse(['-h', 'localhost', '-p', '555']),\n\t\t{ h: 'localhost', p: 555, _: [] },\n\t\t'short captures'\n\t);\n\tt.end();\n});\n\ntest('mixed short bool and capture', function (t) {\n\tt.same(\n\t\tparse(['-h', 'localhost', '-fp', '555', 'script.js']),\n\t\t{\n\t\t\tf: true, p: 555, h: 'localhost',\n\t\t\t_: ['script.js'],\n\t\t}\n\t);\n\tt.end();\n});\n\ntest('short and long', function (t) {\n\tt.deepEqual(\n\t\tparse(['-h', 'localhost', '-fp', '555', 'script.js']),\n\t\t{\n\t\t\tf: true, p: 555, h: 'localhost',\n\t\t\t_: ['script.js'],\n\t\t}\n\t);\n\tt.end();\n});\n"}},"stop_early.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('stops parsing on the first non-option when stopEarly is set', function (t) {\n\tvar argv = parse(['--aaa', 'bbb', 'ccc', '--ddd'], {\n\t\tstopEarly: true,\n\t});\n\n\tt.deepEqual(argv, {\n\t\taaa: 'bbb',\n\t\t_: ['ccc', '--ddd'],\n\t});\n\n\tt.end();\n});\n"}},"unknown.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('boolean and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'true', '--derp', 'true'];\n\tvar regular = ['--herp', 'true', '-d', 'true'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tboolean: 'h',\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, ['--derp', '-d']);\n\tt.end();\n});\n\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n\t\tboolean: true,\n\t\tunknown: unknownFn,\n\t});\n\tt.same(unknown, ['--tacos=good', 'cow', '-p']);\n\tt.same(argv, {\n\t\thonk: true,\n\t\t_: [],\n\t});\n\tt.end();\n});\n\ntest('string and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'hello', '--derp', 'goodbye'];\n\tvar regular = ['--herp', 'hello', '-d', 'moon'];\n\tvar opts = {\n\t\talias: { h: 'herp' },\n\t\tstring: 'h',\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, ['--derp', '-d']);\n\tt.end();\n});\n\ntest('default and alias is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['-h', 'hello'];\n\tvar regular = ['--herp', 'hello'];\n\tvar opts = {\n\t\tdefault: { h: 'bar' },\n\t\talias: { h: 'herp' },\n\t\tunknown: unknownFn,\n\t};\n\tparse(aliased, opts);\n\tparse(regular, opts);\n\n\tt.same(unknown, []);\n\tt.end();\n\tunknownFn(); // exercise fn for 100% coverage\n});\n\ntest('value following -- is not unknown', function (t) {\n\tvar unknown = [];\n\tfunction unknownFn(arg) {\n\t\tunknown.push(arg);\n\t\treturn false;\n\t}\n\tvar aliased = ['--bad', '--', 'good', 'arg'];\n\tvar opts = {\n\t\t'--': true,\n\t\tunknown: unknownFn,\n\t};\n\tvar argv = parse(aliased, opts);\n\n\tt.same(unknown, ['--bad']);\n\tt.same(argv, {\n\t\t'--': ['good', 'arg'],\n\t\t_: [],\n\t});\n\tt.end();\n});\n"}},"whitespace.js":{"file":{"contents":"'use strict';\n\nvar parse = require('../');\nvar test = require('tape');\n\ntest('whitespace should be whitespace', function (t) {\n\tt.plan(1);\n\tvar x = parse(['-x', '\\t']).x;\n\tt.equal(x, '\\t');\n});\n"}}}}}}