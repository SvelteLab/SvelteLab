{"directory":{".travis.yml":{"file":{"contents":"language: node_js\nnode_js:\n  - 0.4\n  - 0.6\n"}},"example":{"directory":{"map.js":{"file":{"contents":"var concatMap = require('../');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n"}}}},"index.js":{"file":{"contents":"module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"}},"LICENSE":{"file":{"contents":"This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"}},"package.json":{"file":{"contents":"{\n    \"name\" : \"concat-map\",\n    \"description\" : \"concatenative mapdashery\",\n    \"version\" : \"0.0.1\",\n    \"repository\" : {\n        \"type\" : \"git\",\n        \"url\" : \"git://github.com/substack/node-concat-map.git\"\n    },\n    \"main\" : \"index.js\",\n    \"keywords\" : [\n        \"concat\",\n        \"concatMap\",\n        \"map\",\n        \"functional\",\n        \"higher-order\"\n    ],\n    \"directories\" : {\n        \"example\" : \"example\",\n        \"test\" : \"test\"\n    },\n    \"scripts\" : {\n        \"test\" : \"tape test/*.js\"\n    },\n    \"devDependencies\" : {\n        \"tape\" : \"~2.4.0\"\n    },\n    \"license\" : \"MIT\",\n    \"author\" : {\n        \"name\" : \"James Halliday\",\n        \"email\" : \"mail@substack.net\",\n        \"url\" : \"http://substack.net\"\n    },\n    \"testling\" : {\n        \"files\" : \"test/*.js\",\n        \"browsers\" : {\n            \"ie\" : [ 6, 7, 8, 9 ],\n            \"ff\" : [ 3.5, 10, 15.0 ],\n            \"chrome\" : [ 10, 22 ],\n            \"safari\" : [ 5.1 ],\n            \"opera\" : [ 12 ]\n        }\n    }\n}\n"}},"README.markdown":{"file":{"contents":"concat-map\n==========\n\nConcatenative mapdashery.\n\n[![browser support](http://ci.testling.com/substack/node-concat-map.png)](http://ci.testling.com/substack/node-concat-map)\n\n[![build status](https://secure.travis-ci.org/substack/node-concat-map.png)](http://travis-ci.org/substack/node-concat-map)\n\nexample\n=======\n\n``` js\nvar concatMap = require('concat-map');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n```\n\n***\n\n```\n[ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]\n```\n\nmethods\n=======\n\n``` js\nvar concatMap = require('concat-map')\n```\n\nconcatMap(xs, fn)\n-----------------\n\nReturn an array of concatenated elements by calling `fn(x, i)` for each element\n`x` and each index `i` in the array `xs`.\n\nWhen `fn(x, i)` returns an array, its result will be concatenated with the\nresult array. If `fn(x, i)` returns anything else, that value will be pushed\nonto the end of the result array.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install concat-map\n```\n\nlicense\n=======\n\nMIT\n\nnotes\n=====\n\nThis module was written while sitting high above the ground in a tree.\n"}},"test":{"directory":{"map.js":{"file":{"contents":"var concatMap = require('../');\nvar test = require('tape');\n\ntest('empty or not', function (t) {\n    var xs = [ 1, 2, 3, 4, 5, 6 ];\n    var ixes = [];\n    var ys = concatMap(xs, function (x, ix) {\n        ixes.push(ix);\n        return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n    });\n    t.same(ys, [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]);\n    t.same(ixes, [ 0, 1, 2, 3, 4, 5 ]);\n    t.end();\n});\n\ntest('always something', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function (x) {\n        return x === 'b' ? [ 'B', 'B', 'B' ] : [ x ];\n    });\n    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);\n    t.end();\n});\n\ntest('scalars', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function (x) {\n        return x === 'b' ? [ 'B', 'B', 'B' ] : x;\n    });\n    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);\n    t.end();\n});\n\ntest('undefs', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function () {});\n    t.same(ys, [ undefined, undefined, undefined, undefined ]);\n    t.end();\n});\n"}}}}}}