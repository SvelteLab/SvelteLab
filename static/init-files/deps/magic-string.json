{"directory":{"dist":{"directory":{"magic-string.cjs.js":{"file":{"contents":"'use strict';\n\nvar sourcemapCodec = require('@jridgewell/sourcemap-codec');\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = sourcemapCodec.encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nclass Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n\nMagicString.Bundle = Bundle;\nMagicString.SourceMap = SourceMap;\nMagicString.default = MagicString; // work around TypeScript bug https://github.com/Rich-Harris/magic-string/pull/121\n\nmodule.exports = MagicString;\n//# sourceMappingURL=magic-string.cjs.js.map\n"}},"magic-string.cjs.js.map":{"file":{"contents":"{\"version\":3,\"file\":\"magic-string.cjs.js\",\"sources\":[\"../src/BitSet.js\",\"../src/Chunk.js\",\"../src/SourceMap.js\",\"../src/utils/guessIndent.js\",\"../src/utils/getRelativePath.js\",\"../src/utils/isObject.js\",\"../src/utils/getLocator.js\",\"../src/utils/Mappings.js\",\"../src/MagicString.js\",\"../src/Bundle.js\",\"../src/index-legacy.js\"],\"sourcesContent\":[\"export default class BitSet {\\n\\tconstructor(arg) {\\n\\t\\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\\n\\t}\\n\\n\\tadd(n) {\\n\\t\\tthis.bits[n >> 5] |= 1 << (n & 31);\\n\\t}\\n\\n\\thas(n) {\\n\\t\\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\\n\\t}\\n}\\n\",\"export default class Chunk {\\n\\tconstructor(start, end, content) {\\n\\t\\tthis.start = start;\\n\\t\\tthis.end = end;\\n\\t\\tthis.original = content;\\n\\n\\t\\tthis.intro = '';\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.content = content;\\n\\t\\tthis.storeName = false;\\n\\t\\tthis.edited = false;\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\t// we make these non-enumerable, for sanity while debugging\\n\\t\\t\\tObject.defineProperties(this, {\\n\\t\\t\\t\\tprevious: { writable: true, value: null },\\n\\t\\t\\t\\tnext: { writable: true, value: null },\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tthis.previous = null;\\n\\t\\t\\tthis.next = null;\\n\\t\\t}\\n\\t}\\n\\n\\tappendLeft(content) {\\n\\t\\tthis.outro += content;\\n\\t}\\n\\n\\tappendRight(content) {\\n\\t\\tthis.intro = this.intro + content;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst chunk = new Chunk(this.start, this.end, this.original);\\n\\n\\t\\tchunk.intro = this.intro;\\n\\t\\tchunk.outro = this.outro;\\n\\t\\tchunk.content = this.content;\\n\\t\\tchunk.storeName = this.storeName;\\n\\t\\tchunk.edited = this.edited;\\n\\n\\t\\treturn chunk;\\n\\t}\\n\\n\\tcontains(index) {\\n\\t\\treturn this.start < index && index < this.end;\\n\\t}\\n\\n\\teachNext(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\t}\\n\\n\\teachPrevious(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t}\\n\\t}\\n\\n\\tedit(content, storeName, contentOnly) {\\n\\t\\tthis.content = content;\\n\\t\\tif (!contentOnly) {\\n\\t\\t\\tthis.intro = '';\\n\\t\\t\\tthis.outro = '';\\n\\t\\t}\\n\\t\\tthis.storeName = storeName;\\n\\n\\t\\tthis.edited = true;\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(content) {\\n\\t\\tthis.outro = content + this.outro;\\n\\t}\\n\\n\\tprependRight(content) {\\n\\t\\tthis.intro = content + this.intro;\\n\\t}\\n\\n\\tsplit(index) {\\n\\t\\tconst sliceIndex = index - this.start;\\n\\n\\t\\tconst originalBefore = this.original.slice(0, sliceIndex);\\n\\t\\tconst originalAfter = this.original.slice(sliceIndex);\\n\\n\\t\\tthis.original = originalBefore;\\n\\n\\t\\tconst newChunk = new Chunk(index, this.end, originalAfter);\\n\\t\\tnewChunk.outro = this.outro;\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.end = index;\\n\\n\\t\\tif (this.edited) {\\n\\t\\t\\t// TODO is this block necessary?...\\n\\t\\t\\tnewChunk.edit('', false);\\n\\t\\t\\tthis.content = '';\\n\\t\\t} else {\\n\\t\\t\\tthis.content = originalBefore;\\n\\t\\t}\\n\\n\\t\\tnewChunk.next = this.next;\\n\\t\\tif (newChunk.next) newChunk.next.previous = newChunk;\\n\\t\\tnewChunk.previous = this;\\n\\t\\tthis.next = newChunk;\\n\\n\\t\\treturn newChunk;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn this.intro + this.content + this.outro;\\n\\t}\\n\\n\\ttrimEnd(rx) {\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.start + trimmed.length).edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\tif (this.intro.length) return true;\\n\\t\\t}\\n\\t}\\n\\n\\ttrimStart(rx) {\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.end - trimmed.length);\\n\\t\\t\\t\\tthis.edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\t\\tif (this.outro.length) return true;\\n\\t\\t}\\n\\t}\\n}\\n\",\"import { encode } from '@jridgewell/sourcemap-codec';\\n\\nfunction getBtoa () {\\n\\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\\n\\t\\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\\n\\t} else if (typeof Buffer === 'function') {\\n\\t\\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\\n\\t} else {\\n\\t\\treturn () => {\\n\\t\\t\\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\\n\\t\\t};\\n\\t}\\n}\\n\\nconst btoa = /*#__PURE__*/ getBtoa();\\n\\nexport default class SourceMap {\\n\\tconstructor(properties) {\\n\\t\\tthis.version = 3;\\n\\t\\tthis.file = properties.file;\\n\\t\\tthis.sources = properties.sources;\\n\\t\\tthis.sourcesContent = properties.sourcesContent;\\n\\t\\tthis.names = properties.names;\\n\\t\\tthis.mappings = encode(properties.mappings);\\n\\t\\tif (typeof properties.x_google_ignoreList !== 'undefined') {\\n\\t\\t\\tthis.x_google_ignoreList = properties.x_google_ignoreList;\\n\\t\\t}\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn JSON.stringify(this);\\n\\t}\\n\\n\\ttoUrl() {\\n\\t\\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\\n\\t}\\n}\\n\",\"export default function guessIndent(code) {\\n\\tconst lines = code.split('\\\\n');\\n\\n\\tconst tabbed = lines.filter((line) => /^\\\\t+/.test(line));\\n\\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\\n\\n\\tif (tabbed.length === 0 && spaced.length === 0) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// More lines tabbed than spaced? Assume tabs, and\\n\\t// default to tabs in the case of a tie (or nothing\\n\\t// to go on)\\n\\tif (tabbed.length >= spaced.length) {\\n\\t\\treturn '\\\\t';\\n\\t}\\n\\n\\t// Otherwise, we need to guess the multiple\\n\\tconst min = spaced.reduce((previous, current) => {\\n\\t\\tconst numSpaces = /^ +/.exec(current)[0].length;\\n\\t\\treturn Math.min(numSpaces, previous);\\n\\t}, Infinity);\\n\\n\\treturn new Array(min + 1).join(' ');\\n}\\n\",\"export default function getRelativePath(from, to) {\\n\\tconst fromParts = from.split(/[/\\\\\\\\]/);\\n\\tconst toParts = to.split(/[/\\\\\\\\]/);\\n\\n\\tfromParts.pop(); // get dirname\\n\\n\\twhile (fromParts[0] === toParts[0]) {\\n\\t\\tfromParts.shift();\\n\\t\\ttoParts.shift();\\n\\t}\\n\\n\\tif (fromParts.length) {\\n\\t\\tlet i = fromParts.length;\\n\\t\\twhile (i--) fromParts[i] = '..';\\n\\t}\\n\\n\\treturn fromParts.concat(toParts).join('/');\\n}\\n\",\"const toString = Object.prototype.toString;\\n\\nexport default function isObject(thing) {\\n\\treturn toString.call(thing) === '[object Object]';\\n}\\n\",\"export default function getLocator(source) {\\n\\tconst originalLines = source.split('\\\\n');\\n\\tconst lineOffsets = [];\\n\\n\\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\\n\\t\\tlineOffsets.push(pos);\\n\\t\\tpos += originalLines[i].length + 1;\\n\\t}\\n\\n\\treturn function locate(index) {\\n\\t\\tlet i = 0;\\n\\t\\tlet j = lineOffsets.length;\\n\\t\\twhile (i < j) {\\n\\t\\t\\tconst m = (i + j) >> 1;\\n\\t\\t\\tif (index < lineOffsets[m]) {\\n\\t\\t\\t\\tj = m;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ti = m + 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tconst line = i - 1;\\n\\t\\tconst column = index - lineOffsets[line];\\n\\t\\treturn { line, column };\\n\\t};\\n}\\n\",\"export default class Mappings {\\n\\tconstructor(hires) {\\n\\t\\tthis.hires = hires;\\n\\t\\tthis.generatedCodeLine = 0;\\n\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\tthis.raw = [];\\n\\t\\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddEdit(sourceIndex, content, loc, nameIndex) {\\n\\t\\tif (content.length) {\\n\\t\\t\\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\\n\\t\\t\\tif (nameIndex >= 0) {\\n\\t\\t\\t\\tsegment.push(nameIndex);\\n\\t\\t\\t}\\n\\t\\t\\tthis.rawSegments.push(segment);\\n\\t\\t} else if (this.pending) {\\n\\t\\t\\tthis.rawSegments.push(this.pending);\\n\\t\\t}\\n\\n\\t\\tthis.advance(content);\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\\n\\t\\tlet originalCharIndex = chunk.start;\\n\\t\\tlet first = true;\\n\\n\\t\\twhile (originalCharIndex < chunk.end) {\\n\\t\\t\\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\\n\\t\\t\\t\\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (original[originalCharIndex] === '\\\\n') {\\n\\t\\t\\t\\tloc.line += 1;\\n\\t\\t\\t\\tloc.column = 0;\\n\\t\\t\\t\\tthis.generatedCodeLine += 1;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t\\t\\tfirst = true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tloc.column += 1;\\n\\t\\t\\t\\tthis.generatedCodeColumn += 1;\\n\\t\\t\\t\\tfirst = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalCharIndex += 1;\\n\\t\\t}\\n\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\tadvance(str) {\\n\\t\\tif (!str) return;\\n\\n\\t\\tconst lines = str.split('\\\\n');\\n\\n\\t\\tif (lines.length > 1) {\\n\\t\\t\\tfor (let i = 0; i < lines.length - 1; i++) {\\n\\t\\t\\t\\tthis.generatedCodeLine++;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t}\\n\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t}\\n\\n\\t\\tthis.generatedCodeColumn += lines[lines.length - 1].length;\\n\\t}\\n}\\n\",\"import BitSet from './BitSet.js';\\nimport Chunk from './Chunk.js';\\nimport SourceMap from './SourceMap.js';\\nimport guessIndent from './utils/guessIndent.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\nimport Stats from './utils/Stats.js';\\n\\nconst n = '\\\\n';\\n\\nconst warned = {\\n\\tinsertLeft: false,\\n\\tinsertRight: false,\\n\\tstoreName: false,\\n};\\n\\nexport default class MagicString {\\n\\tconstructor(string, options = {}) {\\n\\t\\tconst chunk = new Chunk(0, string.length, string);\\n\\n\\t\\tObject.defineProperties(this, {\\n\\t\\t\\toriginal: { writable: true, value: string },\\n\\t\\t\\toutro: { writable: true, value: '' },\\n\\t\\t\\tintro: { writable: true, value: '' },\\n\\t\\t\\tfirstChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastSearchedChunk: { writable: true, value: chunk },\\n\\t\\t\\tbyStart: { writable: true, value: {} },\\n\\t\\t\\tbyEnd: { writable: true, value: {} },\\n\\t\\t\\tfilename: { writable: true, value: options.filename },\\n\\t\\t\\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\\n\\t\\t\\tsourcemapLocations: { writable: true, value: new BitSet() },\\n\\t\\t\\tstoredNames: { writable: true, value: {} },\\n\\t\\t\\tindentStr: { writable: true, value: undefined },\\n\\t\\t\\tignoreList: { writable: true, value: options.ignoreList },\\n\\t\\t});\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\tObject.defineProperty(this, 'stats', { value: new Stats() });\\n\\t\\t}\\n\\n\\t\\tthis.byStart[0] = chunk;\\n\\t\\tthis.byEnd[string.length] = chunk;\\n\\t}\\n\\n\\taddSourcemapLocation(char) {\\n\\t\\tthis.sourcemapLocations.add(char);\\n\\t}\\n\\n\\tappend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.outro += content;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendLeft');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendLeft');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst cloned = new MagicString(this.original, { filename: this.filename });\\n\\n\\t\\tlet originalChunk = this.firstChunk;\\n\\t\\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\\n\\n\\t\\twhile (originalChunk) {\\n\\t\\t\\tcloned.byStart[clonedChunk.start] = clonedChunk;\\n\\t\\t\\tcloned.byEnd[clonedChunk.end] = clonedChunk;\\n\\n\\t\\t\\tconst nextOriginalChunk = originalChunk.next;\\n\\t\\t\\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\\n\\n\\t\\t\\tif (nextClonedChunk) {\\n\\t\\t\\t\\tclonedChunk.next = nextClonedChunk;\\n\\t\\t\\t\\tnextClonedChunk.previous = clonedChunk;\\n\\n\\t\\t\\t\\tclonedChunk = nextClonedChunk;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalChunk = nextOriginalChunk;\\n\\t\\t}\\n\\n\\t\\tcloned.lastChunk = clonedChunk;\\n\\n\\t\\tif (this.indentExclusionRanges) {\\n\\t\\t\\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\\n\\t\\t}\\n\\n\\t\\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\\n\\n\\t\\tcloned.intro = this.intro;\\n\\t\\tcloned.outro = this.outro;\\n\\n\\t\\treturn cloned;\\n\\t}\\n\\n\\tgenerateDecodedMap(options) {\\n\\t\\toptions = options || {};\\n\\n\\t\\tconst sourceIndex = 0;\\n\\t\\tconst names = Object.keys(this.storedNames);\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tconst locate = getLocator(this.original);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.firstChunk.eachNext((chunk) => {\\n\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\\n\\t\\t\\tsourcesContent: options.includeContent ? [this.original] : undefined,\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\t_ensureindentStr() {\\n\\t\\tif (this.indentStr === undefined) {\\n\\t\\t\\tthis.indentStr = guessIndent(this.original);\\n\\t\\t}\\n\\t}\\n\\n\\t_getRawIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr;\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr === null ? '\\\\t' : this.indentStr;\\n\\t}\\n\\n\\tindent(indentStr, options) {\\n\\t\\tconst pattern = /^[^\\\\r\\\\n]/gm;\\n\\n\\t\\tif (isObject(indentStr)) {\\n\\t\\t\\toptions = indentStr;\\n\\t\\t\\tindentStr = undefined;\\n\\t\\t}\\n\\n\\t\\tif (indentStr === undefined) {\\n\\t\\t\\tthis._ensureindentStr();\\n\\t\\t\\tindentStr = this.indentStr || '\\\\t';\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\toptions = options || {};\\n\\n\\t\\t// Process exclusion ranges\\n\\t\\tconst isExcluded = {};\\n\\n\\t\\tif (options.exclude) {\\n\\t\\t\\tconst exclusions =\\n\\t\\t\\t\\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\\n\\t\\t\\texclusions.forEach((exclusion) => {\\n\\t\\t\\t\\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\\n\\t\\t\\t\\t\\tisExcluded[i] = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tlet shouldIndentNextCharacter = options.indentStart !== false;\\n\\t\\tconst replacer = (match) => {\\n\\t\\t\\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\\n\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\treturn match;\\n\\t\\t};\\n\\n\\t\\tthis.intro = this.intro.replace(pattern, replacer);\\n\\n\\t\\tlet charIndex = 0;\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tconst end = chunk.end;\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\tchunk.content = chunk.content.replace(pattern, replacer);\\n\\n\\t\\t\\t\\t\\tif (chunk.content.length) {\\n\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\\\n';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcharIndex = chunk.start;\\n\\n\\t\\t\\t\\twhile (charIndex < end) {\\n\\t\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\t\\tconst char = this.original[charIndex];\\n\\n\\t\\t\\t\\t\\t\\tif (char === '\\\\n') {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\t\\t\\t\\t} else if (char !== '\\\\r' && shouldIndentNextCharacter) {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = false;\\n\\n\\t\\t\\t\\t\\t\\t\\tif (charIndex === chunk.start) {\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._splitChunk(chunk, charIndex);\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcharIndex += 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tcharIndex = chunk.end;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tthis.outro = this.outro.replace(pattern, replacer);\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tinsert() {\\n\\t\\tthrow new Error(\\n\\t\\t\\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\\n\\t\\t);\\n\\t}\\n\\n\\tinsertLeft(index, content) {\\n\\t\\tif (!warned.insertLeft) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertLeft = true;\\n\\t\\t}\\n\\n\\t\\treturn this.appendLeft(index, content);\\n\\t}\\n\\n\\tinsertRight(index, content) {\\n\\t\\tif (!warned.insertRight) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertRight = true;\\n\\t\\t}\\n\\n\\t\\treturn this.prependRight(index, content);\\n\\t}\\n\\n\\tmove(start, end, index) {\\n\\t\\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\\n\\n\\t\\tif (DEBUG) this.stats.time('move');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tconst oldLeft = first.previous;\\n\\t\\tconst oldRight = last.next;\\n\\n\\t\\tconst newRight = this.byStart[index];\\n\\t\\tif (!newRight && last === this.lastChunk) return this;\\n\\t\\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\\n\\n\\t\\tif (oldLeft) oldLeft.next = oldRight;\\n\\t\\tif (oldRight) oldRight.previous = oldLeft;\\n\\n\\t\\tif (newLeft) newLeft.next = first;\\n\\t\\tif (newRight) newRight.previous = last;\\n\\n\\t\\tif (!first.previous) this.firstChunk = last.next;\\n\\t\\tif (!last.next) {\\n\\t\\t\\tthis.lastChunk = first.previous;\\n\\t\\t\\tthis.lastChunk.next = null;\\n\\t\\t}\\n\\n\\t\\tfirst.previous = newLeft;\\n\\t\\tlast.next = newRight || null;\\n\\n\\t\\tif (!newLeft) this.firstChunk = first;\\n\\t\\tif (!newRight) this.lastChunk = last;\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('move');\\n\\t\\treturn this;\\n\\t}\\n\\n\\toverwrite(start, end, content, options) {\\n\\t\\toptions = options || {};\\n\\t\\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\\n\\t}\\n\\n\\tupdate(start, end, content, options) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\\n\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (end > this.original.length) throw new Error('end is out of bounds');\\n\\t\\tif (start === end)\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\\n\\t\\t\\t);\\n\\n\\t\\tif (DEBUG) this.stats.time('overwrite');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tif (options === true) {\\n\\t\\t\\tif (!warned.storeName) {\\n\\t\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t\\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\\n\\t\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\t\\twarned.storeName = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\toptions = { storeName: true };\\n\\t\\t}\\n\\t\\tconst storeName = options !== undefined ? options.storeName : false;\\n\\t\\tconst overwrite = options !== undefined ? options.overwrite : false;\\n\\n\\t\\tif (storeName) {\\n\\t\\t\\tconst original = this.original.slice(start, end);\\n\\t\\t\\tObject.defineProperty(this.storedNames, original, {\\n\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\tvalue: true,\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tif (first) {\\n\\t\\t\\tlet chunk = first;\\n\\t\\t\\twhile (chunk !== last) {\\n\\t\\t\\t\\tif (chunk.next !== this.byStart[chunk.end]) {\\n\\t\\t\\t\\t\\tthrow new Error('Cannot overwrite across a split point');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\tchunk.edit('', false);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfirst.edit(content, storeName, !overwrite);\\n\\t\\t} else {\\n\\t\\t\\t// must be inserting at the end\\n\\t\\t\\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\\n\\n\\t\\t\\t// TODO last chunk in the array may not be the last chunk, if it's moved...\\n\\t\\t\\tlast.next = newChunk;\\n\\t\\t\\tnewChunk.previous = last;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('overwrite');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.intro = content + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro = content + this.intro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro = content + this.outro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tremove(start, end) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (start === end) return this;\\n\\n\\t\\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\\n\\t\\tif (start > end) throw new Error('end must be greater than start');\\n\\n\\t\\tif (DEBUG) this.stats.time('remove');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tlet chunk = this.byStart[start];\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tchunk.intro = '';\\n\\t\\t\\tchunk.outro = '';\\n\\t\\t\\tchunk.edit('');\\n\\n\\t\\t\\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('remove');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tlastChar() {\\n\\t\\tif (this.outro.length) return this.outro[this.outro.length - 1];\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\\n\\t\\t\\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\\n\\t\\t\\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tif (this.intro.length) return this.intro[this.intro.length - 1];\\n\\t\\treturn '';\\n\\t}\\n\\n\\tlastLine() {\\n\\t\\tlet lineIndex = this.outro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\\n\\t\\tlet lineStr = this.outro;\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.outro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.outro + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.content.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.content.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.content + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.intro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.intro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.intro + lineStr;\\n\\t\\t\\t}\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tlineIndex = this.intro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\treturn this.intro + lineStr;\\n\\t}\\n\\n\\tslice(start = 0, end = this.original.length) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tlet result = '';\\n\\n\\t\\t// find start chunk\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\\n\\t\\t\\t// found end chunk before start\\n\\t\\t\\tif (chunk.start < end && chunk.end >= end) {\\n\\t\\t\\t\\treturn result;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tif (chunk && chunk.edited && chunk.start !== start)\\n\\t\\t\\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\\n\\n\\t\\tconst startChunk = chunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\\n\\t\\t\\t\\tresult += chunk.intro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst containsEnd = chunk.start < end && chunk.end >= end;\\n\\t\\t\\tif (containsEnd && chunk.edited && chunk.end !== end)\\n\\t\\t\\t\\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\\n\\n\\t\\t\\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\\n\\t\\t\\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\\n\\n\\t\\t\\tresult += chunk.content.slice(sliceStart, sliceEnd);\\n\\n\\t\\t\\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\\n\\t\\t\\t\\tresult += chunk.outro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (containsEnd) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\t// TODO deprecate this? not really very useful\\n\\tsnip(start, end) {\\n\\t\\tconst clone = this.clone();\\n\\t\\tclone.remove(0, start);\\n\\t\\tclone.remove(end, clone.original.length);\\n\\n\\t\\treturn clone;\\n\\t}\\n\\n\\t_split(index) {\\n\\t\\tif (this.byStart[index] || this.byEnd[index]) return;\\n\\n\\t\\tif (DEBUG) this.stats.time('_split');\\n\\n\\t\\tlet chunk = this.lastSearchedChunk;\\n\\t\\tconst searchForward = index > chunk.end;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\\n\\n\\t\\t\\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\\n\\t\\t}\\n\\t}\\n\\n\\t_splitChunk(chunk, index) {\\n\\t\\tif (chunk.edited && chunk.content.length) {\\n\\t\\t\\t// zero-length edited chunks are a special case (overlapping replacements)\\n\\t\\t\\tconst loc = getLocator(this.original)(index);\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \\\"${chunk.original}\\\")`\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tconst newChunk = chunk.split(index);\\n\\n\\t\\tthis.byEnd[index] = chunk;\\n\\t\\tthis.byStart[index] = newChunk;\\n\\t\\tthis.byEnd[newChunk.end] = newChunk;\\n\\n\\t\\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\\n\\n\\t\\tthis.lastSearchedChunk = chunk;\\n\\t\\tif (DEBUG) this.stats.timeEnd('_split');\\n\\t\\treturn true;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tlet str = this.intro;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tstr += chunk.toString();\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn str + this.outro;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t(chunk.intro.length && chunk.intro.trim()) ||\\n\\t\\t\\t\\t(chunk.content.length && chunk.content.trim()) ||\\n\\t\\t\\t\\t(chunk.outro.length && chunk.outro.trim())\\n\\t\\t\\t)\\n\\t\\t\\t\\treturn false;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tlet length = 0;\\n\\t\\tdo {\\n\\t\\t\\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn length;\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimEndAborted(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tlet chunk = this.lastChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimEnd(rx);\\n\\n\\t\\t\\t// if chunk was trimmed, we have a new lastChunk\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\tif (this.lastChunk === chunk) {\\n\\t\\t\\t\\t\\tthis.lastChunk = chunk.next;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tthis.trimEndAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\ttrimStartAborted(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimStart(rx);\\n\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\t// special case...\\n\\t\\t\\t\\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tthis.trimStartAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\n\\thasChanged() {\\n\\t\\treturn this.original !== this.toString();\\n\\t}\\n\\n\\t_replaceRegexp(searchValue, replacement) {\\n\\t\\tfunction getReplacement(match, str) {\\n\\t\\t\\tif (typeof replacement === 'string') {\\n\\t\\t\\t\\treturn replacement.replace(/\\\\$(\\\\$|&|\\\\d+)/g, (_, i) => {\\n\\t\\t\\t\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\\n\\t\\t\\t\\t\\tif (i === '$') return '$';\\n\\t\\t\\t\\t\\tif (i === '&') return match[0];\\n\\t\\t\\t\\t\\tconst num = +i;\\n\\t\\t\\t\\t\\tif (num < match.length) return match[+i];\\n\\t\\t\\t\\t\\treturn `$${i}`;\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn replacement(...match, match.index, str, match.groups);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tfunction matchAll(re, str) {\\n\\t\\t\\tlet match;\\n\\t\\t\\tconst matches = [];\\n\\t\\t\\twhile ((match = re.exec(str))) {\\n\\t\\t\\t\\tmatches.push(match);\\n\\t\\t\\t}\\n\\t\\t\\treturn matches;\\n\\t\\t}\\n\\t\\tif (searchValue.global) {\\n\\t\\t\\tconst matches = matchAll(searchValue, this.original);\\n\\t\\t\\tmatches.forEach((match) => {\\n\\t\\t\\t\\tif (match.index != null)\\n\\t\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tconst match = this.original.match(searchValue);\\n\\t\\t\\tif (match && match.index != null)\\n\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t);\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n\\n\\t_replaceString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst index = original.indexOf(string);\\n\\n\\t\\tif (index !== -1) {\\n\\t\\t\\tthis.overwrite(index, index + string.length, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplace(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n\\n\\t_replaceAllString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst stringLength = string.length;\\n\\t\\tfor (\\n\\t\\t\\tlet index = original.indexOf(string);\\n\\t\\t\\tindex !== -1;\\n\\t\\t\\tindex = original.indexOf(string, index + stringLength)\\n\\t\\t) {\\n\\t\\t\\tthis.overwrite(index, index + stringLength, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplaceAll(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceAllString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\tif (!searchValue.global) {\\n\\t\\t\\tthrow new TypeError(\\n\\t\\t\\t\\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n}\\n\",\"import MagicString from './MagicString.js';\\nimport SourceMap from './SourceMap.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\n\\nconst hasOwnProp = Object.prototype.hasOwnProperty;\\n\\nexport default class Bundle {\\n\\tconstructor(options = {}) {\\n\\t\\tthis.intro = options.intro || '';\\n\\t\\tthis.separator = options.separator !== undefined ? options.separator : '\\\\n';\\n\\t\\tthis.sources = [];\\n\\t\\tthis.uniqueSources = [];\\n\\t\\tthis.uniqueSourceIndexByFilename = {};\\n\\t}\\n\\n\\taddSource(source) {\\n\\t\\tif (source instanceof MagicString) {\\n\\t\\t\\treturn this.addSource({\\n\\t\\t\\t\\tcontent: source,\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tseparator: this.separator,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (!isObject(source) || !source.content) {\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\\n\\t\\t\\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\\n\\t\\t});\\n\\n\\t\\tif (source.separator === undefined) {\\n\\t\\t\\t// TODO there's a bunch of this sort of thing, needs cleaning up\\n\\t\\t\\tsource.separator = this.separator;\\n\\t\\t}\\n\\n\\t\\tif (source.filename) {\\n\\t\\t\\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\\n\\t\\t\\t\\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\\n\\t\\t\\t\\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\\n\\t\\t\\t\\tif (source.content.original !== uniqueSource.content) {\\n\\t\\t\\t\\t\\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.sources.push(source);\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappend(str, options) {\\n\\t\\tthis.addSource({\\n\\t\\t\\tcontent: new MagicString(str),\\n\\t\\t\\tseparator: (options && options.separator) || '',\\n\\t\\t});\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst bundle = new Bundle({\\n\\t\\t\\tintro: this.intro,\\n\\t\\t\\tseparator: this.separator,\\n\\t\\t});\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tbundle.addSource({\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tcontent: source.content.clone(),\\n\\t\\t\\t\\tseparator: source.separator,\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn bundle;\\n\\t}\\n\\n\\tgenerateDecodedMap(options = {}) {\\n\\t\\tconst names = [];\\n\\t\\tlet x_google_ignoreList = undefined;\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tObject.keys(source.content.storedNames).forEach((name) => {\\n\\t\\t\\t\\tif (!~names.indexOf(name)) names.push(name);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tif (i > 0) {\\n\\t\\t\\t\\tmappings.advance(this.separator);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\\n\\t\\t\\tconst magicString = source.content;\\n\\t\\t\\tconst locate = getLocator(magicString.original);\\n\\n\\t\\t\\tif (magicString.intro) {\\n\\t\\t\\t\\tmappings.advance(magicString.intro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tmagicString.firstChunk.eachNext((chunk) => {\\n\\t\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\t\\tif (source.filename) {\\n\\t\\t\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tmappings.addUneditedChunk(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.original,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.sourcemapLocations\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmappings.advance(chunk.content);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (magicString.outro) {\\n\\t\\t\\t\\tmappings.advance(magicString.outro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (source.ignoreList && sourceIndex !== -1) {\\n\\t\\t\\t\\tif (x_google_ignoreList === undefined) {\\n\\t\\t\\t\\t\\tx_google_ignoreList = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tx_google_ignoreList.push(sourceIndex);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\\n\\t\\t\\t}),\\n\\t\\t\\tsourcesContent: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.includeContent ? source.content : null;\\n\\t\\t\\t}),\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList,\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tconst indentStringCounts = {};\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tconst indentStr = source.content._getRawIndentString();\\n\\n\\t\\t\\tif (indentStr === null) return;\\n\\n\\t\\t\\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\\n\\t\\t\\tindentStringCounts[indentStr] += 1;\\n\\t\\t});\\n\\n\\t\\treturn (\\n\\t\\t\\tObject.keys(indentStringCounts).sort((a, b) => {\\n\\t\\t\\t\\treturn indentStringCounts[a] - indentStringCounts[b];\\n\\t\\t\\t})[0] || '\\\\t'\\n\\t\\t);\\n\\t}\\n\\n\\tindent(indentStr) {\\n\\t\\tif (!arguments.length) {\\n\\t\\t\\tindentStr = this.getIndentString();\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\\\n';\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\tconst indentStart = trailingNewline || (i > 0 && /\\\\r?\\\\n$/.test(separator));\\n\\n\\t\\t\\tsource.content.indent(indentStr, {\\n\\t\\t\\t\\texclude: source.indentExclusionRanges,\\n\\t\\t\\t\\tindentStart, //: trailingNewline || /\\\\r?\\\\n$/.test( separator )  //true///\\\\r?\\\\n/.test( separator )\\n\\t\\t\\t});\\n\\n\\t\\t\\ttrailingNewline = source.content.lastChar() === '\\\\n';\\n\\t\\t});\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tthis.intro =\\n\\t\\t\\t\\tindentStr +\\n\\t\\t\\t\\tthis.intro.replace(/^[^\\\\n]/gm, (match, index) => {\\n\\t\\t\\t\\t\\treturn index > 0 ? indentStr + match : match;\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(str) {\\n\\t\\tthis.intro = str + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tconst body = this.sources\\n\\t\\t\\t.map((source, i) => {\\n\\t\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\t\\tconst str = (i > 0 ? separator : '') + source.content.toString();\\n\\n\\t\\t\\t\\treturn str;\\n\\t\\t\\t})\\n\\t\\t\\t.join('');\\n\\n\\t\\treturn this.intro + body;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tif (this.intro.length && this.intro.trim()) return false;\\n\\t\\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\treturn this.sources.reduce(\\n\\t\\t\\t(length, source) => length + source.content.length(),\\n\\t\\t\\tthis.intro.length\\n\\t\\t);\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\n\\t\\tif (!this.intro) {\\n\\t\\t\\tlet source;\\n\\t\\t\\tlet i = 0;\\n\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tsource = this.sources[i++];\\n\\t\\t\\t\\tif (!source) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} while (!source.content.trimStartAborted(charType));\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tlet source;\\n\\t\\tlet i = this.sources.length - 1;\\n\\n\\t\\tdo {\\n\\t\\t\\tsource = this.sources[i--];\\n\\t\\t\\tif (!source) {\\n\\t\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t} while (!source.content.trimEndAborted(charType));\\n\\n\\t\\treturn this;\\n\\t}\\n}\\n\",\"import MagicString from './MagicString.js';\\nimport Bundle from './Bundle.js';\\nimport SourceMap from './SourceMap.js';\\n\\nMagicString.Bundle = Bundle;\\nMagicString.SourceMap = SourceMap;\\nMagicString.default = MagicString; // work around TypeScript bug https://github.com/Rich-Harris/magic-string/pull/121\\n\\nexport default MagicString;\\n\"],\"names\":[\"encode\"],\"mappings\":\"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\"}"}},"magic-string.es.mjs":{"file":{"contents":"import { encode } from '@jridgewell/sourcemap-codec';\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nclass Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n\nexport { Bundle, SourceMap, MagicString as default };\n//# sourceMappingURL=magic-string.es.mjs.map\n"}},"magic-string.es.mjs.map":{"file":{"contents":"{\"version\":3,\"file\":\"magic-string.es.mjs\",\"sources\":[\"../src/BitSet.js\",\"../src/Chunk.js\",\"../src/SourceMap.js\",\"../src/utils/guessIndent.js\",\"../src/utils/getRelativePath.js\",\"../src/utils/isObject.js\",\"../src/utils/getLocator.js\",\"../src/utils/Mappings.js\",\"../src/MagicString.js\",\"../src/Bundle.js\"],\"sourcesContent\":[\"export default class BitSet {\\n\\tconstructor(arg) {\\n\\t\\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\\n\\t}\\n\\n\\tadd(n) {\\n\\t\\tthis.bits[n >> 5] |= 1 << (n & 31);\\n\\t}\\n\\n\\thas(n) {\\n\\t\\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\\n\\t}\\n}\\n\",\"export default class Chunk {\\n\\tconstructor(start, end, content) {\\n\\t\\tthis.start = start;\\n\\t\\tthis.end = end;\\n\\t\\tthis.original = content;\\n\\n\\t\\tthis.intro = '';\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.content = content;\\n\\t\\tthis.storeName = false;\\n\\t\\tthis.edited = false;\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\t// we make these non-enumerable, for sanity while debugging\\n\\t\\t\\tObject.defineProperties(this, {\\n\\t\\t\\t\\tprevious: { writable: true, value: null },\\n\\t\\t\\t\\tnext: { writable: true, value: null },\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tthis.previous = null;\\n\\t\\t\\tthis.next = null;\\n\\t\\t}\\n\\t}\\n\\n\\tappendLeft(content) {\\n\\t\\tthis.outro += content;\\n\\t}\\n\\n\\tappendRight(content) {\\n\\t\\tthis.intro = this.intro + content;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst chunk = new Chunk(this.start, this.end, this.original);\\n\\n\\t\\tchunk.intro = this.intro;\\n\\t\\tchunk.outro = this.outro;\\n\\t\\tchunk.content = this.content;\\n\\t\\tchunk.storeName = this.storeName;\\n\\t\\tchunk.edited = this.edited;\\n\\n\\t\\treturn chunk;\\n\\t}\\n\\n\\tcontains(index) {\\n\\t\\treturn this.start < index && index < this.end;\\n\\t}\\n\\n\\teachNext(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\t}\\n\\n\\teachPrevious(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t}\\n\\t}\\n\\n\\tedit(content, storeName, contentOnly) {\\n\\t\\tthis.content = content;\\n\\t\\tif (!contentOnly) {\\n\\t\\t\\tthis.intro = '';\\n\\t\\t\\tthis.outro = '';\\n\\t\\t}\\n\\t\\tthis.storeName = storeName;\\n\\n\\t\\tthis.edited = true;\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(content) {\\n\\t\\tthis.outro = content + this.outro;\\n\\t}\\n\\n\\tprependRight(content) {\\n\\t\\tthis.intro = content + this.intro;\\n\\t}\\n\\n\\tsplit(index) {\\n\\t\\tconst sliceIndex = index - this.start;\\n\\n\\t\\tconst originalBefore = this.original.slice(0, sliceIndex);\\n\\t\\tconst originalAfter = this.original.slice(sliceIndex);\\n\\n\\t\\tthis.original = originalBefore;\\n\\n\\t\\tconst newChunk = new Chunk(index, this.end, originalAfter);\\n\\t\\tnewChunk.outro = this.outro;\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.end = index;\\n\\n\\t\\tif (this.edited) {\\n\\t\\t\\t// TODO is this block necessary?...\\n\\t\\t\\tnewChunk.edit('', false);\\n\\t\\t\\tthis.content = '';\\n\\t\\t} else {\\n\\t\\t\\tthis.content = originalBefore;\\n\\t\\t}\\n\\n\\t\\tnewChunk.next = this.next;\\n\\t\\tif (newChunk.next) newChunk.next.previous = newChunk;\\n\\t\\tnewChunk.previous = this;\\n\\t\\tthis.next = newChunk;\\n\\n\\t\\treturn newChunk;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn this.intro + this.content + this.outro;\\n\\t}\\n\\n\\ttrimEnd(rx) {\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.start + trimmed.length).edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\tif (this.intro.length) return true;\\n\\t\\t}\\n\\t}\\n\\n\\ttrimStart(rx) {\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.end - trimmed.length);\\n\\t\\t\\t\\tthis.edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\t\\tif (this.outro.length) return true;\\n\\t\\t}\\n\\t}\\n}\\n\",\"import { encode } from '@jridgewell/sourcemap-codec';\\n\\nfunction getBtoa () {\\n\\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\\n\\t\\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\\n\\t} else if (typeof Buffer === 'function') {\\n\\t\\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\\n\\t} else {\\n\\t\\treturn () => {\\n\\t\\t\\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\\n\\t\\t};\\n\\t}\\n}\\n\\nconst btoa = /*#__PURE__*/ getBtoa();\\n\\nexport default class SourceMap {\\n\\tconstructor(properties) {\\n\\t\\tthis.version = 3;\\n\\t\\tthis.file = properties.file;\\n\\t\\tthis.sources = properties.sources;\\n\\t\\tthis.sourcesContent = properties.sourcesContent;\\n\\t\\tthis.names = properties.names;\\n\\t\\tthis.mappings = encode(properties.mappings);\\n\\t\\tif (typeof properties.x_google_ignoreList !== 'undefined') {\\n\\t\\t\\tthis.x_google_ignoreList = properties.x_google_ignoreList;\\n\\t\\t}\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn JSON.stringify(this);\\n\\t}\\n\\n\\ttoUrl() {\\n\\t\\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\\n\\t}\\n}\\n\",\"export default function guessIndent(code) {\\n\\tconst lines = code.split('\\\\n');\\n\\n\\tconst tabbed = lines.filter((line) => /^\\\\t+/.test(line));\\n\\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\\n\\n\\tif (tabbed.length === 0 && spaced.length === 0) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// More lines tabbed than spaced? Assume tabs, and\\n\\t// default to tabs in the case of a tie (or nothing\\n\\t// to go on)\\n\\tif (tabbed.length >= spaced.length) {\\n\\t\\treturn '\\\\t';\\n\\t}\\n\\n\\t// Otherwise, we need to guess the multiple\\n\\tconst min = spaced.reduce((previous, current) => {\\n\\t\\tconst numSpaces = /^ +/.exec(current)[0].length;\\n\\t\\treturn Math.min(numSpaces, previous);\\n\\t}, Infinity);\\n\\n\\treturn new Array(min + 1).join(' ');\\n}\\n\",\"export default function getRelativePath(from, to) {\\n\\tconst fromParts = from.split(/[/\\\\\\\\]/);\\n\\tconst toParts = to.split(/[/\\\\\\\\]/);\\n\\n\\tfromParts.pop(); // get dirname\\n\\n\\twhile (fromParts[0] === toParts[0]) {\\n\\t\\tfromParts.shift();\\n\\t\\ttoParts.shift();\\n\\t}\\n\\n\\tif (fromParts.length) {\\n\\t\\tlet i = fromParts.length;\\n\\t\\twhile (i--) fromParts[i] = '..';\\n\\t}\\n\\n\\treturn fromParts.concat(toParts).join('/');\\n}\\n\",\"const toString = Object.prototype.toString;\\n\\nexport default function isObject(thing) {\\n\\treturn toString.call(thing) === '[object Object]';\\n}\\n\",\"export default function getLocator(source) {\\n\\tconst originalLines = source.split('\\\\n');\\n\\tconst lineOffsets = [];\\n\\n\\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\\n\\t\\tlineOffsets.push(pos);\\n\\t\\tpos += originalLines[i].length + 1;\\n\\t}\\n\\n\\treturn function locate(index) {\\n\\t\\tlet i = 0;\\n\\t\\tlet j = lineOffsets.length;\\n\\t\\twhile (i < j) {\\n\\t\\t\\tconst m = (i + j) >> 1;\\n\\t\\t\\tif (index < lineOffsets[m]) {\\n\\t\\t\\t\\tj = m;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ti = m + 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tconst line = i - 1;\\n\\t\\tconst column = index - lineOffsets[line];\\n\\t\\treturn { line, column };\\n\\t};\\n}\\n\",\"export default class Mappings {\\n\\tconstructor(hires) {\\n\\t\\tthis.hires = hires;\\n\\t\\tthis.generatedCodeLine = 0;\\n\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\tthis.raw = [];\\n\\t\\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddEdit(sourceIndex, content, loc, nameIndex) {\\n\\t\\tif (content.length) {\\n\\t\\t\\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\\n\\t\\t\\tif (nameIndex >= 0) {\\n\\t\\t\\t\\tsegment.push(nameIndex);\\n\\t\\t\\t}\\n\\t\\t\\tthis.rawSegments.push(segment);\\n\\t\\t} else if (this.pending) {\\n\\t\\t\\tthis.rawSegments.push(this.pending);\\n\\t\\t}\\n\\n\\t\\tthis.advance(content);\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\\n\\t\\tlet originalCharIndex = chunk.start;\\n\\t\\tlet first = true;\\n\\n\\t\\twhile (originalCharIndex < chunk.end) {\\n\\t\\t\\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\\n\\t\\t\\t\\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (original[originalCharIndex] === '\\\\n') {\\n\\t\\t\\t\\tloc.line += 1;\\n\\t\\t\\t\\tloc.column = 0;\\n\\t\\t\\t\\tthis.generatedCodeLine += 1;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t\\t\\tfirst = true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tloc.column += 1;\\n\\t\\t\\t\\tthis.generatedCodeColumn += 1;\\n\\t\\t\\t\\tfirst = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalCharIndex += 1;\\n\\t\\t}\\n\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\tadvance(str) {\\n\\t\\tif (!str) return;\\n\\n\\t\\tconst lines = str.split('\\\\n');\\n\\n\\t\\tif (lines.length > 1) {\\n\\t\\t\\tfor (let i = 0; i < lines.length - 1; i++) {\\n\\t\\t\\t\\tthis.generatedCodeLine++;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t}\\n\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t}\\n\\n\\t\\tthis.generatedCodeColumn += lines[lines.length - 1].length;\\n\\t}\\n}\\n\",\"import BitSet from './BitSet.js';\\nimport Chunk from './Chunk.js';\\nimport SourceMap from './SourceMap.js';\\nimport guessIndent from './utils/guessIndent.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\nimport Stats from './utils/Stats.js';\\n\\nconst n = '\\\\n';\\n\\nconst warned = {\\n\\tinsertLeft: false,\\n\\tinsertRight: false,\\n\\tstoreName: false,\\n};\\n\\nexport default class MagicString {\\n\\tconstructor(string, options = {}) {\\n\\t\\tconst chunk = new Chunk(0, string.length, string);\\n\\n\\t\\tObject.defineProperties(this, {\\n\\t\\t\\toriginal: { writable: true, value: string },\\n\\t\\t\\toutro: { writable: true, value: '' },\\n\\t\\t\\tintro: { writable: true, value: '' },\\n\\t\\t\\tfirstChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastSearchedChunk: { writable: true, value: chunk },\\n\\t\\t\\tbyStart: { writable: true, value: {} },\\n\\t\\t\\tbyEnd: { writable: true, value: {} },\\n\\t\\t\\tfilename: { writable: true, value: options.filename },\\n\\t\\t\\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\\n\\t\\t\\tsourcemapLocations: { writable: true, value: new BitSet() },\\n\\t\\t\\tstoredNames: { writable: true, value: {} },\\n\\t\\t\\tindentStr: { writable: true, value: undefined },\\n\\t\\t\\tignoreList: { writable: true, value: options.ignoreList },\\n\\t\\t});\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\tObject.defineProperty(this, 'stats', { value: new Stats() });\\n\\t\\t}\\n\\n\\t\\tthis.byStart[0] = chunk;\\n\\t\\tthis.byEnd[string.length] = chunk;\\n\\t}\\n\\n\\taddSourcemapLocation(char) {\\n\\t\\tthis.sourcemapLocations.add(char);\\n\\t}\\n\\n\\tappend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.outro += content;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendLeft');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendLeft');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst cloned = new MagicString(this.original, { filename: this.filename });\\n\\n\\t\\tlet originalChunk = this.firstChunk;\\n\\t\\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\\n\\n\\t\\twhile (originalChunk) {\\n\\t\\t\\tcloned.byStart[clonedChunk.start] = clonedChunk;\\n\\t\\t\\tcloned.byEnd[clonedChunk.end] = clonedChunk;\\n\\n\\t\\t\\tconst nextOriginalChunk = originalChunk.next;\\n\\t\\t\\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\\n\\n\\t\\t\\tif (nextClonedChunk) {\\n\\t\\t\\t\\tclonedChunk.next = nextClonedChunk;\\n\\t\\t\\t\\tnextClonedChunk.previous = clonedChunk;\\n\\n\\t\\t\\t\\tclonedChunk = nextClonedChunk;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalChunk = nextOriginalChunk;\\n\\t\\t}\\n\\n\\t\\tcloned.lastChunk = clonedChunk;\\n\\n\\t\\tif (this.indentExclusionRanges) {\\n\\t\\t\\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\\n\\t\\t}\\n\\n\\t\\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\\n\\n\\t\\tcloned.intro = this.intro;\\n\\t\\tcloned.outro = this.outro;\\n\\n\\t\\treturn cloned;\\n\\t}\\n\\n\\tgenerateDecodedMap(options) {\\n\\t\\toptions = options || {};\\n\\n\\t\\tconst sourceIndex = 0;\\n\\t\\tconst names = Object.keys(this.storedNames);\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tconst locate = getLocator(this.original);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.firstChunk.eachNext((chunk) => {\\n\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\\n\\t\\t\\tsourcesContent: options.includeContent ? [this.original] : undefined,\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\t_ensureindentStr() {\\n\\t\\tif (this.indentStr === undefined) {\\n\\t\\t\\tthis.indentStr = guessIndent(this.original);\\n\\t\\t}\\n\\t}\\n\\n\\t_getRawIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr;\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr === null ? '\\\\t' : this.indentStr;\\n\\t}\\n\\n\\tindent(indentStr, options) {\\n\\t\\tconst pattern = /^[^\\\\r\\\\n]/gm;\\n\\n\\t\\tif (isObject(indentStr)) {\\n\\t\\t\\toptions = indentStr;\\n\\t\\t\\tindentStr = undefined;\\n\\t\\t}\\n\\n\\t\\tif (indentStr === undefined) {\\n\\t\\t\\tthis._ensureindentStr();\\n\\t\\t\\tindentStr = this.indentStr || '\\\\t';\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\toptions = options || {};\\n\\n\\t\\t// Process exclusion ranges\\n\\t\\tconst isExcluded = {};\\n\\n\\t\\tif (options.exclude) {\\n\\t\\t\\tconst exclusions =\\n\\t\\t\\t\\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\\n\\t\\t\\texclusions.forEach((exclusion) => {\\n\\t\\t\\t\\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\\n\\t\\t\\t\\t\\tisExcluded[i] = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tlet shouldIndentNextCharacter = options.indentStart !== false;\\n\\t\\tconst replacer = (match) => {\\n\\t\\t\\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\\n\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\treturn match;\\n\\t\\t};\\n\\n\\t\\tthis.intro = this.intro.replace(pattern, replacer);\\n\\n\\t\\tlet charIndex = 0;\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tconst end = chunk.end;\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\tchunk.content = chunk.content.replace(pattern, replacer);\\n\\n\\t\\t\\t\\t\\tif (chunk.content.length) {\\n\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\\\n';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcharIndex = chunk.start;\\n\\n\\t\\t\\t\\twhile (charIndex < end) {\\n\\t\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\t\\tconst char = this.original[charIndex];\\n\\n\\t\\t\\t\\t\\t\\tif (char === '\\\\n') {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\t\\t\\t\\t} else if (char !== '\\\\r' && shouldIndentNextCharacter) {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = false;\\n\\n\\t\\t\\t\\t\\t\\t\\tif (charIndex === chunk.start) {\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._splitChunk(chunk, charIndex);\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcharIndex += 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tcharIndex = chunk.end;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tthis.outro = this.outro.replace(pattern, replacer);\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tinsert() {\\n\\t\\tthrow new Error(\\n\\t\\t\\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\\n\\t\\t);\\n\\t}\\n\\n\\tinsertLeft(index, content) {\\n\\t\\tif (!warned.insertLeft) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertLeft = true;\\n\\t\\t}\\n\\n\\t\\treturn this.appendLeft(index, content);\\n\\t}\\n\\n\\tinsertRight(index, content) {\\n\\t\\tif (!warned.insertRight) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertRight = true;\\n\\t\\t}\\n\\n\\t\\treturn this.prependRight(index, content);\\n\\t}\\n\\n\\tmove(start, end, index) {\\n\\t\\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\\n\\n\\t\\tif (DEBUG) this.stats.time('move');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tconst oldLeft = first.previous;\\n\\t\\tconst oldRight = last.next;\\n\\n\\t\\tconst newRight = this.byStart[index];\\n\\t\\tif (!newRight && last === this.lastChunk) return this;\\n\\t\\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\\n\\n\\t\\tif (oldLeft) oldLeft.next = oldRight;\\n\\t\\tif (oldRight) oldRight.previous = oldLeft;\\n\\n\\t\\tif (newLeft) newLeft.next = first;\\n\\t\\tif (newRight) newRight.previous = last;\\n\\n\\t\\tif (!first.previous) this.firstChunk = last.next;\\n\\t\\tif (!last.next) {\\n\\t\\t\\tthis.lastChunk = first.previous;\\n\\t\\t\\tthis.lastChunk.next = null;\\n\\t\\t}\\n\\n\\t\\tfirst.previous = newLeft;\\n\\t\\tlast.next = newRight || null;\\n\\n\\t\\tif (!newLeft) this.firstChunk = first;\\n\\t\\tif (!newRight) this.lastChunk = last;\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('move');\\n\\t\\treturn this;\\n\\t}\\n\\n\\toverwrite(start, end, content, options) {\\n\\t\\toptions = options || {};\\n\\t\\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\\n\\t}\\n\\n\\tupdate(start, end, content, options) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\\n\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (end > this.original.length) throw new Error('end is out of bounds');\\n\\t\\tif (start === end)\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\\n\\t\\t\\t);\\n\\n\\t\\tif (DEBUG) this.stats.time('overwrite');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tif (options === true) {\\n\\t\\t\\tif (!warned.storeName) {\\n\\t\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t\\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\\n\\t\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\t\\twarned.storeName = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\toptions = { storeName: true };\\n\\t\\t}\\n\\t\\tconst storeName = options !== undefined ? options.storeName : false;\\n\\t\\tconst overwrite = options !== undefined ? options.overwrite : false;\\n\\n\\t\\tif (storeName) {\\n\\t\\t\\tconst original = this.original.slice(start, end);\\n\\t\\t\\tObject.defineProperty(this.storedNames, original, {\\n\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\tvalue: true,\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tif (first) {\\n\\t\\t\\tlet chunk = first;\\n\\t\\t\\twhile (chunk !== last) {\\n\\t\\t\\t\\tif (chunk.next !== this.byStart[chunk.end]) {\\n\\t\\t\\t\\t\\tthrow new Error('Cannot overwrite across a split point');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\tchunk.edit('', false);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfirst.edit(content, storeName, !overwrite);\\n\\t\\t} else {\\n\\t\\t\\t// must be inserting at the end\\n\\t\\t\\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\\n\\n\\t\\t\\t// TODO last chunk in the array may not be the last chunk, if it's moved...\\n\\t\\t\\tlast.next = newChunk;\\n\\t\\t\\tnewChunk.previous = last;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('overwrite');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.intro = content + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro = content + this.intro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro = content + this.outro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tremove(start, end) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (start === end) return this;\\n\\n\\t\\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\\n\\t\\tif (start > end) throw new Error('end must be greater than start');\\n\\n\\t\\tif (DEBUG) this.stats.time('remove');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tlet chunk = this.byStart[start];\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tchunk.intro = '';\\n\\t\\t\\tchunk.outro = '';\\n\\t\\t\\tchunk.edit('');\\n\\n\\t\\t\\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('remove');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tlastChar() {\\n\\t\\tif (this.outro.length) return this.outro[this.outro.length - 1];\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\\n\\t\\t\\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\\n\\t\\t\\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tif (this.intro.length) return this.intro[this.intro.length - 1];\\n\\t\\treturn '';\\n\\t}\\n\\n\\tlastLine() {\\n\\t\\tlet lineIndex = this.outro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\\n\\t\\tlet lineStr = this.outro;\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.outro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.outro + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.content.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.content.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.content + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.intro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.intro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.intro + lineStr;\\n\\t\\t\\t}\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tlineIndex = this.intro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\treturn this.intro + lineStr;\\n\\t}\\n\\n\\tslice(start = 0, end = this.original.length) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tlet result = '';\\n\\n\\t\\t// find start chunk\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\\n\\t\\t\\t// found end chunk before start\\n\\t\\t\\tif (chunk.start < end && chunk.end >= end) {\\n\\t\\t\\t\\treturn result;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tif (chunk && chunk.edited && chunk.start !== start)\\n\\t\\t\\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\\n\\n\\t\\tconst startChunk = chunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\\n\\t\\t\\t\\tresult += chunk.intro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst containsEnd = chunk.start < end && chunk.end >= end;\\n\\t\\t\\tif (containsEnd && chunk.edited && chunk.end !== end)\\n\\t\\t\\t\\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\\n\\n\\t\\t\\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\\n\\t\\t\\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\\n\\n\\t\\t\\tresult += chunk.content.slice(sliceStart, sliceEnd);\\n\\n\\t\\t\\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\\n\\t\\t\\t\\tresult += chunk.outro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (containsEnd) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\t// TODO deprecate this? not really very useful\\n\\tsnip(start, end) {\\n\\t\\tconst clone = this.clone();\\n\\t\\tclone.remove(0, start);\\n\\t\\tclone.remove(end, clone.original.length);\\n\\n\\t\\treturn clone;\\n\\t}\\n\\n\\t_split(index) {\\n\\t\\tif (this.byStart[index] || this.byEnd[index]) return;\\n\\n\\t\\tif (DEBUG) this.stats.time('_split');\\n\\n\\t\\tlet chunk = this.lastSearchedChunk;\\n\\t\\tconst searchForward = index > chunk.end;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\\n\\n\\t\\t\\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\\n\\t\\t}\\n\\t}\\n\\n\\t_splitChunk(chunk, index) {\\n\\t\\tif (chunk.edited && chunk.content.length) {\\n\\t\\t\\t// zero-length edited chunks are a special case (overlapping replacements)\\n\\t\\t\\tconst loc = getLocator(this.original)(index);\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \\\"${chunk.original}\\\")`\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tconst newChunk = chunk.split(index);\\n\\n\\t\\tthis.byEnd[index] = chunk;\\n\\t\\tthis.byStart[index] = newChunk;\\n\\t\\tthis.byEnd[newChunk.end] = newChunk;\\n\\n\\t\\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\\n\\n\\t\\tthis.lastSearchedChunk = chunk;\\n\\t\\tif (DEBUG) this.stats.timeEnd('_split');\\n\\t\\treturn true;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tlet str = this.intro;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tstr += chunk.toString();\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn str + this.outro;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t(chunk.intro.length && chunk.intro.trim()) ||\\n\\t\\t\\t\\t(chunk.content.length && chunk.content.trim()) ||\\n\\t\\t\\t\\t(chunk.outro.length && chunk.outro.trim())\\n\\t\\t\\t)\\n\\t\\t\\t\\treturn false;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tlet length = 0;\\n\\t\\tdo {\\n\\t\\t\\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn length;\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimEndAborted(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tlet chunk = this.lastChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimEnd(rx);\\n\\n\\t\\t\\t// if chunk was trimmed, we have a new lastChunk\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\tif (this.lastChunk === chunk) {\\n\\t\\t\\t\\t\\tthis.lastChunk = chunk.next;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tthis.trimEndAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\ttrimStartAborted(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimStart(rx);\\n\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\t// special case...\\n\\t\\t\\t\\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tthis.trimStartAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\n\\thasChanged() {\\n\\t\\treturn this.original !== this.toString();\\n\\t}\\n\\n\\t_replaceRegexp(searchValue, replacement) {\\n\\t\\tfunction getReplacement(match, str) {\\n\\t\\t\\tif (typeof replacement === 'string') {\\n\\t\\t\\t\\treturn replacement.replace(/\\\\$(\\\\$|&|\\\\d+)/g, (_, i) => {\\n\\t\\t\\t\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\\n\\t\\t\\t\\t\\tif (i === '$') return '$';\\n\\t\\t\\t\\t\\tif (i === '&') return match[0];\\n\\t\\t\\t\\t\\tconst num = +i;\\n\\t\\t\\t\\t\\tif (num < match.length) return match[+i];\\n\\t\\t\\t\\t\\treturn `$${i}`;\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn replacement(...match, match.index, str, match.groups);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tfunction matchAll(re, str) {\\n\\t\\t\\tlet match;\\n\\t\\t\\tconst matches = [];\\n\\t\\t\\twhile ((match = re.exec(str))) {\\n\\t\\t\\t\\tmatches.push(match);\\n\\t\\t\\t}\\n\\t\\t\\treturn matches;\\n\\t\\t}\\n\\t\\tif (searchValue.global) {\\n\\t\\t\\tconst matches = matchAll(searchValue, this.original);\\n\\t\\t\\tmatches.forEach((match) => {\\n\\t\\t\\t\\tif (match.index != null)\\n\\t\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tconst match = this.original.match(searchValue);\\n\\t\\t\\tif (match && match.index != null)\\n\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t);\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n\\n\\t_replaceString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst index = original.indexOf(string);\\n\\n\\t\\tif (index !== -1) {\\n\\t\\t\\tthis.overwrite(index, index + string.length, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplace(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n\\n\\t_replaceAllString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst stringLength = string.length;\\n\\t\\tfor (\\n\\t\\t\\tlet index = original.indexOf(string);\\n\\t\\t\\tindex !== -1;\\n\\t\\t\\tindex = original.indexOf(string, index + stringLength)\\n\\t\\t) {\\n\\t\\t\\tthis.overwrite(index, index + stringLength, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplaceAll(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceAllString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\tif (!searchValue.global) {\\n\\t\\t\\tthrow new TypeError(\\n\\t\\t\\t\\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n}\\n\",\"import MagicString from './MagicString.js';\\nimport SourceMap from './SourceMap.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\n\\nconst hasOwnProp = Object.prototype.hasOwnProperty;\\n\\nexport default class Bundle {\\n\\tconstructor(options = {}) {\\n\\t\\tthis.intro = options.intro || '';\\n\\t\\tthis.separator = options.separator !== undefined ? options.separator : '\\\\n';\\n\\t\\tthis.sources = [];\\n\\t\\tthis.uniqueSources = [];\\n\\t\\tthis.uniqueSourceIndexByFilename = {};\\n\\t}\\n\\n\\taddSource(source) {\\n\\t\\tif (source instanceof MagicString) {\\n\\t\\t\\treturn this.addSource({\\n\\t\\t\\t\\tcontent: source,\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tseparator: this.separator,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (!isObject(source) || !source.content) {\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\\n\\t\\t\\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\\n\\t\\t});\\n\\n\\t\\tif (source.separator === undefined) {\\n\\t\\t\\t// TODO there's a bunch of this sort of thing, needs cleaning up\\n\\t\\t\\tsource.separator = this.separator;\\n\\t\\t}\\n\\n\\t\\tif (source.filename) {\\n\\t\\t\\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\\n\\t\\t\\t\\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\\n\\t\\t\\t\\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\\n\\t\\t\\t\\tif (source.content.original !== uniqueSource.content) {\\n\\t\\t\\t\\t\\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.sources.push(source);\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappend(str, options) {\\n\\t\\tthis.addSource({\\n\\t\\t\\tcontent: new MagicString(str),\\n\\t\\t\\tseparator: (options && options.separator) || '',\\n\\t\\t});\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst bundle = new Bundle({\\n\\t\\t\\tintro: this.intro,\\n\\t\\t\\tseparator: this.separator,\\n\\t\\t});\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tbundle.addSource({\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tcontent: source.content.clone(),\\n\\t\\t\\t\\tseparator: source.separator,\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn bundle;\\n\\t}\\n\\n\\tgenerateDecodedMap(options = {}) {\\n\\t\\tconst names = [];\\n\\t\\tlet x_google_ignoreList = undefined;\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tObject.keys(source.content.storedNames).forEach((name) => {\\n\\t\\t\\t\\tif (!~names.indexOf(name)) names.push(name);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tif (i > 0) {\\n\\t\\t\\t\\tmappings.advance(this.separator);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\\n\\t\\t\\tconst magicString = source.content;\\n\\t\\t\\tconst locate = getLocator(magicString.original);\\n\\n\\t\\t\\tif (magicString.intro) {\\n\\t\\t\\t\\tmappings.advance(magicString.intro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tmagicString.firstChunk.eachNext((chunk) => {\\n\\t\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\t\\tif (source.filename) {\\n\\t\\t\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tmappings.addUneditedChunk(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.original,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.sourcemapLocations\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmappings.advance(chunk.content);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (magicString.outro) {\\n\\t\\t\\t\\tmappings.advance(magicString.outro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (source.ignoreList && sourceIndex !== -1) {\\n\\t\\t\\t\\tif (x_google_ignoreList === undefined) {\\n\\t\\t\\t\\t\\tx_google_ignoreList = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tx_google_ignoreList.push(sourceIndex);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\\n\\t\\t\\t}),\\n\\t\\t\\tsourcesContent: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.includeContent ? source.content : null;\\n\\t\\t\\t}),\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList,\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tconst indentStringCounts = {};\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tconst indentStr = source.content._getRawIndentString();\\n\\n\\t\\t\\tif (indentStr === null) return;\\n\\n\\t\\t\\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\\n\\t\\t\\tindentStringCounts[indentStr] += 1;\\n\\t\\t});\\n\\n\\t\\treturn (\\n\\t\\t\\tObject.keys(indentStringCounts).sort((a, b) => {\\n\\t\\t\\t\\treturn indentStringCounts[a] - indentStringCounts[b];\\n\\t\\t\\t})[0] || '\\\\t'\\n\\t\\t);\\n\\t}\\n\\n\\tindent(indentStr) {\\n\\t\\tif (!arguments.length) {\\n\\t\\t\\tindentStr = this.getIndentString();\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\\\n';\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\tconst indentStart = trailingNewline || (i > 0 && /\\\\r?\\\\n$/.test(separator));\\n\\n\\t\\t\\tsource.content.indent(indentStr, {\\n\\t\\t\\t\\texclude: source.indentExclusionRanges,\\n\\t\\t\\t\\tindentStart, //: trailingNewline || /\\\\r?\\\\n$/.test( separator )  //true///\\\\r?\\\\n/.test( separator )\\n\\t\\t\\t});\\n\\n\\t\\t\\ttrailingNewline = source.content.lastChar() === '\\\\n';\\n\\t\\t});\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tthis.intro =\\n\\t\\t\\t\\tindentStr +\\n\\t\\t\\t\\tthis.intro.replace(/^[^\\\\n]/gm, (match, index) => {\\n\\t\\t\\t\\t\\treturn index > 0 ? indentStr + match : match;\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(str) {\\n\\t\\tthis.intro = str + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tconst body = this.sources\\n\\t\\t\\t.map((source, i) => {\\n\\t\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\t\\tconst str = (i > 0 ? separator : '') + source.content.toString();\\n\\n\\t\\t\\t\\treturn str;\\n\\t\\t\\t})\\n\\t\\t\\t.join('');\\n\\n\\t\\treturn this.intro + body;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tif (this.intro.length && this.intro.trim()) return false;\\n\\t\\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\treturn this.sources.reduce(\\n\\t\\t\\t(length, source) => length + source.content.length(),\\n\\t\\t\\tthis.intro.length\\n\\t\\t);\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\n\\t\\tif (!this.intro) {\\n\\t\\t\\tlet source;\\n\\t\\t\\tlet i = 0;\\n\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tsource = this.sources[i++];\\n\\t\\t\\t\\tif (!source) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} while (!source.content.trimStartAborted(charType));\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tlet source;\\n\\t\\tlet i = this.sources.length - 1;\\n\\n\\t\\tdo {\\n\\t\\t\\tsource = this.sources[i--];\\n\\t\\t\\tif (!source) {\\n\\t\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t} while (!source.content.trimEndAborted(charType));\\n\\n\\t\\treturn this;\\n\\t}\\n}\\n\"],\"names\":[],\"mappings\":\"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\"}"}},"magic-string.umd.js":{"file":{"contents":"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.MagicString = factory());\n})(this, (function () { 'use strict';\n\n\tclass BitSet {\n\t\tconstructor(arg) {\n\t\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t\t}\n\n\t\tadd(n) {\n\t\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t\t}\n\n\t\thas(n) {\n\t\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t\t}\n\t}\n\n\tclass Chunk {\n\t\tconstructor(start, end, content) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t\tthis.original = content;\n\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\n\t\t\tthis.content = content;\n\t\t\tthis.storeName = false;\n\t\t\tthis.edited = false;\n\n\t\t\t{\n\t\t\t\tthis.previous = null;\n\t\t\t\tthis.next = null;\n\t\t\t}\n\t\t}\n\n\t\tappendLeft(content) {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tappendRight(content) {\n\t\t\tthis.intro = this.intro + content;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\t\tchunk.intro = this.intro;\n\t\t\tchunk.outro = this.outro;\n\t\t\tchunk.content = this.content;\n\t\t\tchunk.storeName = this.storeName;\n\t\t\tchunk.edited = this.edited;\n\n\t\t\treturn chunk;\n\t\t}\n\n\t\tcontains(index) {\n\t\t\treturn this.start < index && index < this.end;\n\t\t}\n\n\t\teachNext(fn) {\n\t\t\tlet chunk = this;\n\t\t\twhile (chunk) {\n\t\t\t\tfn(chunk);\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\t\t}\n\n\t\teachPrevious(fn) {\n\t\t\tlet chunk = this;\n\t\t\twhile (chunk) {\n\t\t\t\tfn(chunk);\n\t\t\t\tchunk = chunk.previous;\n\t\t\t}\n\t\t}\n\n\t\tedit(content, storeName, contentOnly) {\n\t\t\tthis.content = content;\n\t\t\tif (!contentOnly) {\n\t\t\t\tthis.intro = '';\n\t\t\t\tthis.outro = '';\n\t\t\t}\n\t\t\tthis.storeName = storeName;\n\n\t\t\tthis.edited = true;\n\n\t\t\treturn this;\n\t\t}\n\n\t\tprependLeft(content) {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\tprependRight(content) {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\tsplit(index) {\n\t\t\tconst sliceIndex = index - this.start;\n\n\t\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\t\tthis.original = originalBefore;\n\n\t\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\t\tnewChunk.outro = this.outro;\n\t\t\tthis.outro = '';\n\n\t\t\tthis.end = index;\n\n\t\t\tif (this.edited) {\n\t\t\t\t// TODO is this block necessary?...\n\t\t\t\tnewChunk.edit('', false);\n\t\t\t\tthis.content = '';\n\t\t\t} else {\n\t\t\t\tthis.content = originalBefore;\n\t\t\t}\n\n\t\t\tnewChunk.next = this.next;\n\t\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\t\tnewChunk.previous = this;\n\t\t\tthis.next = newChunk;\n\n\t\t\treturn newChunk;\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.intro + this.content + this.outro;\n\t\t}\n\n\t\ttrimEnd(rx) {\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\n\t\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\t\tif (trimmed.length) {\n\t\t\t\tif (trimmed !== this.content) {\n\t\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.edit('', undefined, true);\n\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tif (this.intro.length) return true;\n\t\t\t}\n\t\t}\n\n\t\ttrimStart(rx) {\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\n\t\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\t\tif (trimmed.length) {\n\t\t\t\tif (trimmed !== this.content) {\n\t\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\t\tthis.edit('', undefined, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.edit('', undefined, true);\n\n\t\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\t\tif (this.outro.length) return true;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst comma = ','.charCodeAt(0);\n\tconst semicolon = ';'.charCodeAt(0);\n\tconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\tconst intToChar = new Uint8Array(64); // 64 possible chars.\n\tconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\tfor (let i = 0; i < chars.length; i++) {\n\t    const c = chars.charCodeAt(i);\n\t    intToChar[i] = c;\n\t    charToInt[c] = i;\n\t}\n\t// Provide a fallback for older environments.\n\tconst td = typeof TextDecoder !== 'undefined'\n\t    ? /* #__PURE__ */ new TextDecoder()\n\t    : typeof Buffer !== 'undefined'\n\t        ? {\n\t            decode(buf) {\n\t                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n\t                return out.toString();\n\t            },\n\t        }\n\t        : {\n\t            decode(buf) {\n\t                let out = '';\n\t                for (let i = 0; i < buf.length; i++) {\n\t                    out += String.fromCharCode(buf[i]);\n\t                }\n\t                return out;\n\t            },\n\t        };\n\tfunction encode(decoded) {\n\t    const state = new Int32Array(5);\n\t    const bufLength = 1024 * 16;\n\t    const subLength = bufLength - 36;\n\t    const buf = new Uint8Array(bufLength);\n\t    const sub = buf.subarray(0, subLength);\n\t    let pos = 0;\n\t    let out = '';\n\t    for (let i = 0; i < decoded.length; i++) {\n\t        const line = decoded[i];\n\t        if (i > 0) {\n\t            if (pos === bufLength) {\n\t                out += td.decode(buf);\n\t                pos = 0;\n\t            }\n\t            buf[pos++] = semicolon;\n\t        }\n\t        if (line.length === 0)\n\t            continue;\n\t        state[0] = 0;\n\t        for (let j = 0; j < line.length; j++) {\n\t            const segment = line[j];\n\t            // We can push up to 5 ints, each int can take at most 7 chars, and we\n\t            // may push a comma.\n\t            if (pos > subLength) {\n\t                out += td.decode(sub);\n\t                buf.copyWithin(0, subLength, pos);\n\t                pos -= subLength;\n\t            }\n\t            if (j > 0)\n\t                buf[pos++] = comma;\n\t            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n\t            if (segment.length === 1)\n\t                continue;\n\t            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n\t            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n\t            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n\t            if (segment.length === 4)\n\t                continue;\n\t            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n\t        }\n\t    }\n\t    return out + td.decode(buf.subarray(0, pos));\n\t}\n\tfunction encodeInteger(buf, pos, state, segment, j) {\n\t    const next = segment[j];\n\t    let num = next - state[j];\n\t    state[j] = next;\n\t    num = num < 0 ? (-num << 1) | 1 : num << 1;\n\t    do {\n\t        let clamped = num & 0b011111;\n\t        num >>>= 5;\n\t        if (num > 0)\n\t            clamped |= 0b100000;\n\t        buf[pos++] = intToChar[clamped];\n\t    } while (num > 0);\n\t    return pos;\n\t}\n\n\tfunction getBtoa () {\n\t\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t\t} else if (typeof Buffer === 'function') {\n\t\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t\t} else {\n\t\t\treturn () => {\n\t\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t\t};\n\t\t}\n\t}\n\n\tconst btoa = /*#__PURE__*/ getBtoa();\n\n\tclass SourceMap {\n\t\tconstructor(properties) {\n\t\t\tthis.version = 3;\n\t\t\tthis.file = properties.file;\n\t\t\tthis.sources = properties.sources;\n\t\t\tthis.sourcesContent = properties.sourcesContent;\n\t\t\tthis.names = properties.names;\n\t\t\tthis.mappings = encode(properties.mappings);\n\t\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t\t}\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn JSON.stringify(this);\n\t\t}\n\n\t\ttoUrl() {\n\t\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t\t}\n\t}\n\n\tfunction guessIndent(code) {\n\t\tconst lines = code.split('\\n');\n\n\t\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\t\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\t\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// More lines tabbed than spaced? Assume tabs, and\n\t\t// default to tabs in the case of a tie (or nothing\n\t\t// to go on)\n\t\tif (tabbed.length >= spaced.length) {\n\t\t\treturn '\\t';\n\t\t}\n\n\t\t// Otherwise, we need to guess the multiple\n\t\tconst min = spaced.reduce((previous, current) => {\n\t\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\t\treturn Math.min(numSpaces, previous);\n\t\t}, Infinity);\n\n\t\treturn new Array(min + 1).join(' ');\n\t}\n\n\tfunction getRelativePath(from, to) {\n\t\tconst fromParts = from.split(/[/\\\\]/);\n\t\tconst toParts = to.split(/[/\\\\]/);\n\n\t\tfromParts.pop(); // get dirname\n\n\t\twhile (fromParts[0] === toParts[0]) {\n\t\t\tfromParts.shift();\n\t\t\ttoParts.shift();\n\t\t}\n\n\t\tif (fromParts.length) {\n\t\t\tlet i = fromParts.length;\n\t\t\twhile (i--) fromParts[i] = '..';\n\t\t}\n\n\t\treturn fromParts.concat(toParts).join('/');\n\t}\n\n\tconst toString = Object.prototype.toString;\n\n\tfunction isObject(thing) {\n\t\treturn toString.call(thing) === '[object Object]';\n\t}\n\n\tfunction getLocator(source) {\n\t\tconst originalLines = source.split('\\n');\n\t\tconst lineOffsets = [];\n\n\t\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\t\tlineOffsets.push(pos);\n\t\t\tpos += originalLines[i].length + 1;\n\t\t}\n\n\t\treturn function locate(index) {\n\t\t\tlet i = 0;\n\t\t\tlet j = lineOffsets.length;\n\t\t\twhile (i < j) {\n\t\t\t\tconst m = (i + j) >> 1;\n\t\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\t\tj = m;\n\t\t\t\t} else {\n\t\t\t\t\ti = m + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst line = i - 1;\n\t\t\tconst column = index - lineOffsets[line];\n\t\t\treturn { line, column };\n\t\t};\n\t}\n\n\tclass Mappings {\n\t\tconstructor(hires) {\n\t\t\tthis.hires = hires;\n\t\t\tthis.generatedCodeLine = 0;\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t\tthis.raw = [];\n\t\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\t\tthis.pending = null;\n\t\t}\n\n\t\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\t\tif (content.length) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\t\tif (nameIndex >= 0) {\n\t\t\t\t\tsegment.push(nameIndex);\n\t\t\t\t}\n\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t} else if (this.pending) {\n\t\t\t\tthis.rawSegments.push(this.pending);\n\t\t\t}\n\n\t\t\tthis.advance(content);\n\t\t\tthis.pending = null;\n\t\t}\n\n\t\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\t\tlet originalCharIndex = chunk.start;\n\t\t\tlet first = true;\n\n\t\t\twhile (originalCharIndex < chunk.end) {\n\t\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t\t}\n\n\t\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\t\tloc.line += 1;\n\t\t\t\t\tloc.column = 0;\n\t\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\t\tfirst = true;\n\t\t\t\t} else {\n\t\t\t\t\tloc.column += 1;\n\t\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\n\t\t\t\toriginalCharIndex += 1;\n\t\t\t}\n\n\t\t\tthis.pending = null;\n\t\t}\n\n\t\tadvance(str) {\n\t\t\tif (!str) return;\n\n\t\t\tconst lines = str.split('\\n');\n\n\t\t\tif (lines.length > 1) {\n\t\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\t}\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t}\n\n\t\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t\t}\n\t}\n\n\tconst n = '\\n';\n\n\tconst warned = {\n\t\tinsertLeft: false,\n\t\tinsertRight: false,\n\t\tstoreName: false,\n\t};\n\n\tclass MagicString {\n\t\tconstructor(string, options = {}) {\n\t\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\toriginal: { writable: true, value: string },\n\t\t\t\toutro: { writable: true, value: '' },\n\t\t\t\tintro: { writable: true, value: '' },\n\t\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\t\tbyStart: { writable: true, value: {} },\n\t\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t\t});\n\n\t\t\tthis.byStart[0] = chunk;\n\t\t\tthis.byEnd[string.length] = chunk;\n\t\t}\n\n\t\taddSourcemapLocation(char) {\n\t\t\tthis.sourcemapLocations.add(char);\n\t\t}\n\n\t\tappend(content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\t\tthis.outro += content;\n\t\t\treturn this;\n\t\t}\n\n\t\tappendLeft(index, content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\t\tthis._split(index);\n\n\t\t\tconst chunk = this.byEnd[index];\n\n\t\t\tif (chunk) {\n\t\t\t\tchunk.appendLeft(content);\n\t\t\t} else {\n\t\t\t\tthis.intro += content;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tappendRight(index, content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\t\tthis._split(index);\n\n\t\t\tconst chunk = this.byStart[index];\n\n\t\t\tif (chunk) {\n\t\t\t\tchunk.appendRight(content);\n\t\t\t} else {\n\t\t\t\tthis.outro += content;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\t\tlet originalChunk = this.firstChunk;\n\t\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\t\twhile (originalChunk) {\n\t\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\t\tif (nextClonedChunk) {\n\t\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t\t}\n\n\t\t\t\toriginalChunk = nextOriginalChunk;\n\t\t\t}\n\n\t\t\tcloned.lastChunk = clonedChunk;\n\n\t\t\tif (this.indentExclusionRanges) {\n\t\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t\t}\n\n\t\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\t\tcloned.intro = this.intro;\n\t\t\tcloned.outro = this.outro;\n\n\t\t\treturn cloned;\n\t\t}\n\n\t\tgenerateDecodedMap(options) {\n\t\t\toptions = options || {};\n\n\t\t\tconst sourceIndex = 0;\n\t\t\tconst names = Object.keys(this.storedNames);\n\t\t\tconst mappings = new Mappings(options.hires);\n\n\t\t\tconst locate = getLocator(this.original);\n\n\t\t\tif (this.intro) {\n\t\t\t\tmappings.advance(this.intro);\n\t\t\t}\n\n\t\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (chunk.edited) {\n\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\tloc,\n\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\t\tnames,\n\t\t\t\tmappings: mappings.raw,\n\t\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t\t};\n\t\t}\n\n\t\tgenerateMap(options) {\n\t\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t\t}\n\n\t\t_ensureindentStr() {\n\t\t\tif (this.indentStr === undefined) {\n\t\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t\t}\n\t\t}\n\n\t\t_getRawIndentString() {\n\t\t\tthis._ensureindentStr();\n\t\t\treturn this.indentStr;\n\t\t}\n\n\t\tgetIndentString() {\n\t\t\tthis._ensureindentStr();\n\t\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t\t}\n\n\t\tindent(indentStr, options) {\n\t\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\t\tif (isObject(indentStr)) {\n\t\t\t\toptions = indentStr;\n\t\t\t\tindentStr = undefined;\n\t\t\t}\n\n\t\t\tif (indentStr === undefined) {\n\t\t\t\tthis._ensureindentStr();\n\t\t\t\tindentStr = this.indentStr || '\\t';\n\t\t\t}\n\n\t\t\tif (indentStr === '') return this; // noop\n\n\t\t\toptions = options || {};\n\n\t\t\t// Process exclusion ranges\n\t\t\tconst isExcluded = {};\n\n\t\t\tif (options.exclude) {\n\t\t\t\tconst exclusions =\n\t\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\t\tconst replacer = (match) => {\n\t\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\treturn match;\n\t\t\t};\n\n\t\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\t\tlet charIndex = 0;\n\t\t\tlet chunk = this.firstChunk;\n\n\t\t\twhile (chunk) {\n\t\t\t\tconst end = chunk.end;\n\n\t\t\t\tif (chunk.edited) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcharIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex = chunk.end;\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinsert() {\n\t\t\tthrow new Error(\n\t\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t\t);\n\t\t}\n\n\t\tinsertLeft(index, content) {\n\t\t\tif (!warned.insertLeft) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.insertLeft = true;\n\t\t\t}\n\n\t\t\treturn this.appendLeft(index, content);\n\t\t}\n\n\t\tinsertRight(index, content) {\n\t\t\tif (!warned.insertRight) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.insertRight = true;\n\t\t\t}\n\n\t\t\treturn this.prependRight(index, content);\n\t\t}\n\n\t\tmove(start, end, index) {\n\t\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\t\tthis._split(start);\n\t\t\tthis._split(end);\n\t\t\tthis._split(index);\n\n\t\t\tconst first = this.byStart[start];\n\t\t\tconst last = this.byEnd[end];\n\n\t\t\tconst oldLeft = first.previous;\n\t\t\tconst oldRight = last.next;\n\n\t\t\tconst newRight = this.byStart[index];\n\t\t\tif (!newRight && last === this.lastChunk) return this;\n\t\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\t\tif (newLeft) newLeft.next = first;\n\t\t\tif (newRight) newRight.previous = last;\n\n\t\t\tif (!first.previous) this.firstChunk = last.next;\n\t\t\tif (!last.next) {\n\t\t\t\tthis.lastChunk = first.previous;\n\t\t\t\tthis.lastChunk.next = null;\n\t\t\t}\n\n\t\t\tfirst.previous = newLeft;\n\t\t\tlast.next = newRight || null;\n\n\t\t\tif (!newLeft) this.firstChunk = first;\n\t\t\tif (!newRight) this.lastChunk = last;\n\t\t\treturn this;\n\t\t}\n\n\t\toverwrite(start, end, content, options) {\n\t\t\toptions = options || {};\n\t\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t\t}\n\n\t\tupdate(start, end, content, options) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\n\t\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\t\tif (start === end)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t\t);\n\n\t\t\tthis._split(start);\n\t\t\tthis._split(end);\n\n\t\t\tif (options === true) {\n\t\t\t\tif (!warned.storeName) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\t\twarned.storeName = true;\n\t\t\t\t}\n\n\t\t\t\toptions = { storeName: true };\n\t\t\t}\n\t\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\t\tif (storeName) {\n\t\t\t\tconst original = this.original.slice(start, end);\n\t\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst first = this.byStart[start];\n\t\t\tconst last = this.byEnd[end];\n\n\t\t\tif (first) {\n\t\t\t\tlet chunk = first;\n\t\t\t\twhile (chunk !== last) {\n\t\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\tchunk.edit('', false);\n\t\t\t\t}\n\n\t\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t\t} else {\n\t\t\t\t// must be inserting at the end\n\t\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\t\tlast.next = newChunk;\n\t\t\t\tnewChunk.previous = last;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tprepend(content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\t\tthis.intro = content + this.intro;\n\t\t\treturn this;\n\t\t}\n\n\t\tprependLeft(index, content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\t\tthis._split(index);\n\n\t\t\tconst chunk = this.byEnd[index];\n\n\t\t\tif (chunk) {\n\t\t\t\tchunk.prependLeft(content);\n\t\t\t} else {\n\t\t\t\tthis.intro = content + this.intro;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tprependRight(index, content) {\n\t\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\t\tthis._split(index);\n\n\t\t\tconst chunk = this.byStart[index];\n\n\t\t\tif (chunk) {\n\t\t\t\tchunk.prependRight(content);\n\t\t\t} else {\n\t\t\t\tthis.outro = content + this.outro;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(start, end) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\n\t\t\tif (start === end) return this;\n\n\t\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\t\tthis._split(start);\n\t\t\tthis._split(end);\n\n\t\t\tlet chunk = this.byStart[start];\n\n\t\t\twhile (chunk) {\n\t\t\t\tchunk.intro = '';\n\t\t\t\tchunk.outro = '';\n\t\t\t\tchunk.edit('');\n\n\t\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tlastChar() {\n\t\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\t\tlet chunk = this.lastChunk;\n\t\t\tdo {\n\t\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t\t} while ((chunk = chunk.previous));\n\t\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\t\treturn '';\n\t\t}\n\n\t\tlastLine() {\n\t\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\t\tlet lineStr = this.outro;\n\t\t\tlet chunk = this.lastChunk;\n\t\t\tdo {\n\t\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t\t}\n\n\t\t\t\tif (chunk.content.length > 0) {\n\t\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t\t}\n\n\t\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t\t}\n\t\t\t} while ((chunk = chunk.previous));\n\t\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\t\treturn this.intro + lineStr;\n\t\t}\n\n\t\tslice(start = 0, end = this.original.length) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\n\t\t\tlet result = '';\n\n\t\t\t// find start chunk\n\t\t\tlet chunk = this.firstChunk;\n\t\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t\t// found end chunk before start\n\t\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\t\tconst startChunk = chunk;\n\t\t\twhile (chunk) {\n\t\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\t\tresult += chunk.intro;\n\t\t\t\t}\n\n\t\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\t\tresult += chunk.outro;\n\t\t\t\t}\n\n\t\t\t\tif (containsEnd) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t// TODO deprecate this? not really very useful\n\t\tsnip(start, end) {\n\t\t\tconst clone = this.clone();\n\t\t\tclone.remove(0, start);\n\t\t\tclone.remove(end, clone.original.length);\n\n\t\t\treturn clone;\n\t\t}\n\n\t\t_split(index) {\n\t\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\t\tlet chunk = this.lastSearchedChunk;\n\t\t\tconst searchForward = index > chunk.end;\n\n\t\t\twhile (chunk) {\n\t\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t\t}\n\t\t}\n\n\t\t_splitChunk(chunk, index) {\n\t\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst newChunk = chunk.split(index);\n\n\t\t\tthis.byEnd[index] = chunk;\n\t\t\tthis.byStart[index] = newChunk;\n\t\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\t\tthis.lastSearchedChunk = chunk;\n\t\t\treturn true;\n\t\t}\n\n\t\ttoString() {\n\t\t\tlet str = this.intro;\n\n\t\t\tlet chunk = this.firstChunk;\n\t\t\twhile (chunk) {\n\t\t\t\tstr += chunk.toString();\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\treturn str + this.outro;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\tlet chunk = this.firstChunk;\n\t\t\tdo {\n\t\t\t\tif (\n\t\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t\t)\n\t\t\t\t\treturn false;\n\t\t\t} while ((chunk = chunk.next));\n\t\t\treturn true;\n\t\t}\n\n\t\tlength() {\n\t\t\tlet chunk = this.firstChunk;\n\t\t\tlet length = 0;\n\t\t\tdo {\n\t\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t\t} while ((chunk = chunk.next));\n\t\t\treturn length;\n\t\t}\n\n\t\ttrimLines() {\n\t\t\treturn this.trim('[\\\\r\\\\n]');\n\t\t}\n\n\t\ttrim(charType) {\n\t\t\treturn this.trimStart(charType).trimEnd(charType);\n\t\t}\n\n\t\ttrimEndAborted(charType) {\n\t\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\n\t\t\tlet chunk = this.lastChunk;\n\n\t\t\tdo {\n\t\t\t\tconst end = chunk.end;\n\t\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\t\tif (chunk.end !== end) {\n\t\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tif (aborted) return true;\n\t\t\t\tchunk = chunk.previous;\n\t\t\t} while (chunk);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttrimEnd(charType) {\n\t\t\tthis.trimEndAborted(charType);\n\t\t\treturn this;\n\t\t}\n\t\ttrimStartAborted(charType) {\n\t\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\n\t\t\tlet chunk = this.firstChunk;\n\n\t\t\tdo {\n\t\t\t\tconst end = chunk.end;\n\t\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\t\tif (chunk.end !== end) {\n\t\t\t\t\t// special case...\n\t\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tif (aborted) return true;\n\t\t\t\tchunk = chunk.next;\n\t\t\t} while (chunk);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttrimStart(charType) {\n\t\t\tthis.trimStartAborted(charType);\n\t\t\treturn this;\n\t\t}\n\n\t\thasChanged() {\n\t\t\treturn this.original !== this.toString();\n\t\t}\n\n\t\t_replaceRegexp(searchValue, replacement) {\n\t\t\tfunction getReplacement(match, str) {\n\t\t\t\tif (typeof replacement === 'string') {\n\t\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\t\tconst num = +i;\n\t\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\t\treturn `$${i}`;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction matchAll(re, str) {\n\t\t\t\tlet match;\n\t\t\t\tconst matches = [];\n\t\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\t\tmatches.push(match);\n\t\t\t\t}\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (searchValue.global) {\n\t\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\t\tmatches.forEach((match) => {\n\t\t\t\t\tif (match.index != null)\n\t\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst match = this.original.match(searchValue);\n\t\t\t\tif (match && match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t_replaceString(string, replacement) {\n\t\t\tconst { original } = this;\n\t\t\tconst index = original.indexOf(string);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treplace(searchValue, replacement) {\n\t\t\tif (typeof searchValue === 'string') {\n\t\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t\t}\n\n\t\t\treturn this._replaceRegexp(searchValue, replacement);\n\t\t}\n\n\t\t_replaceAllString(string, replacement) {\n\t\t\tconst { original } = this;\n\t\t\tconst stringLength = string.length;\n\t\t\tfor (\n\t\t\t\tlet index = original.indexOf(string);\n\t\t\t\tindex !== -1;\n\t\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t\t) {\n\t\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treplaceAll(searchValue, replacement) {\n\t\t\tif (typeof searchValue === 'string') {\n\t\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t\t}\n\n\t\t\tif (!searchValue.global) {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this._replaceRegexp(searchValue, replacement);\n\t\t}\n\t}\n\n\tconst hasOwnProp = Object.prototype.hasOwnProperty;\n\n\tclass Bundle {\n\t\tconstructor(options = {}) {\n\t\t\tthis.intro = options.intro || '';\n\t\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\t\tthis.sources = [];\n\t\t\tthis.uniqueSources = [];\n\t\t\tthis.uniqueSourceIndexByFilename = {};\n\t\t}\n\n\t\taddSource(source) {\n\t\t\tif (source instanceof MagicString) {\n\t\t\t\treturn this.addSource({\n\t\t\t\t\tcontent: source,\n\t\t\t\t\tfilename: source.filename,\n\t\t\t\t\tseparator: this.separator,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!isObject(source) || !source.content) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t\t});\n\n\t\t\tif (source.separator === undefined) {\n\t\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\t\tsource.separator = this.separator;\n\t\t\t}\n\n\t\t\tif (source.filename) {\n\t\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t\t} else {\n\t\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.sources.push(source);\n\t\t\treturn this;\n\t\t}\n\n\t\tappend(str, options) {\n\t\t\tthis.addSource({\n\t\t\t\tcontent: new MagicString(str),\n\t\t\t\tseparator: (options && options.separator) || '',\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst bundle = new Bundle({\n\t\t\t\tintro: this.intro,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\n\t\t\tthis.sources.forEach((source) => {\n\t\t\t\tbundle.addSource({\n\t\t\t\t\tfilename: source.filename,\n\t\t\t\t\tcontent: source.content.clone(),\n\t\t\t\t\tseparator: source.separator,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn bundle;\n\t\t}\n\n\t\tgenerateDecodedMap(options = {}) {\n\t\t\tconst names = [];\n\t\t\tlet x_google_ignoreList = undefined;\n\t\t\tthis.sources.forEach((source) => {\n\t\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst mappings = new Mappings(options.hires);\n\n\t\t\tif (this.intro) {\n\t\t\t\tmappings.advance(this.intro);\n\t\t\t}\n\n\t\t\tthis.sources.forEach((source, i) => {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tmappings.advance(this.separator);\n\t\t\t\t}\n\n\t\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\t\tconst magicString = source.content;\n\t\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\t\tif (magicString.intro) {\n\t\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t\t}\n\n\t\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\t\tif (source.filename) {\n\t\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t\t});\n\n\t\t\t\tif (magicString.outro) {\n\t\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t\t}\n\n\t\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t\t}\n\t\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t\t}),\n\t\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t\t}),\n\t\t\t\tnames,\n\t\t\t\tmappings: mappings.raw,\n\t\t\t\tx_google_ignoreList,\n\t\t\t};\n\t\t}\n\n\t\tgenerateMap(options) {\n\t\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t\t}\n\n\t\tgetIndentString() {\n\t\t\tconst indentStringCounts = {};\n\n\t\t\tthis.sources.forEach((source) => {\n\t\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\t\tif (indentStr === null) return;\n\n\t\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\t\tindentStringCounts[indentStr] += 1;\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t\t})[0] || '\\t'\n\t\t\t);\n\t\t}\n\n\t\tindent(indentStr) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tindentStr = this.getIndentString();\n\t\t\t}\n\n\t\t\tif (indentStr === '') return this; // noop\n\n\t\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\t\tthis.sources.forEach((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\t\tsource.content.indent(indentStr, {\n\t\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t\t});\n\n\t\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t\t});\n\n\t\t\tif (this.intro) {\n\t\t\t\tthis.intro =\n\t\t\t\t\tindentStr +\n\t\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tprepend(str) {\n\t\t\tthis.intro = str + this.intro;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoString() {\n\t\t\tconst body = this.sources\n\t\t\t\t.map((source, i) => {\n\t\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\t\treturn str;\n\t\t\t\t})\n\t\t\t\t.join('');\n\n\t\t\treturn this.intro + body;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\t\treturn true;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn this.sources.reduce(\n\t\t\t\t(length, source) => length + source.content.length(),\n\t\t\t\tthis.intro.length\n\t\t\t);\n\t\t}\n\n\t\ttrimLines() {\n\t\t\treturn this.trim('[\\\\r\\\\n]');\n\t\t}\n\n\t\ttrim(charType) {\n\t\t\treturn this.trimStart(charType).trimEnd(charType);\n\t\t}\n\n\t\ttrimStart(charType) {\n\t\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\t\tif (!this.intro) {\n\t\t\t\tlet source;\n\t\t\t\tlet i = 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tsource = this.sources[i++];\n\t\t\t\t\tif (!source) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttrimEnd(charType) {\n\t\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\t\tlet source;\n\t\t\tlet i = this.sources.length - 1;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i--];\n\t\t\t\tif (!source) {\n\t\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\t\treturn this;\n\t\t}\n\t}\n\n\tMagicString.Bundle = Bundle;\n\tMagicString.SourceMap = SourceMap;\n\tMagicString.default = MagicString; // work around TypeScript bug https://github.com/Rich-Harris/magic-string/pull/121\n\n\treturn MagicString;\n\n}));\n//# sourceMappingURL=magic-string.umd.js.map\n"}},"magic-string.umd.js.map":{"file":{"contents":"{\"version\":3,\"file\":\"magic-string.umd.js\",\"sources\":[\"../src/BitSet.js\",\"../src/Chunk.js\",\"../node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs\",\"../src/SourceMap.js\",\"../src/utils/guessIndent.js\",\"../src/utils/getRelativePath.js\",\"../src/utils/isObject.js\",\"../src/utils/getLocator.js\",\"../src/utils/Mappings.js\",\"../src/MagicString.js\",\"../src/Bundle.js\",\"../src/index-legacy.js\"],\"sourcesContent\":[\"export default class BitSet {\\n\\tconstructor(arg) {\\n\\t\\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\\n\\t}\\n\\n\\tadd(n) {\\n\\t\\tthis.bits[n >> 5] |= 1 << (n & 31);\\n\\t}\\n\\n\\thas(n) {\\n\\t\\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\\n\\t}\\n}\\n\",\"export default class Chunk {\\n\\tconstructor(start, end, content) {\\n\\t\\tthis.start = start;\\n\\t\\tthis.end = end;\\n\\t\\tthis.original = content;\\n\\n\\t\\tthis.intro = '';\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.content = content;\\n\\t\\tthis.storeName = false;\\n\\t\\tthis.edited = false;\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\t// we make these non-enumerable, for sanity while debugging\\n\\t\\t\\tObject.defineProperties(this, {\\n\\t\\t\\t\\tprevious: { writable: true, value: null },\\n\\t\\t\\t\\tnext: { writable: true, value: null },\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tthis.previous = null;\\n\\t\\t\\tthis.next = null;\\n\\t\\t}\\n\\t}\\n\\n\\tappendLeft(content) {\\n\\t\\tthis.outro += content;\\n\\t}\\n\\n\\tappendRight(content) {\\n\\t\\tthis.intro = this.intro + content;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst chunk = new Chunk(this.start, this.end, this.original);\\n\\n\\t\\tchunk.intro = this.intro;\\n\\t\\tchunk.outro = this.outro;\\n\\t\\tchunk.content = this.content;\\n\\t\\tchunk.storeName = this.storeName;\\n\\t\\tchunk.edited = this.edited;\\n\\n\\t\\treturn chunk;\\n\\t}\\n\\n\\tcontains(index) {\\n\\t\\treturn this.start < index && index < this.end;\\n\\t}\\n\\n\\teachNext(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\t}\\n\\n\\teachPrevious(fn) {\\n\\t\\tlet chunk = this;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tfn(chunk);\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t}\\n\\t}\\n\\n\\tedit(content, storeName, contentOnly) {\\n\\t\\tthis.content = content;\\n\\t\\tif (!contentOnly) {\\n\\t\\t\\tthis.intro = '';\\n\\t\\t\\tthis.outro = '';\\n\\t\\t}\\n\\t\\tthis.storeName = storeName;\\n\\n\\t\\tthis.edited = true;\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(content) {\\n\\t\\tthis.outro = content + this.outro;\\n\\t}\\n\\n\\tprependRight(content) {\\n\\t\\tthis.intro = content + this.intro;\\n\\t}\\n\\n\\tsplit(index) {\\n\\t\\tconst sliceIndex = index - this.start;\\n\\n\\t\\tconst originalBefore = this.original.slice(0, sliceIndex);\\n\\t\\tconst originalAfter = this.original.slice(sliceIndex);\\n\\n\\t\\tthis.original = originalBefore;\\n\\n\\t\\tconst newChunk = new Chunk(index, this.end, originalAfter);\\n\\t\\tnewChunk.outro = this.outro;\\n\\t\\tthis.outro = '';\\n\\n\\t\\tthis.end = index;\\n\\n\\t\\tif (this.edited) {\\n\\t\\t\\t// TODO is this block necessary?...\\n\\t\\t\\tnewChunk.edit('', false);\\n\\t\\t\\tthis.content = '';\\n\\t\\t} else {\\n\\t\\t\\tthis.content = originalBefore;\\n\\t\\t}\\n\\n\\t\\tnewChunk.next = this.next;\\n\\t\\tif (newChunk.next) newChunk.next.previous = newChunk;\\n\\t\\tnewChunk.previous = this;\\n\\t\\tthis.next = newChunk;\\n\\n\\t\\treturn newChunk;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn this.intro + this.content + this.outro;\\n\\t}\\n\\n\\ttrimEnd(rx) {\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.start + trimmed.length).edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\tif (this.intro.length) return true;\\n\\t\\t}\\n\\t}\\n\\n\\ttrimStart(rx) {\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tconst trimmed = this.content.replace(rx, '');\\n\\n\\t\\tif (trimmed.length) {\\n\\t\\t\\tif (trimmed !== this.content) {\\n\\t\\t\\t\\tthis.split(this.end - trimmed.length);\\n\\t\\t\\t\\tthis.edit('', undefined, true);\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\tthis.edit('', undefined, true);\\n\\n\\t\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\t\\tif (this.outro.length) return true;\\n\\t\\t}\\n\\t}\\n}\\n\",\"const comma = ','.charCodeAt(0);\\nconst semicolon = ';'.charCodeAt(0);\\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\nconst intToChar = new Uint8Array(64); // 64 possible chars.\\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\\nfor (let i = 0; i < chars.length; i++) {\\n    const c = chars.charCodeAt(i);\\n    intToChar[i] = c;\\n    charToInt[c] = i;\\n}\\n// Provide a fallback for older environments.\\nconst td = typeof TextDecoder !== 'undefined'\\n    ? /* #__PURE__ */ new TextDecoder()\\n    : typeof Buffer !== 'undefined'\\n        ? {\\n            decode(buf) {\\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\\n                return out.toString();\\n            },\\n        }\\n        : {\\n            decode(buf) {\\n                let out = '';\\n                for (let i = 0; i < buf.length; i++) {\\n                    out += String.fromCharCode(buf[i]);\\n                }\\n                return out;\\n            },\\n        };\\nfunction decode(mappings) {\\n    const state = new Int32Array(5);\\n    const decoded = [];\\n    let index = 0;\\n    do {\\n        const semi = indexOf(mappings, index);\\n        const line = [];\\n        let sorted = true;\\n        let lastCol = 0;\\n        state[0] = 0;\\n        for (let i = index; i < semi; i++) {\\n            let seg;\\n            i = decodeInteger(mappings, i, state, 0); // genColumn\\n            const col = state[0];\\n            if (col < lastCol)\\n                sorted = false;\\n            lastCol = col;\\n            if (hasMoreVlq(mappings, i, semi)) {\\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\\n                if (hasMoreVlq(mappings, i, semi)) {\\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\\n                    seg = [col, state[1], state[2], state[3], state[4]];\\n                }\\n                else {\\n                    seg = [col, state[1], state[2], state[3]];\\n                }\\n            }\\n            else {\\n                seg = [col];\\n            }\\n            line.push(seg);\\n        }\\n        if (!sorted)\\n            sort(line);\\n        decoded.push(line);\\n        index = semi + 1;\\n    } while (index <= mappings.length);\\n    return decoded;\\n}\\nfunction indexOf(mappings, index) {\\n    const idx = mappings.indexOf(';', index);\\n    return idx === -1 ? mappings.length : idx;\\n}\\nfunction decodeInteger(mappings, pos, state, j) {\\n    let value = 0;\\n    let shift = 0;\\n    let integer = 0;\\n    do {\\n        const c = mappings.charCodeAt(pos++);\\n        integer = charToInt[c];\\n        value |= (integer & 31) << shift;\\n        shift += 5;\\n    } while (integer & 32);\\n    const shouldNegate = value & 1;\\n    value >>>= 1;\\n    if (shouldNegate) {\\n        value = -0x80000000 | -value;\\n    }\\n    state[j] += value;\\n    return pos;\\n}\\nfunction hasMoreVlq(mappings, i, length) {\\n    if (i >= length)\\n        return false;\\n    return mappings.charCodeAt(i) !== comma;\\n}\\nfunction sort(line) {\\n    line.sort(sortComparator);\\n}\\nfunction sortComparator(a, b) {\\n    return a[0] - b[0];\\n}\\nfunction encode(decoded) {\\n    const state = new Int32Array(5);\\n    const bufLength = 1024 * 16;\\n    const subLength = bufLength - 36;\\n    const buf = new Uint8Array(bufLength);\\n    const sub = buf.subarray(0, subLength);\\n    let pos = 0;\\n    let out = '';\\n    for (let i = 0; i < decoded.length; i++) {\\n        const line = decoded[i];\\n        if (i > 0) {\\n            if (pos === bufLength) {\\n                out += td.decode(buf);\\n                pos = 0;\\n            }\\n            buf[pos++] = semicolon;\\n        }\\n        if (line.length === 0)\\n            continue;\\n        state[0] = 0;\\n        for (let j = 0; j < line.length; j++) {\\n            const segment = line[j];\\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\\n            // may push a comma.\\n            if (pos > subLength) {\\n                out += td.decode(sub);\\n                buf.copyWithin(0, subLength, pos);\\n                pos -= subLength;\\n            }\\n            if (j > 0)\\n                buf[pos++] = comma;\\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\\n            if (segment.length === 1)\\n                continue;\\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\\n            if (segment.length === 4)\\n                continue;\\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\\n        }\\n    }\\n    return out + td.decode(buf.subarray(0, pos));\\n}\\nfunction encodeInteger(buf, pos, state, segment, j) {\\n    const next = segment[j];\\n    let num = next - state[j];\\n    state[j] = next;\\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\\n    do {\\n        let clamped = num & 0b011111;\\n        num >>>= 5;\\n        if (num > 0)\\n            clamped |= 0b100000;\\n        buf[pos++] = intToChar[clamped];\\n    } while (num > 0);\\n    return pos;\\n}\\n\\nexport { decode, encode };\\n//# sourceMappingURL=sourcemap-codec.mjs.map\\n\",\"import { encode } from '@jridgewell/sourcemap-codec';\\n\\nfunction getBtoa () {\\n\\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\\n\\t\\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\\n\\t} else if (typeof Buffer === 'function') {\\n\\t\\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\\n\\t} else {\\n\\t\\treturn () => {\\n\\t\\t\\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\\n\\t\\t};\\n\\t}\\n}\\n\\nconst btoa = /*#__PURE__*/ getBtoa();\\n\\nexport default class SourceMap {\\n\\tconstructor(properties) {\\n\\t\\tthis.version = 3;\\n\\t\\tthis.file = properties.file;\\n\\t\\tthis.sources = properties.sources;\\n\\t\\tthis.sourcesContent = properties.sourcesContent;\\n\\t\\tthis.names = properties.names;\\n\\t\\tthis.mappings = encode(properties.mappings);\\n\\t\\tif (typeof properties.x_google_ignoreList !== 'undefined') {\\n\\t\\t\\tthis.x_google_ignoreList = properties.x_google_ignoreList;\\n\\t\\t}\\n\\t}\\n\\n\\ttoString() {\\n\\t\\treturn JSON.stringify(this);\\n\\t}\\n\\n\\ttoUrl() {\\n\\t\\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\\n\\t}\\n}\\n\",\"export default function guessIndent(code) {\\n\\tconst lines = code.split('\\\\n');\\n\\n\\tconst tabbed = lines.filter((line) => /^\\\\t+/.test(line));\\n\\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\\n\\n\\tif (tabbed.length === 0 && spaced.length === 0) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// More lines tabbed than spaced? Assume tabs, and\\n\\t// default to tabs in the case of a tie (or nothing\\n\\t// to go on)\\n\\tif (tabbed.length >= spaced.length) {\\n\\t\\treturn '\\\\t';\\n\\t}\\n\\n\\t// Otherwise, we need to guess the multiple\\n\\tconst min = spaced.reduce((previous, current) => {\\n\\t\\tconst numSpaces = /^ +/.exec(current)[0].length;\\n\\t\\treturn Math.min(numSpaces, previous);\\n\\t}, Infinity);\\n\\n\\treturn new Array(min + 1).join(' ');\\n}\\n\",\"export default function getRelativePath(from, to) {\\n\\tconst fromParts = from.split(/[/\\\\\\\\]/);\\n\\tconst toParts = to.split(/[/\\\\\\\\]/);\\n\\n\\tfromParts.pop(); // get dirname\\n\\n\\twhile (fromParts[0] === toParts[0]) {\\n\\t\\tfromParts.shift();\\n\\t\\ttoParts.shift();\\n\\t}\\n\\n\\tif (fromParts.length) {\\n\\t\\tlet i = fromParts.length;\\n\\t\\twhile (i--) fromParts[i] = '..';\\n\\t}\\n\\n\\treturn fromParts.concat(toParts).join('/');\\n}\\n\",\"const toString = Object.prototype.toString;\\n\\nexport default function isObject(thing) {\\n\\treturn toString.call(thing) === '[object Object]';\\n}\\n\",\"export default function getLocator(source) {\\n\\tconst originalLines = source.split('\\\\n');\\n\\tconst lineOffsets = [];\\n\\n\\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\\n\\t\\tlineOffsets.push(pos);\\n\\t\\tpos += originalLines[i].length + 1;\\n\\t}\\n\\n\\treturn function locate(index) {\\n\\t\\tlet i = 0;\\n\\t\\tlet j = lineOffsets.length;\\n\\t\\twhile (i < j) {\\n\\t\\t\\tconst m = (i + j) >> 1;\\n\\t\\t\\tif (index < lineOffsets[m]) {\\n\\t\\t\\t\\tj = m;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ti = m + 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tconst line = i - 1;\\n\\t\\tconst column = index - lineOffsets[line];\\n\\t\\treturn { line, column };\\n\\t};\\n}\\n\",\"export default class Mappings {\\n\\tconstructor(hires) {\\n\\t\\tthis.hires = hires;\\n\\t\\tthis.generatedCodeLine = 0;\\n\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\tthis.raw = [];\\n\\t\\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddEdit(sourceIndex, content, loc, nameIndex) {\\n\\t\\tif (content.length) {\\n\\t\\t\\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\\n\\t\\t\\tif (nameIndex >= 0) {\\n\\t\\t\\t\\tsegment.push(nameIndex);\\n\\t\\t\\t}\\n\\t\\t\\tthis.rawSegments.push(segment);\\n\\t\\t} else if (this.pending) {\\n\\t\\t\\tthis.rawSegments.push(this.pending);\\n\\t\\t}\\n\\n\\t\\tthis.advance(content);\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\\n\\t\\tlet originalCharIndex = chunk.start;\\n\\t\\tlet first = true;\\n\\n\\t\\twhile (originalCharIndex < chunk.end) {\\n\\t\\t\\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\\n\\t\\t\\t\\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (original[originalCharIndex] === '\\\\n') {\\n\\t\\t\\t\\tloc.line += 1;\\n\\t\\t\\t\\tloc.column = 0;\\n\\t\\t\\t\\tthis.generatedCodeLine += 1;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t\\t\\tfirst = true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tloc.column += 1;\\n\\t\\t\\t\\tthis.generatedCodeColumn += 1;\\n\\t\\t\\t\\tfirst = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalCharIndex += 1;\\n\\t\\t}\\n\\n\\t\\tthis.pending = null;\\n\\t}\\n\\n\\tadvance(str) {\\n\\t\\tif (!str) return;\\n\\n\\t\\tconst lines = str.split('\\\\n');\\n\\n\\t\\tif (lines.length > 1) {\\n\\t\\t\\tfor (let i = 0; i < lines.length - 1; i++) {\\n\\t\\t\\t\\tthis.generatedCodeLine++;\\n\\t\\t\\t\\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\\n\\t\\t\\t}\\n\\t\\t\\tthis.generatedCodeColumn = 0;\\n\\t\\t}\\n\\n\\t\\tthis.generatedCodeColumn += lines[lines.length - 1].length;\\n\\t}\\n}\\n\",\"import BitSet from './BitSet.js';\\nimport Chunk from './Chunk.js';\\nimport SourceMap from './SourceMap.js';\\nimport guessIndent from './utils/guessIndent.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\nimport Stats from './utils/Stats.js';\\n\\nconst n = '\\\\n';\\n\\nconst warned = {\\n\\tinsertLeft: false,\\n\\tinsertRight: false,\\n\\tstoreName: false,\\n};\\n\\nexport default class MagicString {\\n\\tconstructor(string, options = {}) {\\n\\t\\tconst chunk = new Chunk(0, string.length, string);\\n\\n\\t\\tObject.defineProperties(this, {\\n\\t\\t\\toriginal: { writable: true, value: string },\\n\\t\\t\\toutro: { writable: true, value: '' },\\n\\t\\t\\tintro: { writable: true, value: '' },\\n\\t\\t\\tfirstChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastChunk: { writable: true, value: chunk },\\n\\t\\t\\tlastSearchedChunk: { writable: true, value: chunk },\\n\\t\\t\\tbyStart: { writable: true, value: {} },\\n\\t\\t\\tbyEnd: { writable: true, value: {} },\\n\\t\\t\\tfilename: { writable: true, value: options.filename },\\n\\t\\t\\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\\n\\t\\t\\tsourcemapLocations: { writable: true, value: new BitSet() },\\n\\t\\t\\tstoredNames: { writable: true, value: {} },\\n\\t\\t\\tindentStr: { writable: true, value: undefined },\\n\\t\\t\\tignoreList: { writable: true, value: options.ignoreList },\\n\\t\\t});\\n\\n\\t\\tif (DEBUG) {\\n\\t\\t\\tObject.defineProperty(this, 'stats', { value: new Stats() });\\n\\t\\t}\\n\\n\\t\\tthis.byStart[0] = chunk;\\n\\t\\tthis.byEnd[string.length] = chunk;\\n\\t}\\n\\n\\taddSourcemapLocation(char) {\\n\\t\\tthis.sourcemapLocations.add(char);\\n\\t}\\n\\n\\tappend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.outro += content;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendLeft');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendLeft');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappendRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('appendRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.appendRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro += content;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('appendRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst cloned = new MagicString(this.original, { filename: this.filename });\\n\\n\\t\\tlet originalChunk = this.firstChunk;\\n\\t\\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\\n\\n\\t\\twhile (originalChunk) {\\n\\t\\t\\tcloned.byStart[clonedChunk.start] = clonedChunk;\\n\\t\\t\\tcloned.byEnd[clonedChunk.end] = clonedChunk;\\n\\n\\t\\t\\tconst nextOriginalChunk = originalChunk.next;\\n\\t\\t\\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\\n\\n\\t\\t\\tif (nextClonedChunk) {\\n\\t\\t\\t\\tclonedChunk.next = nextClonedChunk;\\n\\t\\t\\t\\tnextClonedChunk.previous = clonedChunk;\\n\\n\\t\\t\\t\\tclonedChunk = nextClonedChunk;\\n\\t\\t\\t}\\n\\n\\t\\t\\toriginalChunk = nextOriginalChunk;\\n\\t\\t}\\n\\n\\t\\tcloned.lastChunk = clonedChunk;\\n\\n\\t\\tif (this.indentExclusionRanges) {\\n\\t\\t\\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\\n\\t\\t}\\n\\n\\t\\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\\n\\n\\t\\tcloned.intro = this.intro;\\n\\t\\tcloned.outro = this.outro;\\n\\n\\t\\treturn cloned;\\n\\t}\\n\\n\\tgenerateDecodedMap(options) {\\n\\t\\toptions = options || {};\\n\\n\\t\\tconst sourceIndex = 0;\\n\\t\\tconst names = Object.keys(this.storedNames);\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tconst locate = getLocator(this.original);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.firstChunk.eachNext((chunk) => {\\n\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\\n\\t\\t\\tsourcesContent: options.includeContent ? [this.original] : undefined,\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\t_ensureindentStr() {\\n\\t\\tif (this.indentStr === undefined) {\\n\\t\\t\\tthis.indentStr = guessIndent(this.original);\\n\\t\\t}\\n\\t}\\n\\n\\t_getRawIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr;\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tthis._ensureindentStr();\\n\\t\\treturn this.indentStr === null ? '\\\\t' : this.indentStr;\\n\\t}\\n\\n\\tindent(indentStr, options) {\\n\\t\\tconst pattern = /^[^\\\\r\\\\n]/gm;\\n\\n\\t\\tif (isObject(indentStr)) {\\n\\t\\t\\toptions = indentStr;\\n\\t\\t\\tindentStr = undefined;\\n\\t\\t}\\n\\n\\t\\tif (indentStr === undefined) {\\n\\t\\t\\tthis._ensureindentStr();\\n\\t\\t\\tindentStr = this.indentStr || '\\\\t';\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\toptions = options || {};\\n\\n\\t\\t// Process exclusion ranges\\n\\t\\tconst isExcluded = {};\\n\\n\\t\\tif (options.exclude) {\\n\\t\\t\\tconst exclusions =\\n\\t\\t\\t\\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\\n\\t\\t\\texclusions.forEach((exclusion) => {\\n\\t\\t\\t\\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\\n\\t\\t\\t\\t\\tisExcluded[i] = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tlet shouldIndentNextCharacter = options.indentStart !== false;\\n\\t\\tconst replacer = (match) => {\\n\\t\\t\\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\\n\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\treturn match;\\n\\t\\t};\\n\\n\\t\\tthis.intro = this.intro.replace(pattern, replacer);\\n\\n\\t\\tlet charIndex = 0;\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tconst end = chunk.end;\\n\\n\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\tchunk.content = chunk.content.replace(pattern, replacer);\\n\\n\\t\\t\\t\\t\\tif (chunk.content.length) {\\n\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\\\n';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcharIndex = chunk.start;\\n\\n\\t\\t\\t\\twhile (charIndex < end) {\\n\\t\\t\\t\\t\\tif (!isExcluded[charIndex]) {\\n\\t\\t\\t\\t\\t\\tconst char = this.original[charIndex];\\n\\n\\t\\t\\t\\t\\t\\tif (char === '\\\\n') {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = true;\\n\\t\\t\\t\\t\\t\\t} else if (char !== '\\\\r' && shouldIndentNextCharacter) {\\n\\t\\t\\t\\t\\t\\t\\tshouldIndentNextCharacter = false;\\n\\n\\t\\t\\t\\t\\t\\t\\tif (charIndex === chunk.start) {\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._splitChunk(chunk, charIndex);\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\t\\t\\t\\t\\tchunk.prependRight(indentStr);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcharIndex += 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tcharIndex = chunk.end;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tthis.outro = this.outro.replace(pattern, replacer);\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tinsert() {\\n\\t\\tthrow new Error(\\n\\t\\t\\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\\n\\t\\t);\\n\\t}\\n\\n\\tinsertLeft(index, content) {\\n\\t\\tif (!warned.insertLeft) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertLeft = true;\\n\\t\\t}\\n\\n\\t\\treturn this.appendLeft(index, content);\\n\\t}\\n\\n\\tinsertRight(index, content) {\\n\\t\\tif (!warned.insertRight) {\\n\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\\n\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\twarned.insertRight = true;\\n\\t\\t}\\n\\n\\t\\treturn this.prependRight(index, content);\\n\\t}\\n\\n\\tmove(start, end, index) {\\n\\t\\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\\n\\n\\t\\tif (DEBUG) this.stats.time('move');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tconst oldLeft = first.previous;\\n\\t\\tconst oldRight = last.next;\\n\\n\\t\\tconst newRight = this.byStart[index];\\n\\t\\tif (!newRight && last === this.lastChunk) return this;\\n\\t\\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\\n\\n\\t\\tif (oldLeft) oldLeft.next = oldRight;\\n\\t\\tif (oldRight) oldRight.previous = oldLeft;\\n\\n\\t\\tif (newLeft) newLeft.next = first;\\n\\t\\tif (newRight) newRight.previous = last;\\n\\n\\t\\tif (!first.previous) this.firstChunk = last.next;\\n\\t\\tif (!last.next) {\\n\\t\\t\\tthis.lastChunk = first.previous;\\n\\t\\t\\tthis.lastChunk.next = null;\\n\\t\\t}\\n\\n\\t\\tfirst.previous = newLeft;\\n\\t\\tlast.next = newRight || null;\\n\\n\\t\\tif (!newLeft) this.firstChunk = first;\\n\\t\\tif (!newRight) this.lastChunk = last;\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('move');\\n\\t\\treturn this;\\n\\t}\\n\\n\\toverwrite(start, end, content, options) {\\n\\t\\toptions = options || {};\\n\\t\\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\\n\\t}\\n\\n\\tupdate(start, end, content, options) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\\n\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (end > this.original.length) throw new Error('end is out of bounds');\\n\\t\\tif (start === end)\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\\n\\t\\t\\t);\\n\\n\\t\\tif (DEBUG) this.stats.time('overwrite');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tif (options === true) {\\n\\t\\t\\tif (!warned.storeName) {\\n\\t\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t\\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\\n\\t\\t\\t\\t); // eslint-disable-line no-console\\n\\t\\t\\t\\twarned.storeName = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\toptions = { storeName: true };\\n\\t\\t}\\n\\t\\tconst storeName = options !== undefined ? options.storeName : false;\\n\\t\\tconst overwrite = options !== undefined ? options.overwrite : false;\\n\\n\\t\\tif (storeName) {\\n\\t\\t\\tconst original = this.original.slice(start, end);\\n\\t\\t\\tObject.defineProperty(this.storedNames, original, {\\n\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\tvalue: true,\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst first = this.byStart[start];\\n\\t\\tconst last = this.byEnd[end];\\n\\n\\t\\tif (first) {\\n\\t\\t\\tlet chunk = first;\\n\\t\\t\\twhile (chunk !== last) {\\n\\t\\t\\t\\tif (chunk.next !== this.byStart[chunk.end]) {\\n\\t\\t\\t\\t\\tthrow new Error('Cannot overwrite across a split point');\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tchunk = chunk.next;\\n\\t\\t\\t\\tchunk.edit('', false);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfirst.edit(content, storeName, !overwrite);\\n\\t\\t} else {\\n\\t\\t\\t// must be inserting at the end\\n\\t\\t\\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\\n\\n\\t\\t\\t// TODO last chunk in the array may not be the last chunk, if it's moved...\\n\\t\\t\\tlast.next = newChunk;\\n\\t\\t\\tnewChunk.previous = last;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('overwrite');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\\n\\n\\t\\tthis.intro = content + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependLeft(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byEnd[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependLeft(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.intro = content + this.intro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprependRight(index, content) {\\n\\t\\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\\n\\n\\t\\tif (DEBUG) this.stats.time('insertRight');\\n\\n\\t\\tthis._split(index);\\n\\n\\t\\tconst chunk = this.byStart[index];\\n\\n\\t\\tif (chunk) {\\n\\t\\t\\tchunk.prependRight(content);\\n\\t\\t} else {\\n\\t\\t\\tthis.outro = content + this.outro;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('insertRight');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tremove(start, end) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tif (start === end) return this;\\n\\n\\t\\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\\n\\t\\tif (start > end) throw new Error('end must be greater than start');\\n\\n\\t\\tif (DEBUG) this.stats.time('remove');\\n\\n\\t\\tthis._split(start);\\n\\t\\tthis._split(end);\\n\\n\\t\\tlet chunk = this.byStart[start];\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tchunk.intro = '';\\n\\t\\t\\tchunk.outro = '';\\n\\t\\t\\tchunk.edit('');\\n\\n\\t\\t\\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\\n\\t\\t}\\n\\n\\t\\tif (DEBUG) this.stats.timeEnd('remove');\\n\\t\\treturn this;\\n\\t}\\n\\n\\tlastChar() {\\n\\t\\tif (this.outro.length) return this.outro[this.outro.length - 1];\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\\n\\t\\t\\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\\n\\t\\t\\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tif (this.intro.length) return this.intro[this.intro.length - 1];\\n\\t\\treturn '';\\n\\t}\\n\\n\\tlastLine() {\\n\\t\\tlet lineIndex = this.outro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\\n\\t\\tlet lineStr = this.outro;\\n\\t\\tlet chunk = this.lastChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (chunk.outro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.outro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.outro + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.content.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.content.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.content + lineStr;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (chunk.intro.length > 0) {\\n\\t\\t\\t\\tlineIndex = chunk.intro.lastIndexOf(n);\\n\\t\\t\\t\\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\t\\t\\tlineStr = chunk.intro + lineStr;\\n\\t\\t\\t}\\n\\t\\t} while ((chunk = chunk.previous));\\n\\t\\tlineIndex = this.intro.lastIndexOf(n);\\n\\t\\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\\n\\t\\treturn this.intro + lineStr;\\n\\t}\\n\\n\\tslice(start = 0, end = this.original.length) {\\n\\t\\twhile (start < 0) start += this.original.length;\\n\\t\\twhile (end < 0) end += this.original.length;\\n\\n\\t\\tlet result = '';\\n\\n\\t\\t// find start chunk\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\\n\\t\\t\\t// found end chunk before start\\n\\t\\t\\tif (chunk.start < end && chunk.end >= end) {\\n\\t\\t\\t\\treturn result;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\tif (chunk && chunk.edited && chunk.start !== start)\\n\\t\\t\\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\\n\\n\\t\\tconst startChunk = chunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\\n\\t\\t\\t\\tresult += chunk.intro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst containsEnd = chunk.start < end && chunk.end >= end;\\n\\t\\t\\tif (containsEnd && chunk.edited && chunk.end !== end)\\n\\t\\t\\t\\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\\n\\n\\t\\t\\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\\n\\t\\t\\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\\n\\n\\t\\t\\tresult += chunk.content.slice(sliceStart, sliceEnd);\\n\\n\\t\\t\\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\\n\\t\\t\\t\\tresult += chunk.outro;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (containsEnd) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\t// TODO deprecate this? not really very useful\\n\\tsnip(start, end) {\\n\\t\\tconst clone = this.clone();\\n\\t\\tclone.remove(0, start);\\n\\t\\tclone.remove(end, clone.original.length);\\n\\n\\t\\treturn clone;\\n\\t}\\n\\n\\t_split(index) {\\n\\t\\tif (this.byStart[index] || this.byEnd[index]) return;\\n\\n\\t\\tif (DEBUG) this.stats.time('_split');\\n\\n\\t\\tlet chunk = this.lastSearchedChunk;\\n\\t\\tconst searchForward = index > chunk.end;\\n\\n\\t\\twhile (chunk) {\\n\\t\\t\\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\\n\\n\\t\\t\\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\\n\\t\\t}\\n\\t}\\n\\n\\t_splitChunk(chunk, index) {\\n\\t\\tif (chunk.edited && chunk.content.length) {\\n\\t\\t\\t// zero-length edited chunks are a special case (overlapping replacements)\\n\\t\\t\\tconst loc = getLocator(this.original)(index);\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \\\"${chunk.original}\\\")`\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tconst newChunk = chunk.split(index);\\n\\n\\t\\tthis.byEnd[index] = chunk;\\n\\t\\tthis.byStart[index] = newChunk;\\n\\t\\tthis.byEnd[newChunk.end] = newChunk;\\n\\n\\t\\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\\n\\n\\t\\tthis.lastSearchedChunk = chunk;\\n\\t\\tif (DEBUG) this.stats.timeEnd('_split');\\n\\t\\treturn true;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tlet str = this.intro;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\twhile (chunk) {\\n\\t\\t\\tstr += chunk.toString();\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t}\\n\\n\\t\\treturn str + this.outro;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tdo {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t(chunk.intro.length && chunk.intro.trim()) ||\\n\\t\\t\\t\\t(chunk.content.length && chunk.content.trim()) ||\\n\\t\\t\\t\\t(chunk.outro.length && chunk.outro.trim())\\n\\t\\t\\t)\\n\\t\\t\\t\\treturn false;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\tlet chunk = this.firstChunk;\\n\\t\\tlet length = 0;\\n\\t\\tdo {\\n\\t\\t\\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\\n\\t\\t} while ((chunk = chunk.next));\\n\\t\\treturn length;\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimEndAborted(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tthis.outro = this.outro.replace(rx, '');\\n\\t\\tif (this.outro.length) return true;\\n\\n\\t\\tlet chunk = this.lastChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimEnd(rx);\\n\\n\\t\\t\\t// if chunk was trimmed, we have a new lastChunk\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\tif (this.lastChunk === chunk) {\\n\\t\\t\\t\\t\\tthis.lastChunk = chunk.next;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.previous;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tthis.trimEndAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\ttrimStartAborted(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\tif (this.intro.length) return true;\\n\\n\\t\\tlet chunk = this.firstChunk;\\n\\n\\t\\tdo {\\n\\t\\t\\tconst end = chunk.end;\\n\\t\\t\\tconst aborted = chunk.trimStart(rx);\\n\\n\\t\\t\\tif (chunk.end !== end) {\\n\\t\\t\\t\\t// special case...\\n\\t\\t\\t\\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\\n\\n\\t\\t\\t\\tthis.byEnd[chunk.end] = chunk;\\n\\t\\t\\t\\tthis.byStart[chunk.next.start] = chunk.next;\\n\\t\\t\\t\\tthis.byEnd[chunk.next.end] = chunk.next;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (aborted) return true;\\n\\t\\t\\tchunk = chunk.next;\\n\\t\\t} while (chunk);\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tthis.trimStartAborted(charType);\\n\\t\\treturn this;\\n\\t}\\n\\n\\thasChanged() {\\n\\t\\treturn this.original !== this.toString();\\n\\t}\\n\\n\\t_replaceRegexp(searchValue, replacement) {\\n\\t\\tfunction getReplacement(match, str) {\\n\\t\\t\\tif (typeof replacement === 'string') {\\n\\t\\t\\t\\treturn replacement.replace(/\\\\$(\\\\$|&|\\\\d+)/g, (_, i) => {\\n\\t\\t\\t\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\\n\\t\\t\\t\\t\\tif (i === '$') return '$';\\n\\t\\t\\t\\t\\tif (i === '&') return match[0];\\n\\t\\t\\t\\t\\tconst num = +i;\\n\\t\\t\\t\\t\\tif (num < match.length) return match[+i];\\n\\t\\t\\t\\t\\treturn `$${i}`;\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn replacement(...match, match.index, str, match.groups);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tfunction matchAll(re, str) {\\n\\t\\t\\tlet match;\\n\\t\\t\\tconst matches = [];\\n\\t\\t\\twhile ((match = re.exec(str))) {\\n\\t\\t\\t\\tmatches.push(match);\\n\\t\\t\\t}\\n\\t\\t\\treturn matches;\\n\\t\\t}\\n\\t\\tif (searchValue.global) {\\n\\t\\t\\tconst matches = matchAll(searchValue, this.original);\\n\\t\\t\\tmatches.forEach((match) => {\\n\\t\\t\\t\\tif (match.index != null)\\n\\t\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tconst match = this.original.match(searchValue);\\n\\t\\t\\tif (match && match.index != null)\\n\\t\\t\\t\\tthis.overwrite(\\n\\t\\t\\t\\t\\tmatch.index,\\n\\t\\t\\t\\t\\tmatch.index + match[0].length,\\n\\t\\t\\t\\t\\tgetReplacement(match, this.original)\\n\\t\\t\\t\\t);\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n\\n\\t_replaceString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst index = original.indexOf(string);\\n\\n\\t\\tif (index !== -1) {\\n\\t\\t\\tthis.overwrite(index, index + string.length, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplace(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n\\n\\t_replaceAllString(string, replacement) {\\n\\t\\tconst { original } = this;\\n\\t\\tconst stringLength = string.length;\\n\\t\\tfor (\\n\\t\\t\\tlet index = original.indexOf(string);\\n\\t\\t\\tindex !== -1;\\n\\t\\t\\tindex = original.indexOf(string, index + stringLength)\\n\\t\\t) {\\n\\t\\t\\tthis.overwrite(index, index + stringLength, replacement);\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\treplaceAll(searchValue, replacement) {\\n\\t\\tif (typeof searchValue === 'string') {\\n\\t\\t\\treturn this._replaceAllString(searchValue, replacement);\\n\\t\\t}\\n\\n\\t\\tif (!searchValue.global) {\\n\\t\\t\\tthrow new TypeError(\\n\\t\\t\\t\\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn this._replaceRegexp(searchValue, replacement);\\n\\t}\\n}\\n\",\"import MagicString from './MagicString.js';\\nimport SourceMap from './SourceMap.js';\\nimport getRelativePath from './utils/getRelativePath.js';\\nimport isObject from './utils/isObject.js';\\nimport getLocator from './utils/getLocator.js';\\nimport Mappings from './utils/Mappings.js';\\n\\nconst hasOwnProp = Object.prototype.hasOwnProperty;\\n\\nexport default class Bundle {\\n\\tconstructor(options = {}) {\\n\\t\\tthis.intro = options.intro || '';\\n\\t\\tthis.separator = options.separator !== undefined ? options.separator : '\\\\n';\\n\\t\\tthis.sources = [];\\n\\t\\tthis.uniqueSources = [];\\n\\t\\tthis.uniqueSourceIndexByFilename = {};\\n\\t}\\n\\n\\taddSource(source) {\\n\\t\\tif (source instanceof MagicString) {\\n\\t\\t\\treturn this.addSource({\\n\\t\\t\\t\\tcontent: source,\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tseparator: this.separator,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (!isObject(source) || !source.content) {\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\\n\\t\\t\\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\\n\\t\\t});\\n\\n\\t\\tif (source.separator === undefined) {\\n\\t\\t\\t// TODO there's a bunch of this sort of thing, needs cleaning up\\n\\t\\t\\tsource.separator = this.separator;\\n\\t\\t}\\n\\n\\t\\tif (source.filename) {\\n\\t\\t\\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\\n\\t\\t\\t\\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\\n\\t\\t\\t\\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\\n\\t\\t\\t\\tif (source.content.original !== uniqueSource.content) {\\n\\t\\t\\t\\t\\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.sources.push(source);\\n\\t\\treturn this;\\n\\t}\\n\\n\\tappend(str, options) {\\n\\t\\tthis.addSource({\\n\\t\\t\\tcontent: new MagicString(str),\\n\\t\\t\\tseparator: (options && options.separator) || '',\\n\\t\\t});\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tclone() {\\n\\t\\tconst bundle = new Bundle({\\n\\t\\t\\tintro: this.intro,\\n\\t\\t\\tseparator: this.separator,\\n\\t\\t});\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tbundle.addSource({\\n\\t\\t\\t\\tfilename: source.filename,\\n\\t\\t\\t\\tcontent: source.content.clone(),\\n\\t\\t\\t\\tseparator: source.separator,\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn bundle;\\n\\t}\\n\\n\\tgenerateDecodedMap(options = {}) {\\n\\t\\tconst names = [];\\n\\t\\tlet x_google_ignoreList = undefined;\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tObject.keys(source.content.storedNames).forEach((name) => {\\n\\t\\t\\t\\tif (!~names.indexOf(name)) names.push(name);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst mappings = new Mappings(options.hires);\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tmappings.advance(this.intro);\\n\\t\\t}\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tif (i > 0) {\\n\\t\\t\\t\\tmappings.advance(this.separator);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\\n\\t\\t\\tconst magicString = source.content;\\n\\t\\t\\tconst locate = getLocator(magicString.original);\\n\\n\\t\\t\\tif (magicString.intro) {\\n\\t\\t\\t\\tmappings.advance(magicString.intro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tmagicString.firstChunk.eachNext((chunk) => {\\n\\t\\t\\t\\tconst loc = locate(chunk.start);\\n\\n\\t\\t\\t\\tif (chunk.intro.length) mappings.advance(chunk.intro);\\n\\n\\t\\t\\t\\tif (source.filename) {\\n\\t\\t\\t\\t\\tif (chunk.edited) {\\n\\t\\t\\t\\t\\t\\tmappings.addEdit(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk.content,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tchunk.storeName ? names.indexOf(chunk.original) : -1\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tmappings.addUneditedChunk(\\n\\t\\t\\t\\t\\t\\t\\tsourceIndex,\\n\\t\\t\\t\\t\\t\\t\\tchunk,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.original,\\n\\t\\t\\t\\t\\t\\t\\tloc,\\n\\t\\t\\t\\t\\t\\t\\tmagicString.sourcemapLocations\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmappings.advance(chunk.content);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (chunk.outro.length) mappings.advance(chunk.outro);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (magicString.outro) {\\n\\t\\t\\t\\tmappings.advance(magicString.outro);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (source.ignoreList && sourceIndex !== -1) {\\n\\t\\t\\t\\tif (x_google_ignoreList === undefined) {\\n\\t\\t\\t\\t\\tx_google_ignoreList = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tx_google_ignoreList.push(sourceIndex);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: options.file ? options.file.split(/[/\\\\\\\\]/).pop() : undefined,\\n\\t\\t\\tsources: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\\n\\t\\t\\t}),\\n\\t\\t\\tsourcesContent: this.uniqueSources.map((source) => {\\n\\t\\t\\t\\treturn options.includeContent ? source.content : null;\\n\\t\\t\\t}),\\n\\t\\t\\tnames,\\n\\t\\t\\tmappings: mappings.raw,\\n\\t\\t\\tx_google_ignoreList,\\n\\t\\t};\\n\\t}\\n\\n\\tgenerateMap(options) {\\n\\t\\treturn new SourceMap(this.generateDecodedMap(options));\\n\\t}\\n\\n\\tgetIndentString() {\\n\\t\\tconst indentStringCounts = {};\\n\\n\\t\\tthis.sources.forEach((source) => {\\n\\t\\t\\tconst indentStr = source.content._getRawIndentString();\\n\\n\\t\\t\\tif (indentStr === null) return;\\n\\n\\t\\t\\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\\n\\t\\t\\tindentStringCounts[indentStr] += 1;\\n\\t\\t});\\n\\n\\t\\treturn (\\n\\t\\t\\tObject.keys(indentStringCounts).sort((a, b) => {\\n\\t\\t\\t\\treturn indentStringCounts[a] - indentStringCounts[b];\\n\\t\\t\\t})[0] || '\\\\t'\\n\\t\\t);\\n\\t}\\n\\n\\tindent(indentStr) {\\n\\t\\tif (!arguments.length) {\\n\\t\\t\\tindentStr = this.getIndentString();\\n\\t\\t}\\n\\n\\t\\tif (indentStr === '') return this; // noop\\n\\n\\t\\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\\\n';\\n\\n\\t\\tthis.sources.forEach((source, i) => {\\n\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\tconst indentStart = trailingNewline || (i > 0 && /\\\\r?\\\\n$/.test(separator));\\n\\n\\t\\t\\tsource.content.indent(indentStr, {\\n\\t\\t\\t\\texclude: source.indentExclusionRanges,\\n\\t\\t\\t\\tindentStart, //: trailingNewline || /\\\\r?\\\\n$/.test( separator )  //true///\\\\r?\\\\n/.test( separator )\\n\\t\\t\\t});\\n\\n\\t\\t\\ttrailingNewline = source.content.lastChar() === '\\\\n';\\n\\t\\t});\\n\\n\\t\\tif (this.intro) {\\n\\t\\t\\tthis.intro =\\n\\t\\t\\t\\tindentStr +\\n\\t\\t\\t\\tthis.intro.replace(/^[^\\\\n]/gm, (match, index) => {\\n\\t\\t\\t\\t\\treturn index > 0 ? indentStr + match : match;\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\tprepend(str) {\\n\\t\\tthis.intro = str + this.intro;\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttoString() {\\n\\t\\tconst body = this.sources\\n\\t\\t\\t.map((source, i) => {\\n\\t\\t\\t\\tconst separator = source.separator !== undefined ? source.separator : this.separator;\\n\\t\\t\\t\\tconst str = (i > 0 ? separator : '') + source.content.toString();\\n\\n\\t\\t\\t\\treturn str;\\n\\t\\t\\t})\\n\\t\\t\\t.join('');\\n\\n\\t\\treturn this.intro + body;\\n\\t}\\n\\n\\tisEmpty() {\\n\\t\\tif (this.intro.length && this.intro.trim()) return false;\\n\\t\\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlength() {\\n\\t\\treturn this.sources.reduce(\\n\\t\\t\\t(length, source) => length + source.content.length(),\\n\\t\\t\\tthis.intro.length\\n\\t\\t);\\n\\t}\\n\\n\\ttrimLines() {\\n\\t\\treturn this.trim('[\\\\\\\\r\\\\\\\\n]');\\n\\t}\\n\\n\\ttrim(charType) {\\n\\t\\treturn this.trimStart(charType).trimEnd(charType);\\n\\t}\\n\\n\\ttrimStart(charType) {\\n\\t\\tconst rx = new RegExp('^' + (charType || '\\\\\\\\s') + '+');\\n\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\n\\t\\tif (!this.intro) {\\n\\t\\t\\tlet source;\\n\\t\\t\\tlet i = 0;\\n\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tsource = this.sources[i++];\\n\\t\\t\\t\\tif (!source) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} while (!source.content.trimStartAborted(charType));\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t}\\n\\n\\ttrimEnd(charType) {\\n\\t\\tconst rx = new RegExp((charType || '\\\\\\\\s') + '+$');\\n\\n\\t\\tlet source;\\n\\t\\tlet i = this.sources.length - 1;\\n\\n\\t\\tdo {\\n\\t\\t\\tsource = this.sources[i--];\\n\\t\\t\\tif (!source) {\\n\\t\\t\\t\\tthis.intro = this.intro.replace(rx, '');\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t} while (!source.content.trimEndAborted(charType));\\n\\n\\t\\treturn this;\\n\\t}\\n}\\n\",\"import MagicString from './MagicString.js';\\nimport Bundle from './Bundle.js';\\nimport SourceMap from './SourceMap.js';\\n\\nMagicString.Bundle = Bundle;\\nMagicString.SourceMap = SourceMap;\\nMagicString.default = MagicString; // work around TypeScript bug https://github.com/Rich-Harris/magic-string/pull/121\\n\\nexport default MagicString;\\n\"],\"names\":[],\"mappings\":\"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\"}"}}}},"index.d.ts":{"file":{"contents":"export interface BundleOptions {\n  intro?: string;\n  separator?: string;\n}\n\nexport interface SourceMapOptions {\n  /**\n   * Whether the mapping should be high-resolution.\n   * Hi-res mappings map every single character, meaning (for example) your devtools will always\n   * be able to pinpoint the exact location of function calls and so on.\n   * With lo-res mappings, devtools may only be able to identify the correct\n   * line - but they're quicker to generate and less bulky.\n   * If sourcemap locations have been specified with s.addSourceMapLocation(), they will be used here.\n   */\n  hires?: boolean;\n  /**\n   * The filename where you plan to write the sourcemap.\n   */\n  file?: string;\n  /**\n   * The filename of the file containing the original source.\n   */\n  source?: string;\n  /**\n   * Whether to include the original content in the map's sourcesContent array.\n   */\n  includeContent?: boolean;\n}\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\n\nexport interface DecodedSourceMap {\n  file: string;\n  sources: string[];\n  sourcesContent: (string | null)[];\n  names: string[];\n  mappings: SourceMapSegment[][];\n  x_google_ignoreList?: number[];\n}\n\nexport class SourceMap {\n  constructor(properties: DecodedSourceMap);\n\n  version: number;\n  file: string;\n  sources: string[];\n  sourcesContent: (string | null)[];\n  names: string[];\n  mappings: string;\n  x_google_ignoreList?: number[];\n\n  /**\n   * Returns the equivalent of `JSON.stringify(map)`\n   */\n  toString(): string;\n  /**\n   * Returns a DataURI containing the sourcemap. Useful for doing this sort of thing:\n   * `generateMap(options?: SourceMapOptions): SourceMap;`\n   */\n  toUrl(): string;\n}\n\nexport class Bundle {\n  constructor(options?: BundleOptions);\n  /**\n   * Adds the specified source to the bundle, which can either be a `MagicString` object directly,\n   * or an options object that holds a magic string `content` property and optionally provides\n   * a `filename` for the source within the bundle, as well as an optional `ignoreList` hint\n   * (which defaults to `false`). The `filename` is used when constructing the source map for the\n   * bundle, to identify this `source` in the source map's `sources` field. The `ignoreList` hint\n   * is used to populate the `x_google_ignoreList` extension field in the source map, which is a\n   * mechanism for tools to signal to debuggers that certain sources should be ignored by default\n   * (depending on user preferences).\n   */\n  addSource(source: MagicString | { filename?: string, content: MagicString, ignoreList?: boolean }): Bundle;\n  append(str: string, options?: BundleOptions): Bundle;\n  clone(): Bundle;\n  generateMap(options?: SourceMapOptions): SourceMap;\n  generateDecodedMap(options?: SourceMapOptions): DecodedSourceMap;\n  getIndentString(): string;\n  indent(indentStr?: string): Bundle;\n  indentExclusionRanges: ExclusionRange | Array<ExclusionRange>;\n  prepend(str: string): Bundle;\n  toString(): string;\n  trimLines(): Bundle;\n  trim(charType?: string): Bundle;\n  trimStart(charType?: string): Bundle;\n  trimEnd(charType?: string): Bundle;\n  isEmpty(): boolean;\n  length(): number;\n}\n\nexport type ExclusionRange = [ number, number ];\n\nexport interface MagicStringOptions {\n  filename?: string,\n  indentExclusionRanges?: ExclusionRange | Array<ExclusionRange>;\n}\n\nexport interface IndentOptions {\n  exclude?: ExclusionRange | Array<ExclusionRange>;\n  indentStart?: boolean;\n}\n\nexport interface OverwriteOptions {\n  storeName?: boolean;\n  contentOnly?: boolean;\n}\n\nexport interface UpdateOptions {\n  storeName?: boolean;\n  overwrite?: boolean;\n}\n\nexport default class MagicString {\n  constructor(str: string, options?: MagicStringOptions);\n  /**\n   * Adds the specified character index (with respect to the original string) to sourcemap mappings, if `hires` is false.\n   */\n  addSourcemapLocation(char: number): void;\n  /**\n   * Appends the specified content to the end of the string.\n   */\n  append(content: string): MagicString;\n  /**\n   * Appends the specified content at the index in the original string.\n   * If a range *ending* with index is subsequently moved, the insert will be moved with it.\n   * See also `s.prependLeft(...)`.\n   */\n  appendLeft(index: number, content: string): MagicString;\n  /**\n   * Appends the specified content at the index in the original string.\n   * If a range *starting* with index is subsequently moved, the insert will be moved with it.\n   * See also `s.prependRight(...)`.\n   */\n  appendRight(index: number, content: string): MagicString;\n  /**\n   * Does what you'd expect.\n   */\n  clone(): MagicString;\n  /**\n   * Generates a version 3 sourcemap.\n   */\n  generateMap(options?: SourceMapOptions): SourceMap;\n  /**\n   * Generates a sourcemap object with raw mappings in array form, rather than encoded as a string.\n   * Useful if you need to manipulate the sourcemap further, but most of the time you will use `generateMap` instead.\n   */\n  generateDecodedMap(options?: SourceMapOptions): DecodedSourceMap;\n  getIndentString(): string;\n\n  /**\n   * Prefixes each line of the string with prefix.\n   * If prefix is not supplied, the indentation will be guessed from the original content, falling back to a single tab character.\n   */\n  indent(options?: IndentOptions): MagicString;\n  /**\n   * Prefixes each line of the string with prefix.\n   * If prefix is not supplied, the indentation will be guessed from the original content, falling back to a single tab character.\n   *\n   * The options argument can have an exclude property, which is an array of [start, end] character ranges.\n   * These ranges will be excluded from the indentation - useful for (e.g.) multiline strings.\n   */\n  indent(indentStr?: string, options?: IndentOptions): MagicString;\n  indentExclusionRanges: ExclusionRange | Array<ExclusionRange>;\n\n  /**\n   * Moves the characters from `start and `end` to `index`.\n   */\n  move(start: number, end: number, index: number): MagicString;\n  /**\n   * Replaces the characters from `start` to `end` with `content`, along with the appended/prepended content in\n   * that range. The same restrictions as `s.remove()` apply.\n   *\n   * The fourth argument is optional. It can have a storeName property — if true, the original name will be stored\n   * for later inclusion in a sourcemap's names array — and a contentOnly property which determines whether only\n   * the content is overwritten, or anything that was appended/prepended to the range as well.\n   *\n   * It may be preferred to use `s.update(...)` instead if you wish to avoid overwriting the appended/prepended content.\n   */\n  overwrite(start: number, end: number, content: string, options?: boolean | OverwriteOptions): MagicString;\n  /**\n   * Replaces the characters from `start` to `end` with `content`. The same restrictions as `s.remove()` apply.\n   *\n   * The fourth argument is optional. It can have a storeName property — if true, the original name will be stored\n   * for later inclusion in a sourcemap's names array — and an overwrite property which determines whether only\n   * the content is overwritten, or anything that was appended/prepended to the range as well.\n   */\n  update(start: number, end: number, content: string, options?: boolean | UpdateOptions): MagicString;\n  /**\n   * Prepends the string with the specified content.\n   */\n  prepend(content: string): MagicString;\n  /**\n   * Same as `s.appendLeft(...)`, except that the inserted content will go *before* any previous appends or prepends at index\n   */\n  prependLeft(index: number, content: string): MagicString;\n  /**\n   * Same as `s.appendRight(...)`, except that the inserted content will go *before* any previous appends or prepends at `index`\n   */\n  prependRight(index: number, content: string): MagicString;\n  /**\n   * Removes the characters from `start` to `end` (of the original string, **not** the generated string).\n   * Removing the same content twice, or making removals that partially overlap, will cause an error.\n   */\n  remove(start: number, end: number): MagicString;\n  /**\n   * Returns the content of the generated string that corresponds to the slice between `start` and `end` of the original string.\n   * Throws error if the indices are for characters that were already removed.\n   */\n  slice(start: number, end: number): string;\n  /**\n   * Returns a clone of `s`, with all content before the `start` and `end` characters of the original string removed.\n   */\n  snip(start: number, end: number): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start and end.\n   */\n  trim(charType?: string): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start.\n   */\n  trimStart(charType?: string): MagicString;\n  /**\n   * Trims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the end.\n   */\n  trimEnd(charType?: string): MagicString;\n  /**\n   * Removes empty lines from the start and end.\n   */\n  trimLines(): MagicString;\n  /**\n   * String replacement with RegExp or string.\n   */\n  replace(regex: RegExp | string, replacement: string | ((substring: string, ...args: any[]) => string)): MagicString;\n  /**\n   * Same as `s.replace`, but replace all matched strings instead of just one.\n   */\n  replaceAll(regex: RegExp | string, replacement: string | ((substring: string, ...args: any[]) => string)): MagicString;\n\n  lastChar(): string;\n  lastLine(): string;\n  /**\n   * Returns true if the resulting source is empty (disregarding white space).\n   */\n  isEmpty(): boolean;\n  length(): number;\n\n  /**\n   * Indicates if the string has been changed.\n   */\n  hasChanged(): boolean;\n\n  original: string;\n  /**\n   * Returns the generated string.\n   */\n  toString(): string;\n}\n"}},"LICENSE":{"file":{"contents":"Copyright 2018 Rich Harris\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"}},"package.json":{"file":{"contents":"{\n  \"name\": \"magic-string\",\n  \"version\": \"0.30.0\",\n  \"description\": \"Modify strings, generate sourcemaps\",\n  \"keywords\": [\n    \"string\",\n    \"string manipulation\",\n    \"sourcemap\",\n    \"templating\",\n    \"transpilation\"\n  ],\n  \"repository\": \"https://github.com/rich-harris/magic-string\",\n  \"license\": \"MIT\",\n  \"author\": \"Rich Harris\",\n  \"main\": \"./dist/magic-string.cjs.js\",\n  \"module\": \"./dist/magic-string.es.mjs\",\n  \"jsnext:main\": \"./dist/magic-string.es.mjs\",\n  \"types\": \"./index.d.ts\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"import\": \"./dist/magic-string.es.mjs\",\n      \"require\": \"./dist/magic-string.cjs.js\"\n    }\n  },\n  \"files\": [\n    \"dist/*\",\n    \"index.d.ts\",\n    \"README.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"rollup -c\",\n    \"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -s\",\n    \"format\": \"prettier --single-quote --print-width 100 --use-tabs --write src/*.js src/**/*.js\",\n    \"lint\": \"eslint src test && publint\",\n    \"prepare\": \"npm run build\",\n    \"prepublishOnly\": \"npm run lint && rm -rf dist && npm test\",\n    \"release\": \"bumpp -x \\\"npm run changelog\\\" --all --commit --tag --push && npm publish\",\n    \"pretest\": \"npm run build\",\n    \"test\": \"mocha\",\n    \"bench\": \"npm run build && node benchmark/index.mjs\",\n    \"watch\": \"rollup -cw\"\n  },\n  \"devDependencies\": {\n    \"@rollup/plugin-node-resolve\": \"^14.1.0\",\n    \"@rollup/plugin-replace\": \"^4.0.0\",\n    \"benchmark\": \"^2.1.4\",\n    \"bumpp\": \"^8.2.1\",\n    \"conventional-changelog-cli\": \"^2.2.2\",\n    \"eslint\": \"^8.23.1\",\n    \"mocha\": \"^10.0.0\",\n    \"prettier\": \"^2.7.1\",\n    \"publint\": \"^0.1.7\",\n    \"rollup\": \"^2.79.1\",\n    \"source-map-js\": \"^1.0.2\",\n    \"source-map-support\": \"^0.5.21\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"dependencies\": {\n    \"@jridgewell/sourcemap-codec\": \"^1.4.13\"\n  }\n}\n"}},"README.md":{"file":{"contents":"# magic-string\n\n<a href=\"https://travis-ci.org/Rich-Harris/magic-string\">\n  <img src=\"http://img.shields.io/travis/Rich-Harris/magic-string.svg\"\n       alt=\"build status\">\n</a>\n<a href=\"https://npmjs.org/package/magic-string\">\n  <img src=\"https://img.shields.io/npm/v/magic-string.svg\"\n       alt=\"npm version\">\n</a>\n<a href=\"https://github.com/Rich-Harris/magic-string/blob/master/LICENSE.md\">\n  <img src=\"https://img.shields.io/npm/l/magic-string.svg\"\n       alt=\"license\">\n</a>\n\nSuppose you have some source code. You want to make some light modifications to it - replacing a few characters here and there, wrapping it with a header and footer, etc - and ideally you'd like to generate a [source map](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/) at the end of it. You've thought about using something like [recast](https://github.com/benjamn/recast) (which allows you to generate an AST from some JavaScript, manipulate it, and reprint it with a sourcemap without losing your comments and formatting), but it seems like overkill for your needs (or maybe the source code isn't JavaScript).\n\nYour requirements are, frankly, rather niche. But they're requirements that I also have, and for which I made magic-string. It's a small, fast utility for manipulating strings and generating sourcemaps.\n\n## Installation\n\nmagic-string works in both node.js and browser environments. For node, install with npm:\n\n```bash\nnpm i magic-string\n```\n\nTo use in browser, grab the [magic-string.umd.js](https://unpkg.com/magic-string/dist/magic-string.umd.js) file and add it to your page:\n\n```html\n<script src='magic-string.umd.js'></script>\n```\n\n(It also works with various module systems, if you prefer that sort of thing - it has a dependency on [vlq](https://github.com/Rich-Harris/vlq).)\n\n## Usage\n\nThese examples assume you're in node.js, or something similar:\n\n```js\nimport MagicString from 'magic-string';\nimport fs from 'fs'\n\nconst s = new MagicString('problems = 99');\n\ns.update(0, 8, 'answer');\ns.toString(); // 'answer = 99'\n\ns.update(11, 13, '42'); // character indices always refer to the original string\ns.toString(); // 'answer = 42'\n\ns.prepend('var ').append(';'); // most methods are chainable\ns.toString(); // 'var answer = 42;'\n\nconst map = s.generateMap({\n  source: 'source.js',\n  file: 'converted.js.map',\n  includeContent: true\n}); // generates a v3 sourcemap\n\nfs.writeFileSync('converted.js', s.toString());\nfs.writeFileSync('converted.js.map', map.toString());\n```\n\nYou can pass an options argument:\n\n```js\nconst s = new MagicString(someCode, {\n  // these options will be used if you later call `bundle.addSource( s )` - see below\n  filename: 'foo.js',\n  indentExclusionRanges: [/*...*/],\n  // market source as ignore in DevTools, see below #Bundling\n  ignoreList: false\n});\n```\n\n## Methods\n\n### s.addSourcemapLocation( index )\n\nAdds the specified character index (with respect to the original string) to sourcemap mappings, if `hires` is `false` (see below).\n\n### s.append( content )\n\nAppends the specified content to the end of the string. Returns `this`.\n\n### s.appendLeft( index, content )\n\nAppends the specified `content` at the `index` in the original string. If a range *ending* with `index` is subsequently moved, the insert will be moved with it. Returns `this`. See also `s.prependLeft(...)`.\n\n### s.appendRight( index, content )\n\nAppends the specified `content` at the `index` in the original string. If a range *starting* with `index` is subsequently moved, the insert will be moved with it. Returns `this`. See also `s.prependRight(...)`.\n\n### s.clone()\n\nDoes what you'd expect.\n\n### s.generateDecodedMap( options )\n\nGenerates a sourcemap object with raw mappings in array form, rather than encoded as a string. See `generateMap` documentation below for options details. Useful if you need to manipulate the sourcemap further, but most of the time you will use `generateMap` instead.\n\n### s.generateMap( options )\n\nGenerates a [version 3 sourcemap](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit). All options are, well, optional:\n\n* `file` - the filename where you plan to write the sourcemap\n* `source` - the filename of the file containing the original source\n* `includeContent` - whether to include the original content in the map's `sourcesContent` array\n* `hires` - whether the mapping should be high-resolution. Hi-res mappings map every single character, meaning (for example) your devtools will always be able to pinpoint the exact location of function calls and so on. With lo-res mappings, devtools may only be able to identify the correct line - but they're quicker to generate and less bulky. If sourcemap locations have been specified with `s.addSourceMapLocation()`, they will be used here.\n\nThe returned sourcemap has two (non-enumerable) methods attached for convenience:\n\n* `toString` - returns the equivalent of `JSON.stringify(map)`\n* `toUrl` - returns a DataURI containing the sourcemap. Useful for doing this sort of thing:\n\n```js\ncode += '\\n//# sourceMappingURL=' + map.toUrl();\n```\n\n### s.hasChanged()\n\nIndicates if the string has been changed.\n\n### s.indent( prefix[, options] )\n\nPrefixes each line of the string with `prefix`. If `prefix` is not supplied, the indentation will be guessed from the original content, falling back to a single tab character. Returns `this`.\n\nThe `options` argument can have an `exclude` property, which is an array of `[start, end]` character ranges. These ranges will be excluded from the indentation - useful for (e.g.) multiline strings.\n\n### s.insertLeft( index, content )\n\n**DEPRECATED** since 0.17 – use `s.appendLeft(...)` instead\n\n### s.insertRight( index, content )\n\n**DEPRECATED** since 0.17 – use `s.prependRight(...)` instead\n\n### s.isEmpty()\n\nReturns true if the resulting source is empty (disregarding white space).\n\n### s.locate( index )\n\n**DEPRECATED** since 0.10 – see [#30](https://github.com/Rich-Harris/magic-string/pull/30)\n\n### s.locateOrigin( index )\n\n**DEPRECATED** since 0.10 – see [#30](https://github.com/Rich-Harris/magic-string/pull/30)\n\n### s.move( start, end, index )\n\nMoves the characters from `start` and `end` to `index`. Returns `this`.\n\n### s.overwrite( start, end, content[, options] )\n\nReplaces the characters from `start` to `end` with `content`, along with the appended/prepended content in that range. The same restrictions as `s.remove()` apply. Returns `this`.\n\nThe fourth argument is optional. It can have a `storeName` property — if `true`, the original name will be stored for later inclusion in a sourcemap's `names` array — and a `contentOnly` property which determines whether only the content is overwritten, or anything that was appended/prepended to the range as well.\n\nIt may be preferred to use `s.update(...)` instead if you wish to avoid overwriting the appended/prepended content.\n\n### s.prepend( content )\n\nPrepends the string with the specified content. Returns `this`.\n\n### s.prependLeft ( index, content )\n\nSame as `s.appendLeft(...)`, except that the inserted content will go *before* any previous appends or prepends at `index`\n\n### s.prependRight ( index, content )\n\nSame as `s.appendRight(...)`, except that the inserted content will go *before* any previous appends or prepends at `index`\n\n### s.replace( regexpOrString, substitution )\n\nString replacement with RegExp or string. When using a RegExp, replacer function is also supported. Returns `this`.\n\n```ts\nimport MagicString from 'magic-string'\n\nconst s = new MagicString(source)\n\ns.replace('foo', 'bar')\ns.replace(/foo/g, 'bar')\ns.replace(/(\\w)(\\d+)/g, (_, $1, $2) => $1.toUpperCase() + $2)\n```\n\nThe differences from [`String.replace`]((https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)):\n- It will always match against the **original string**\n- It mutates the magic string state (use `.clone()` to be immutable)\n\n### s.replaceAll( regexpOrString, substitution )\n\nSame as `s.replace`, but replace all matched strings instead of just one.\nIf `substitution` is a regex, then it must have the global (`g`) flag set, or a `TypeError` is thrown. Matches the behavior of the bultin [`String.property.replaceAll`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll).\n\n### s.remove( start, end )\n\nRemoves the characters from `start` to `end` (of the original string, **not** the generated string). Removing the same content twice, or making removals that partially overlap, will cause an error. Returns `this`.\n\n### s.slice( start, end )\n\nReturns the content of the generated string that corresponds to the slice between `start` and `end` of the original string. Throws error if the indices are for characters that were already removed.\n\n### s.snip( start, end )\n\nReturns a clone of `s`, with all content before the `start` and `end` characters of the original string removed.\n\n### s.toString()\n\nReturns the generated string.\n\n### s.trim([ charType ])\n\nTrims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start and end. Returns `this`.\n\n### s.trimStart([ charType ])\n\nTrims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the start. Returns `this`.\n\n### s.trimEnd([ charType ])\n\nTrims content matching `charType` (defaults to `\\s`, i.e. whitespace) from the end. Returns `this`.\n\n### s.trimLines()\n\nRemoves empty lines from the start and end. Returns `this`.\n\n### s.update( start, end, content[, options] )\n\nReplaces the characters from `start` to `end` with `content`. The same restrictions as `s.remove()` apply. Returns `this`.\n\nThe fourth argument is optional. It can have a `storeName` property — if `true`, the original name will be stored for later inclusion in a sourcemap's `names` array — and an `overwrite` property which defaults to `false` and determines whether anything that was appended/prepended to the range will be overwritten along with the original content.\n\n`s.update(start, end, content)` is equivalent to `s.overwrite(start, end, content, { contentOnly: true })`.\n\n## Bundling\n\nTo concatenate several sources, use `MagicString.Bundle`:\n\n```js\nconst bundle = new MagicString.Bundle();\n\nbundle.addSource({\n  filename: 'foo.js',\n  content: new MagicString('var answer = 42;')\n});\n\nbundle.addSource({\n  filename: 'bar.js',\n  content: new MagicString('console.log( answer )')\n});\n\n// Sources can be marked as ignore-listed, which provides a hint to debuggers\n// to not step into this code and also don't show the source files depending\n// on user preferences.\nbundle.addSource({\n  filename: 'some-3rdparty-library.js',\n  content: new MagicString('function myLib(){}'),\n  ignoreList: false // <--\n})\n\n// Advanced: a source can include an `indentExclusionRanges` property\n// alongside `filename` and `content`. This will be passed to `s.indent()`\n// - see documentation above\n\nbundle.indent() // optionally, pass an indent string, otherwise it will be guessed\n  .prepend('(function () {\\n')\n  .append('}());');\n\nbundle.toString();\n// (function () {\n//   var answer = 42;\n//   console.log( answer );\n// }());\n\n// options are as per `s.generateMap()` above\nconst map = bundle.generateMap({\n  file: 'bundle.js',\n  includeContent: true,\n  hires: true\n});\n```\n\nAs an alternative syntax, if you a) don't have `filename` or `indentExclusionRanges` options, or b) passed those in when you used `new MagicString(...)`, you can simply pass the `MagicString` instance itself:\n\n```js\nconst bundle = new MagicString.Bundle();\nconst source = new MagicString(someCode, {\n  filename: 'foo.js'\n});\n\nbundle.addSource(source);\n```\n\n## License\n\nMIT\n"}}}}