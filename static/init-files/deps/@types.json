{"directory":{"cookie":{"directory":{"index.d.ts":{"file":{"contents":"// Type definitions for cookie 0.5\n// Project: https://github.com/jshttp/cookie\n// Definitions by: Pine Mizune <https://github.com/pine>\n//                 Piotr Błażejewicz <https://github.com/peterblazejewicz>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\n/**\n * Basic HTTP cookie parser and serializer for HTTP servers.\n */\n\n/**\n * Additional serialization options\n */\nexport interface CookieSerializeOptions {\n    /**\n     * Specifies the value for the {@link https://tools.ietf.org/html/rfc6265#section-5.2.3|Domain Set-Cookie attribute}. By default, no\n     * domain is set, and most clients will consider the cookie to apply to only\n     * the current domain.\n     */\n    domain?: string | undefined;\n\n    /**\n     * Specifies a function that will be used to encode a cookie's value. Since\n     * value of a cookie has a limited character set (and must be a simple\n     * string), this function can be used to encode a value into a string suited\n     * for a cookie's value.\n     *\n     * The default function is the global `encodeURIComponent`, which will\n     * encode a JavaScript string into UTF-8 byte sequences and then URL-encode\n     * any that fall outside of the cookie range.\n     */\n    encode?(value: string): string;\n\n    /**\n     * Specifies the `Date` object to be the value for the {@link https://tools.ietf.org/html/rfc6265#section-5.2.1|`Expires` `Set-Cookie` attribute}. By default,\n     * no expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete\n     * it on a condition like exiting a web browser application.\n     *\n     * *Note* the {@link https://tools.ietf.org/html/rfc6265#section-5.3|cookie storage model specification}\n     * states that if both `expires` and `maxAge` are set, then `maxAge` takes precedence, but it is\n     * possible not all clients by obey this, so if both are set, they should\n     * point to the same date and time.\n     */\n    expires?: Date | undefined;\n    /**\n     * Specifies the boolean value for the {@link https://tools.ietf.org/html/rfc6265#section-5.2.6|`HttpOnly` `Set-Cookie` attribute}.\n     * When truthy, the `HttpOnly` attribute is set, otherwise it is not. By\n     * default, the `HttpOnly` attribute is not set.\n     *\n     * *Note* be careful when setting this to true, as compliant clients will\n     * not allow client-side JavaScript to see the cookie in `document.cookie`.\n     */\n    httpOnly?: boolean | undefined;\n    /**\n     * Specifies the number (in seconds) to be the value for the `Max-Age`\n     * `Set-Cookie` attribute. The given number will be converted to an integer\n     * by rounding down. By default, no maximum age is set.\n     *\n     * *Note* the {@link https://tools.ietf.org/html/rfc6265#section-5.3|cookie storage model specification}\n     * states that if both `expires` and `maxAge` are set, then `maxAge` takes precedence, but it is\n     * possible not all clients by obey this, so if both are set, they should\n     * point to the same date and time.\n     */\n    maxAge?: number | undefined;\n    /**\n     * Specifies the value for the {@link https://tools.ietf.org/html/rfc6265#section-5.2.4|`Path` `Set-Cookie` attribute}.\n     * By default, the path is considered the \"default path\".\n     */\n    path?: string | undefined;\n    /**\n     * Specifies the `string` to be the value for the [`Priority` `Set-Cookie` attribute][rfc-west-cookie-priority-00-4.1].\n     *\n     * - `'low'` will set the `Priority` attribute to `Low`.\n     * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n     * - `'high'` will set the `Priority` attribute to `High`.\n     *\n     * More information about the different priority levels can be found in\n     * [the specification][rfc-west-cookie-priority-00-4.1].\n     *\n     * **note** This is an attribute that has not yet been fully standardized, and may change in the future.\n     * This also means many clients may ignore this attribute until they understand it.\n     */\n    priority?: 'low' | 'medium' | 'high' | undefined;\n    /**\n     * Specifies the boolean or string to be the value for the {@link https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|`SameSite` `Set-Cookie` attribute}.\n     *\n     * - `true` will set the `SameSite` attribute to `Strict` for strict same\n     * site enforcement.\n     * - `false` will not set the `SameSite` attribute.\n     * - `'lax'` will set the `SameSite` attribute to Lax for lax same site\n     * enforcement.\n     * - `'strict'` will set the `SameSite` attribute to Strict for strict same\n     * site enforcement.\n     *  - `'none'` will set the SameSite attribute to None for an explicit\n     *  cross-site cookie.\n     *\n     * More information about the different enforcement levels can be found in {@link https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|the specification}.\n     *\n     * *note* This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.\n     */\n    sameSite?: true | false | 'lax' | 'strict' | 'none' | undefined;\n    /**\n     * Specifies the boolean value for the {@link https://tools.ietf.org/html/rfc6265#section-5.2.5|`Secure` `Set-Cookie` attribute}. When truthy, the\n     * `Secure` attribute is set, otherwise it is not. By default, the `Secure` attribute is not set.\n     *\n     * *Note* be careful when setting this to `true`, as compliant clients will\n     * not send the cookie back to the server in the future if the browser does\n     * not have an HTTPS connection.\n     */\n    secure?: boolean | undefined;\n}\n\n/**\n * Additional parsing options\n */\nexport interface CookieParseOptions {\n    /**\n     * Specifies a function that will be used to decode a cookie's value. Since\n     * the value of a cookie has a limited character set (and must be a simple\n     * string), this function can be used to decode a previously-encoded cookie\n     * value into a JavaScript string or other object.\n     *\n     * The default function is the global `decodeURIComponent`, which will decode\n     * any URL-encoded sequences into their byte representations.\n     *\n     * *Note* if an error is thrown from this function, the original, non-decoded\n     * cookie value will be returned as the cookie's value.\n     */\n    decode?(value: string): string;\n}\n\n/**\n * Parse an HTTP Cookie header string and returning an object of all cookie\n * name-value pairs.\n *\n * @param str the string representing a `Cookie` header value\n * @param [options] object containing parsing options\n */\nexport function parse(str: string, options?: CookieParseOptions): Record<string, string>;\n\n/**\n * Serialize a cookie name-value pair into a `Set-Cookie` header string.\n *\n * @param name the name for the cookie\n * @param value value to set the cookie to\n * @param [options] object containing serialization options\n * @throws {TypeError} when `maxAge` options is invalid\n */\nexport function serialize(name: string, value: string, options?: CookieSerializeOptions): string;\n"}},"LICENSE":{"file":{"contents":"    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"}},"package.json":{"file":{"contents":"{\n    \"name\": \"@types/cookie\",\n    \"version\": \"0.5.1\",\n    \"description\": \"TypeScript definitions for cookie\",\n    \"homepage\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cookie\",\n    \"license\": \"MIT\",\n    \"contributors\": [\n        {\n            \"name\": \"Pine Mizune\",\n            \"url\": \"https://github.com/pine\",\n            \"githubUsername\": \"pine\"\n        },\n        {\n            \"name\": \"Piotr Błażejewicz\",\n            \"url\": \"https://github.com/peterblazejewicz\",\n            \"githubUsername\": \"peterblazejewicz\"\n        }\n    ],\n    \"main\": \"\",\n    \"types\": \"index.d.ts\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/DefinitelyTyped/DefinitelyTyped.git\",\n        \"directory\": \"types/cookie\"\n    },\n    \"scripts\": {},\n    \"dependencies\": {},\n    \"typesPublisherContentHash\": \"889816d642ca5301186f4728f4ed8cefb740a4dddf3b408be1ae3b4fb7886a61\",\n    \"typeScriptVersion\": \"3.9\"\n}"}},"README.md":{"file":{"contents":"# Installation\r\n> `npm install --save @types/cookie`\r\n\r\n# Summary\r\nThis package contains type definitions for cookie (https://github.com/jshttp/cookie).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cookie.\r\n\r\n### Additional Details\r\n * Last updated: Wed, 20 Apr 2022 20:01:27 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by [Pine Mizune](https://github.com/pine), and [Piotr Błażejewicz](https://github.com/peterblazejewicz).\r\n"}}}},"pug":{"directory":{"index.d.ts":{"file":{"contents":"// Type definitions for pug 2.0\n// Project: https://github.com/pugjs/pug\n// Definitions by: TonyYang <https://github.com/TonyPythoneer>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\n/**\n * Table of Contents\n *\n *  - Options https://pugjs.org/api/reference.html#options\n *  - Methods https://pugjs.org/api/reference.html#methods\n *\n * The order of contents is according to pugjs API document.\n */\ndeclare module 'pug' {\n    ////////////////////////////////////////////////////////////\n    /// Options https://pugjs.org/api/reference.html#options ///\n    ////////////////////////////////////////////////////////////\n    export interface Options {\n        /** The name of the file being compiled. Used in exceptions, and required for relative includes and extends. Defaults to 'Pug'. */\n        filename?: string | undefined,\n        /** The root directory of all absolute inclusion. */\n        basedir?: string | undefined,\n        /** If the doctype is not specified as part of the template, you can specify it here. It is sometimes useful to get self-closing tags and remove mirroring of boolean attributes; see doctype documentation for more information. */\n        doctype?: string | undefined,\n        /** Adds whitespace to the resulting HTML to make it easier for a human to read using '  ' as indentation. If a string is specified, that will be used as indentation instead (e.g. '\\t'). Defaults to false. */\n        pretty?: boolean | string | undefined,\n        /** Hash table of custom filters. Defaults to undefined. */\n        filters?: any,\n        /** Use a self namespace to hold the locals. It will speed up the compilation, but instead of writing variable you will have to write self.variable to access a property of the locals object. Defaults to false. */\n        self?: boolean | undefined,\n        /** If set to true, the tokens and function body are logged to stdout. */\n        debug?: boolean | undefined,\n        /** If set to true, the function source will be included in the compiled template for better error messages (sometimes useful in development). It is enabled by default unless used with Express in production mode. */\n        compileDebug?: boolean | undefined,\n        /** Add a list of global names to make accessible in templates. */\n        globals?: Array<string> | undefined,\n        /** If set to true, compiled functions are cached. filename must be set as the cache key. Only applies to render functions. Defaults to false. */\n        cache?: boolean | undefined,\n        /** Inline runtime functions instead of require-ing them from a shared version. For compileClient functions, the default is true so that one does not have to include the runtime. For all other compilation or rendering types, the default is false. */\n        inlineRuntimeFunctions?: boolean | undefined,\n        /** The name of the template function. Only applies to compileClient functions. Defaults to 'template'. */\n        name?: string | undefined\n    }\n\n    ////////////////////////////////////////////////////////////\n    /// Methods https://pugjs.org/api/reference.html#methods ///\n    ////////////////////////////////////////////////////////////\n    /**\n     * Compile a Pug template to a function which can be rendered multiple times with different locals.\n     */\n    export function compile(template: string, options?: Options): compileTemplate;\n\n    /**\n     * Compile a Pug template from a file to a function which can be rendered multiple times with different locals.\n     */\n    export function compileFile(path: string, options?: Options): compileTemplate;\n\n    /**\n     * Compile a Pug template to a string of JavaScript that can be used client side along with the Pug runtime.\n     */\n    export function compileClient(template: string, options?: Options): string;\n\n    /**\n     * Compile a Pug template to an object of the form:\n     * {\n     *   'body': 'function (locals) {...}',\n     *   'dependencies': ['filename.pug']\n     * }\n     * that can be used client side along with the Pug runtime.\n     * You should only use this method if you need dependencies to implement something like watching for changes to the Pug files.\n     */\n    export function compileClientWithDependenciesTracked(template: string, options?: Options): {\n        body: string;\n        dependencies: string[];\n    };\n\n    /**\n     * Compile a Pug template file to a string of JavaScript that can be used client side along with the Pug runtime.\n     */\n    export function compileFileClient(path: string, options?: Options): string;\n\n    /**\n     * Compile a Pug template and render it without locals to html string.\n     */\n    export function render(template: string): string;\n    /**\n     * Compile a Pug template and render it with locals to html string.\n     * @param {(Options & LocalsObject)} options Pug Options and rendering locals\n     */\n    export function render(template: string, options: Options & LocalsObject): string;\n    /**\n     * Compile a Pug template and render it without locals to html string.\n     * @param {((err: Error | null, html: string) => void)} callback Node.js-style callback receiving the rendered results. This callback is called synchronously.\n     */\n    export function render(template: string, callback: (err: Error | null, html: string) => void): void;\n    /**\n     * Compile a Pug template and render it with locals to html string.\n     * @param {(Options & LocalsObject)} options Pug Options and rendering locals\n     * @param {((err: Error | null, html: string) => void)} callback Node.js-style callback receiving the rendered results. This callback is called synchronously.\n     */\n    export function render(template: string, options: Options & LocalsObject, callback: (err: Error | null, html: string) => void): void;\n\n    /**\n     * Compile a Pug template from a file and render it without locals to html string.\n     */\n    export function renderFile(path: string): string;\n    /**\n     * Compile a Pug template from a file and render it with locals to html string.\n     * @param {(Options & LocalsObject)} options Pug Options and rendering locals\n     */\n    export function renderFile(path: string, options: Options & LocalsObject): string;\n    /**\n     * Compile a Pug template from a file and render it without locals to html string.\n     * @param {((err: Error | null, html: string) => void)} callback Node.js-style callback receiving the rendered results. This callback is called synchronously.\n     */\n    export function renderFile(path: string, callback: (err: Error | null, html: string) => void): void;\n    /**\n     * Compile a Pug template from a file and render it with locals to html string.\n     * @param {(Options & LocalsObject)} options Pug Options and rendering locals\n     * @param {((err: Error | null, html: string) => void)} callback Node.js-style callback receiving the rendered results. This callback is called synchronously.\n     */\n    export function renderFile(path: string, options: Options & LocalsObject, callback: (err: Error | null, html: string) => void): void;\n\n    ///////////////////\n    ///    Types    ///\n    ///////////////////\n\n    /**\n     * A function that can be use to render html string of compiled template.\n     */\n    export type compileTemplate = (locals?: LocalsObject) => string;\n\n    /**\n     * An object that can have multiple properties of any type.\n     */\n    export interface LocalsObject {\n        [propName: string]: any;\n    }\n}\n"}},"LICENSE":{"file":{"contents":"    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"}},"package.json":{"file":{"contents":"{\n    \"name\": \"@types/pug\",\n    \"version\": \"2.0.6\",\n    \"description\": \"TypeScript definitions for pug\",\n    \"homepage\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/pug\",\n    \"license\": \"MIT\",\n    \"contributors\": [\n        {\n            \"name\": \"TonyYang\",\n            \"url\": \"https://github.com/TonyPythoneer\",\n            \"githubUsername\": \"TonyPythoneer\"\n        }\n    ],\n    \"main\": \"\",\n    \"types\": \"index.d.ts\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/DefinitelyTyped/DefinitelyTyped.git\",\n        \"directory\": \"types/pug\"\n    },\n    \"scripts\": {},\n    \"dependencies\": {},\n    \"typesPublisherContentHash\": \"9109540393ac30fc3ac3057f8f68afa8a7b5b81d8d13fae50596e012b993951d\",\n    \"typeScriptVersion\": \"3.8\"\n}"}},"README.md":{"file":{"contents":"# Installation\r\n> `npm install --save @types/pug`\r\n\r\n# Summary\r\nThis package contains type definitions for pug (https://github.com/pugjs/pug).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/pug.\r\n\r\n### Additional Details\r\n * Last updated: Thu, 23 Dec 2021 23:35:19 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by [TonyYang](https://github.com/TonyPythoneer).\r\n"}}}},"sass":{"directory":{"LICENSE":{"file":{"contents":"    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"}},"package.json":{"file":{"contents":"{\n    \"name\": \"@types/sass\",\n    \"version\": \"1.45.0\",\n    \"description\": \"Stub TypeScript definitions entry for sass, which provides its own types definitions\",\n    \"main\": \"\",\n    \"scripts\": {},\n    \"license\": \"MIT\",\n    \"dependencies\": {\n        \"sass\": \"*\"\n    },\n    \"deprecated\": \"This is a stub types definition. sass provides its own type definitions, so you do not need this installed.\"\n}"}},"README.md":{"file":{"contents":"This is a stub types definition for @types/sass (https://github.com/sass/dart-sass).\n\nsass provides its own type definitions, so you don't need @types/sass installed!"}}}}}}